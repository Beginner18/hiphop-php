#
# $Id$
#
# - Find libmemcached
# Find libmemcached
#
#  LIBMEMCACHED_INCLUDE_DIRS - where to find libmemcached/memcached.h, etc.
#  LIBMEMCACHED_LIBRARIES    - List of libraries when using libmemcached.
#  LIBMEMCACHED_FOUND        - True if libmemcached found.


IF (LIBMEMCACHED_INCLUDE_DIRS)
  # Already in cache, be silent
  SET(LIBMEMCACHED_FIND_QUIETLY TRUE)
ENDIF ()

FIND_PATH(LIBMEMCACHED_INCLUDE_DIR libmemcached/memcached.h)

FIND_LIBRARY(LIBMEMCACHED_LIBRARY memcached)

# handle the QUIETLY and REQUIRED arguments and set Libmemcached_FOUND to TRUE if
# all listed variables are TRUE
INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(Libmemcached DEFAULT_MSG LIBMEMCACHED_LIBRARY LIBMEMCACHED_INCLUDE_DIR)

SET(LIBMEMCACHED_VERSION 0)

IF(LIBMEMCACHED_FOUND)
  if (EXISTS "${LIBMEMCACHED_INCLUDE_DIR}/libmemcached/configure.h")
    FILE(READ "${LIBMEMCACHED_INCLUDE_DIR}/libmemcached/configure.h" _MEMCACHE_VERSION_CONENTS)
    STRING(REGEX REPLACE ".*#define LIBMEMCACHED_VERSION_STRING \"([0-9.]+)\".*" "\\1" LIBMEMCACHED_VERSION "${_MEMCACHE_VERSION_CONENTS}")
  endif()
ENDIF()

IF(LIBMEMCACHED_FOUND)
  SET(LIBMEMCACHED_LIBRARIES ${LIBMEMCACHED_LIBRARY})
  SET(LIBMEMCACHED_INCLUDE_DIRS ${LIBMEMCACHED_INCLUDE_DIR})
ELSE()
  SET(LIBMEMCACHED_LIBRARIES)
  SET(LIBMEMCACHED_INCLUDE_DIRS)
ENDIF()

MARK_AS_ADVANCED(LIBMEMCACHED_LIBRARIES LIBMEMCACHED_INCLUDE_DIRS)
