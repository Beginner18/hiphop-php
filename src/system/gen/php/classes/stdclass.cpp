/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010- Facebook, Inc. (http://www.facebook.com)         |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/
// @generated by HipHop Compiler

#include <php/classes/stdclass.h>
#include <php/classes/stdclass.fws.h>

// Dependencies
#include <runtime/ext/ext.h>
#include <runtime/eval/eval.h>
namespace hphp_impl_starter {}

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

/* preface starts */
extern CallInfo ci_;
/* preface finishes */
/* SRC: classes/stdclass.php line 4 */
IMPLEMENT_CLASS_NO_DEFAULT_SWEEP(stdClass)
const InstanceOfInfo c_stdClass::s_instanceof_table[] = {
  {0x3D69936178BA13F7LL,1,"stdClass",&cw_stdClass},
};
const int c_stdClass::s_instanceof_index[] = {
  1,
  -1,0,
};
const ObjectStaticCallbacks cw_stdClass = {
  (ObjectData*(*)(ObjectData*))coo_stdClass,
  c_stdClass::s_call_info_table,c_stdClass::s_call_info_index,
  c_stdClass::s_instanceof_table,c_stdClass::s_instanceof_index,
  &c_stdClass::s_class_name,
  0,0,0,0
};
/* SRC: classes/stdclass.php line 8 */
IMPLEMENT_CLASS_NO_DEFAULT_SWEEP(__PHP_Incomplete_Class)
const InstanceOfInfo c___PHP_Incomplete_Class::s_instanceof_table[] = {
  {0x6576EACCCE24D694LL,1,"__PHP_Incomplete_Class",&cw___PHP_Incomplete_Class},
};
const int c___PHP_Incomplete_Class::s_instanceof_index[] = {
  1,
  0,-1,
};
const ObjectStaticCallbacks cw___PHP_Incomplete_Class = {
  (ObjectData*(*)(ObjectData*))coo___PHP_Incomplete_Class,
  c___PHP_Incomplete_Class::s_call_info_table,c___PHP_Incomplete_Class::s_call_info_index,
  c___PHP_Incomplete_Class::s_instanceof_table,c___PHP_Incomplete_Class::s_instanceof_index,
  &c___PHP_Incomplete_Class::s_class_name,
  0,0,0,0
};
ObjectData *coo_stdClass() {
  return NEWOBJ(c_stdClass)();
}
ObjectData *coo___PHP_Incomplete_Class() {
  return NEWOBJ(c___PHP_Incomplete_Class)();
}

///////////////////////////////////////////////////////////////////////////////
}
