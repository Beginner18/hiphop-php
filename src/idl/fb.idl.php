<?php
/**
 * Automatically generated by running "php schema.php fb".
 *
 * You may modify the file, but re-running schema.php against this file will
 * standardize the format without losing your schema changes. It does lose
 * any changes that are not part of schema. Use "note" field to comment on
 * schema itself, and "note" fields are not used in any code generation but
 * only staying within this file.
 */
///////////////////////////////////////////////////////////////////////////////
// Preamble: C++ code inserted at beginning of ext_{name}.h

DefinePreamble(<<<CPP

CPP
);

///////////////////////////////////////////////////////////////////////////////
// Constants
//
// array (
//   'name' => name of the constant
//   'type' => type of the constant
//   'note' => additional note about this constant's schema
// )

DefineConstant(
  array(
    'name'   => "FB_UNSERIALIZE_NONSTRING_VALUE",
    'type'   => Int64,
  ));

DefineConstant(
  array(
    'name'   => "FB_UNSERIALIZE_UNEXPECTED_END",
    'type'   => Int64,
  ));

DefineConstant(
  array(
    'name'   => "FB_UNSERIALIZE_UNRECOGNIZED_OBJECT_TYPE",
    'type'   => Int64,
  ));

DefineConstant(
  array(
    'name'   => "FB_UNSERIALIZE_UNEXPECTED_ARRAY_KEY_TYPE",
    'type'   => Int64,
  ));

DefineConstant(
  array(
    'name'   => "XHPROF_FLAGS_NO_BUILTINS",
    'type'   => Int64,
  ));

DefineConstant(
  array(
    'name'   => "XHPROF_FLAGS_CPU",
    'type'   => Int64,
  ));

DefineConstant(
  array(
    'name'   => "XHPROF_FLAGS_MEMORY",
    'type'   => Int64,
  ));

DefineConstant(
  array(
    'name'   => "XHPROF_FLAGS_VTSC",
    'type'   => Int64,
  ));

DefineConstant(
  array(
    'name'   => "XHPROF_FLAGS_TRACE",
    'type'   => Int64,
  ));

DefineConstant(
  array(
    'name'   => "XHPROF_FLAGS_MEASURE_XHPROF_DISABLE",
    'type'   => Int64,
  ));


///////////////////////////////////////////////////////////////////////////////
// Functions
//
// array (
//   'name'   => name of the function
//   'desc'   => description of the function's purpose
//   'flags'  => attributes of the function, see base.php for possible values
//   'opt'    => optimization callback function's name for compiler
//   'note'   => additional note about this function's schema
//   'return' =>
//      array (
//        'type'  => return type, use Reference for ref return
//        'desc'  => description of the return value
//      )
//   'args'   => arguments
//      array (
//        'name'  => name of the argument
//        'type'  => type of the argument, use Reference for output parameter
//        'value' => default value of the argument
//        'desc'  => description of the argument
//      )
// )

DefineFunction(
  array(
    'name'   => "fb_thrift_serialize",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Variant,
    ),
    'args'   => array(
      array(
        'name'   => "thing",
        'type'   => Variant,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_thrift_unserialize",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Variant,
    ),
    'args'   => array(
      array(
        'name'   => "thing",
        'type'   => Variant,
      ),
      array(
        'name'   => "success",
        'type'   => Variant | Reference,
      ),
      array(
        'name'   => "errcode",
        'type'   => Variant | Reference,
        'value'  => "null_variant",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_serialize",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Variant,
    ),
    'args'   => array(
      array(
        'name'   => "thing",
        'type'   => Variant,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_unserialize",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Variant,
    ),
    'args'   => array(
      array(
        'name'   => "thing",
        'type'   => Variant,
      ),
      array(
        'name'   => "success",
        'type'   => Variant | Reference,
      ),
      array(
        'name'   => "errcode",
        'type'   => Variant | Reference,
        'value'  => "null_variant",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_renamed_functions",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => null,
    ),
    'args'   => array(
      array(
        'name'   => "names",
        'type'   => StringVec,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_rename_function",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "orig_func_name",
        'type'   => String,
      ),
      array(
        'name'   => "new_func_name",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_utf8ize",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "input",
        'type'   => Variant | Reference,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_call_user_func_safe",
    'flags'  =>  VariableArguments | HipHopSpecific | HasOptFunction,
    'opt'    => "hphp_opt_fb_call_user_func",
    'return' => array(
      'type'   => VariantVec,
    ),
    'args'   => array(
      array(
        'name'   => "function",
        'type'   => Variant,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_call_user_func_safe_return",
    'flags'  =>  VariableArguments | HipHopSpecific | HasOptFunction,
    'opt'    => "hphp_opt_fb_call_user_func",
    'return' => array(
      'type'   => Variant,
    ),
    'args'   => array(
      array(
        'name'   => "function",
        'type'   => Variant,
      ),
      array(
        'name'   => "def",
        'type'   => Variant,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_call_user_func_array_safe",
    'flags'  =>  HipHopSpecific | HasOptFunction,
    'opt'    => "hphp_opt_fb_call_user_func",
    'return' => array(
      'type'   => VariantVec,
    ),
    'args'   => array(
      array(
        'name'   => "function",
        'type'   => Variant,
      ),
      array(
        'name'   => "params",
        'type'   => VariantVec,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_get_code_coverage",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Variant,
    ),
  ));

DefineFunction(
  array(
    'name'   => "xhprof_enable",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => null,
    ),
    'args'   => array(
      array(
        'name'   => "flags",
        'type'   => Int32,
      ),
      array(
        'name'   => "args",
        'type'   => StringVec,
        'value'  => "null_array",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xhprof_disable",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Variant,
    ),
  ));

DefineFunction(
  array(
    'name'   => "xhprof_sample_enable",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => null,
    ),
  ));

DefineFunction(
  array(
    'name'   => "xhprof_sample_disable",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Variant,
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_load_local_databases",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => null,
    ),
    'args'   => array(
      array(
        'name'   => "servers",
        'type'   => VariantMap,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_parallel_query",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => VariantMap,
    ),
    'args'   => array(
      array(
        'name'   => "sql_map",
        'type'   => VariantMap,
      ),
      array(
        'name'   => "max_thread",
        'type'   => Int32,
        'value'  => "50",
      ),
      array(
        'name'   => "combine_result",
        'type'   => Boolean,
        'value'  => "true",
      ),
      array(
        'name'   => "retry_query_on_fail",
        'type'   => Boolean,
        'value'  => "true",
      ),
      array(
        'name'   => "connect_timeout",
        'type'   => Int32,
        'value'  => "-1",
      ),
      array(
        'name'   => "read_timeout",
        'type'   => Int32,
        'value'  => "-1",
      ),
      array(
        'name'   => "timeout_in_ms",
        'type'   => Boolean,
        'value'  => "false",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_crossall_query",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => VariantMap,
    ),
    'args'   => array(
      array(
        'name'   => "sql",
        'type'   => String,
      ),
      array(
        'name'   => "max_thread",
        'type'   => Int32,
        'value'  => "50",
      ),
      array(
        'name'   => "retry_query_on_fail",
        'type'   => Boolean,
        'value'  => "true",
      ),
      array(
        'name'   => "connect_timeout",
        'type'   => Int32,
        'value'  => "-1",
      ),
      array(
        'name'   => "read_timeout",
        'type'   => Int32,
        'value'  => "-1",
      ),
      array(
        'name'   => "timeout_in_ms",
        'type'   => Boolean,
        'value'  => "false",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_set_taint",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => null,
    ),
    'args'   => array(
      array(
        'name'   => "str",
        'type'   => Variant | Reference,
      ),
      array(
        'name'   => "taint",
        'type'   => Int32,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_unset_taint",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => null,
    ),
    'args'   => array(
      array(
        'name'   => "str",
        'type'   => Variant | Reference,
      ),
      array(
        'name'   => "taint",
        'type'   => Int32,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_get_taint",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Int32,
    ),
    'args'   => array(
      array(
        'name'   => "str",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "fb_const_fetch",
    'flags'  =>  HipHopSpecific,
    'return' => array(
      'type'   => Variant,
    ),
    'args'   => array(
      array(
        'name'   => "key",
        'type'   => Variant,
      ),
    ),
  ));


///////////////////////////////////////////////////////////////////////////////
// Classes
//
// BeginClass
// array (
//   'name'   => name of the class
//   'desc'   => description of the class's purpose
//   'flags'  => attributes of the class, see base.php for possible values
//   'note'   => additional note about this class's schema
//   'parent' => parent class name, if any
//   'ifaces' => array of interfaces tihs class implements
//   'bases'  => extra internal and special base classes this class requires
//   'footer' => extra C++ inserted at end of class declaration
// )
//
// DefineConstant(..)
// DefineConstant(..)
// ...
// DefineFunction(..)
// DefineFunction(..)
// ...
// DefineProperty
// DefineProperty
//
// array (
//   'name'  => name of the property
//   'type'  => type of the property
//   'flags' => attributes of the property
//   'desc'  => description of the property
//   'note'  => additional note about this property's schema
// )
//
// EndClass()

