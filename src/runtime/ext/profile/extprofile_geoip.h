/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010- Facebook, Inc. (http://www.facebook.com)         |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXTPROFILE_GEOIP_H__
#define __EXTPROFILE_GEOIP_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <runtime/ext/ext_geoip.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

inline Variant x_geoip_db_avail(int64 database) {
  FUNCTION_INJECTION_BUILTIN(geoip_db_avail);
  return f_geoip_db_avail(database);
}

inline Variant x_geoip_db_filename(int64 database) {
  FUNCTION_INJECTION_BUILTIN(geoip_db_filename);
  return f_geoip_db_filename(database);
}

inline Array x_geoip_db_get_all_info() {
  FUNCTION_INJECTION_BUILTIN(geoip_db_get_all_info);
  return f_geoip_db_get_all_info();
}

inline Variant x_geoip_database_info(int64 database = k_GEOIP_COUNTRY_EDITION) {
  FUNCTION_INJECTION_BUILTIN(geoip_database_info);
  return f_geoip_database_info(database);
}

inline Variant x_geoip_country_code_by_name(CStrRef hostname) {
  FUNCTION_INJECTION_BUILTIN(geoip_country_code_by_name);
  return f_geoip_country_code_by_name(hostname);
}

inline Variant x_geoip_country_code3_by_name(CStrRef hostname) {
  FUNCTION_INJECTION_BUILTIN(geoip_country_code3_by_name);
  return f_geoip_country_code3_by_name(hostname);
}

inline Variant x_geoip_country_name_by_name(CStrRef hostname) {
  FUNCTION_INJECTION_BUILTIN(geoip_country_name_by_name);
  return f_geoip_country_name_by_name(hostname);
}

inline Variant x_geoip_continent_code_by_name(CStrRef hostname) {
  FUNCTION_INJECTION_BUILTIN(geoip_continent_code_by_name);
  return f_geoip_continent_code_by_name(hostname);
}

inline Variant x_geoip_org_by_name(CStrRef hostname) {
  FUNCTION_INJECTION_BUILTIN(geoip_org_by_name);
  return f_geoip_org_by_name(hostname);
}

inline Array x_geoip_record_by_name(CStrRef hostname) {
  FUNCTION_INJECTION_BUILTIN(geoip_record_by_name);
  return f_geoip_record_by_name(hostname);
}

inline Variant x_geoip_id_by_name(CStrRef hostname) {
  FUNCTION_INJECTION_BUILTIN(geoip_id_by_name);
  return f_geoip_id_by_name(hostname);
}

inline Array x_geoip_region_by_name(CStrRef hostname) {
  FUNCTION_INJECTION_BUILTIN(geoip_region_by_name);
  return f_geoip_region_by_name(hostname);
}

inline Variant x_geoip_isp_by_name(CStrRef hostname) {
  FUNCTION_INJECTION_BUILTIN(geoip_isp_by_name);
  return f_geoip_isp_by_name(hostname);
}

inline Variant x_geoip_region_name_by_code(CStrRef country_code, CStrRef region_code) {
  FUNCTION_INJECTION_BUILTIN(geoip_region_name_by_code);
  return f_geoip_region_name_by_code(country_code, region_code);
}

inline Variant x_geoip_time_zone_by_country_and_region(CStrRef country_code, CStrRef region_code = null_string) {
  FUNCTION_INJECTION_BUILTIN(geoip_time_zone_by_country_and_region);
  return f_geoip_time_zone_by_country_and_region(country_code, region_code);
}


///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXTPROFILE_GEOIP_H__
