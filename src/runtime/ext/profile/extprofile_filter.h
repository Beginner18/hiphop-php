/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010- Facebook, Inc. (http://www.facebook.com)         |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXTPROFILE_FILTER_H__
#define __EXTPROFILE_FILTER_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <runtime/ext/ext_filter.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

inline bool x_filter_has_var(int type, CStrRef variable_name) {
  FUNCTION_INJECTION_BUILTIN(filter_has_var);
  return f_filter_has_var(type, variable_name);
}

inline Variant x_filter_id(CStrRef filtername) {
  FUNCTION_INJECTION_BUILTIN(filter_id);
  return f_filter_id(filtername);
}

inline Variant x_filter_input_array(int type, CVarRef definition = k_FILTER_DEFAULT) {
  FUNCTION_INJECTION_BUILTIN(filter_input_array);
  return f_filter_input_array(type, definition);
}

inline Variant x_filter_input(int type, CStrRef variable_name, int filter = k_FILTER_DEFAULT, CVarRef options = null_array) {
  FUNCTION_INJECTION_BUILTIN(filter_input);
  return f_filter_input(type, variable_name, filter, options);
}

inline Variant x_filter_list() {
  FUNCTION_INJECTION_BUILTIN(filter_list);
  return f_filter_list();
}

inline Variant x_filter_var_array(CArrRef data, CVarRef definition = k_FILTER_DEFAULT) {
  FUNCTION_INJECTION_BUILTIN(filter_var_array);
  return f_filter_var_array(data, definition);
}

inline Variant x_filter_var(CVarRef variable, int filter = k_FILTER_DEFAULT, CVarRef options = null_array) {
  FUNCTION_INJECTION_BUILTIN(filter_var);
  return f_filter_var(variable, filter, options);
}


///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXTPROFILE_FILTER_H__
