/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/
// @generated by HipHop Compiler
#define yy_create_buffer eval__create_buffer
#define yy_delete_buffer eval__delete_buffer
#define yy_scan_buffer eval__scan_buffer
#define yy_scan_string eval__scan_string
#define yy_scan_bytes eval__scan_bytes
#define yy_flex_debug eval__flex_debug
#define yy_init_buffer eval__init_buffer
#define yy_flush_buffer eval__flush_buffer
#define yy_load_buffer_state eval__load_buffer_state
#define yy_switch_to_buffer eval__switch_to_buffer
#define yyin eval_in
#define yyleng eval_leng
#define yylex eval_lex
#define yyout eval_out
#define yyrestart eval_restart
#define yytext eval_text
#define yywrap eval_wrap

#line 20 "lex.eval_.cpp"
/* A lexical scanner generated by flex*/

/* Scanner skeleton version:
 * $Header: /home/daffy/u0/vern/flex/RCS/flex.skl,v 2.91 96/09/10 16:58:48 vern Exp $
 */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5

#include <stdio.h>
#include <unistd.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef __TURBOC__
 #pragma warn -rch
 #pragma warn -use
#include <io.h>
#include <stdlib.h>
#define YY_USE_CONST
#define YY_USE_PROTOS
#endif

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 16384

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )

/* Some routines like yy_flex_realloc() are emitted as static but are
   not called by all lexers. This generates warnings in some compilers,
   notably GCC. Arrange to suppress these. */
#ifdef __GNUC__
#define YY_MAY_BE_UNUSED __attribute__((unused))
#else
#define YY_MAY_BE_UNUSED
#endif

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */
typedef unsigned int yy_size_t;


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart YY_PROTO(( FILE *input_file ));

void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )

YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));

static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t )) YY_MAY_BE_UNUSED;
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)

typedef unsigned char YY_CHAR;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
typedef int yy_state_type;
extern char *yytext;
#define yytext_ptr yytext

static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yytext_ptr -= yy_more_len; \
	yyleng = (int) (yy_cp - yytext_ptr); \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 161
#define YY_END_OF_BUFFER 162
static yyconst short int yy_accept[1512] =
    {   0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      156,  156,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  162,  116,
      161,  116,  161,  160,  128,   99,  144,  129,   99,   99,
       99,  160,   99,   99,   99,   99,   99,   99,   99,  105,
      105,   99,   99,   99,   99,   99,   99,  127,  146,  127,
      127,  127,  127,  127,  127,  127,  127,  127,  127,  127,
      127,  127,  127,  127,  127,  127,  127,  127,  127,  100,
       99,  102,  129,  152,  158,  161,  161,  161,  154,  161,
      161,  159,  161,  156,  156,  156,  161,  161,  156,  161,

      147,  147,  150,   40,   40,   39,  104,  103,  126,  125,
      125,  107,  107,  124,  136,  139,  139,  131,  131,  131,
      130,  130,  130,  116,    0,    0,  115,  116,  119,  117,
      116,  128,   78,    0,  142,    0,    0,    0,  121,   86,
      141,   93,   89,    0,  143,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   83,   73,   81,   74,
       82,   37,  109,   85,  135,  129,   84,  109,  105,    0,
        0,   41,    0,   97,   79,   78,   77,   70,   80,   98,
      140,   91,  127,  127,  127,  127,  127,   23,  144,    0,
        0,  127,  127,  127,  127,  127,  127,   15,  127,  127,

      127,  127,  127,  127,  127,  127,  127,  127,    9,  127,
      127,  127,  127,  127,   94,  127,  127,  127,  127,  127,
      127,  127,  127,  127,  127,  127,  127,   90,   92,    0,
      152,    0,    0,    0,  152,  153,  153,    0,  121,  101,
      151,  153,  154,    0,    0,    0,  154,  155,    0,  155,
      155,  156,  156,  156,    0,    0,  156,    0,  156,    0,
        0,  156,    0,  156,  156,  157,    0,    0,  156,  156,
        0,  156,    0,  157,  148,    0,    0,   38,   39,  103,
      108,    0,  107,  136,  138,  137,  131,  131,  132,  133,
      116,    0,  118,    0,    0,   76,    0,    0,  121,  141,

      141,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  109,    0,  109,  106,    0,    0,   87,   75,
       88,  140,  140,  127,  127,  127,  127,  127,  127,   95,
      127,    0,  127,  127,  127,  127,  127,  127,  127,  127,
        2,  127,  127,  127,  127,  127,  127,  127,  127,   16,
      127,  127,  127,  127,  127,  127,  127,  127,   42,  127,
      127,  127,  127,  127,  127,  127,  127,    6,  127,   58,
       44,  127,   96,    0,  153,    0,  121,  123,  153,  155,
      155,  156,  157,    0,  156,  149,    0,  156,  156,    0,
        0,  157,  157,  157,    0,  157,  157,  108,  116,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  134,    0,    0,    0,  127,  127,  127,  127,
      127,  127,  127,  127,  127,   26,  127,  127,  127,  127,
      127,  127,  127,   30,   12,  127,  127,  127,  127,  127,
      127,   53,    1,  127,  127,  127,  127,  127,  127,  127,
      127,  127,  127,   71,  127,  127,  127,  127,  127,  127,
      127,  127,  127,  127,  127,    0,    0,  157,  156,  157,
        0,  156,  157,  157,  157,  157,  116,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   45,    0,    0,    0,
        0,    0,    0,  145,  145,    0,  127,  127,  127,  127,

      127,  127,  127,   72,   28,    7,   32,   43,    4,  127,
      127,  127,  127,   61,  127,  127,   11,  127,  127,  127,
       65,  127,  127,  127,  127,  127,  127,  127,   60,   31,
      127,  127,  127,  127,  127,  127,  127,    8,   69,   13,
        0,  122,  157,  157,  116,    0,  120,  120,    0,    0,
        0,    0,   51,    0,    0,    0,    0,    0,   46,    0,
        0,    0,  127,  127,  127,  127,  127,  127,  127,  127,
      127,  127,   10,  127,   17,  127,  127,  127,  127,  127,
       59,  127,  127,  127,  127,  127,  127,   68,  127,    5,
       63,   24,    0,  116,    0,    0,    0,   49,    0,    0,

        0,    0,    0,    0,   52,    0,  127,  127,  127,  127,
      127,  127,  127,  127,   20,   27,  127,  127,  127,  127,
       34,   18,  127,  127,   54,  127,  127,   66,  127,   56,
        0,  116,    0,    0,    0,   48,    0,    0,    0,   50,
        0,   47,    0,  127,  114,  127,  127,  113,  127,   64,
       29,  127,  127,  127,   14,    3,  127,  127,  127,  127,
      127,  127,    0,  116,    0,    0,    0,  110,  127,  127,
      127,  127,  127,   25,  127,  127,  127,   33,   67,  127,
        0,  116,    0,    0,  127,  127,  112,   21,   19,   35,
      127,   22,  127,    0,  116,    0,    0,  127,  127,  127,

      127,    0,  116,    0,    0,  111,  127,   55,   57,    0,
      116,    0,    0,  127,   36,  116,    0,    0,  127,  116,
        0,    0,   62,  116,    0,    0,  116,    0,    0,    0,
      116,    0,    0,    0,    0,    0,  116,    0,    0,    0,
        0,  116,    0,    0,    0,    0,  116,    0,    0,    0,
        0,  117,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,

      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,

      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,

      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,

      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,

      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,

      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,

      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,

      116,    0,  116,    0,  116,    0,  116,    0,  116,    0,
        0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    4,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   22,   23,   24,
       25,   26,   27,   16,   34,   35,   36,   37,   38,   39,
       40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
       50,   51,   52,   53,   54,   55,   56,   57,   58,   59,
       28,   29,   30,   31,   32,   33,   34,   35,   36,   37,

       38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
       48,   49,   50,   51,   52,   53,   54,   55,   56,   57,
       58,   59,   60,   61,   62,   16,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,

       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59
    } ;

static yyconst int yy_meta[63] =
    {   0,
        1,    2,    3,    3,    1,    4,    5,    1,    1,    1,
        1,    1,    1,    6,    1,    1,    7,    1,    1,    8,
        8,    1,    9,   10,    1,    1,    1,    7,    1,    1,
        1,   11,   12,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   13,
        1,    1
    } ;

static yyconst short int yy_base[1942] =
    {   0,
        0,    1,    2,    3,   27, 4000,   84,   85,   86,   87,
      147,    0,  209,    0,    0,    0,  271,    0,  333,    0,
      395,    0, 3990, 3988, 3980, 3977,   95,   97, 3990, 3964,
     3984,  449,10017,10017,    0, 3954,  453,10017,    0,   71,
       92,   96,  512,10017, 3946,   93,   86,  106,  114,  442,
      446, 3947,  110,   84,  112, 3942, 3942, 3933,10017,  434,
      459,  443,  430,  451,  461, 3911,    0,  465, 3907, 3910,
     3895,   89, 3907,  418,   91,  442, 3910, 3901, 3888,10017,
       80,10017, 3892,  471,10017,  566, 3919,  499,  621,  681,
     3889,10017,  736,  796,  858, 3916,  920,  975, 1035, 1090,

    10017,  515,10017,10017, 3887,    0,10017,    0,10017,10017,
        0,  472,    0,10017,    0, 3892, 3891,  517,10017, 3899,
     3873,10017, 3865, 3866,  624, 3885,10017, 3863, 3856,  491,
     3843,    9, 3843, 1093,10017,  516,    0, 1094,    0,10017,
        2,10017,10017,  512,10017,    0,    0, 3816,  485, 3817,
     3819, 3814, 3823, 3818, 3795, 3798,10017,10017,10017,10017,
    10017,10017,  514,10017, 3830,10017,10017,  614,  618,    2,
      623,10017, 3790,  512,10017,10017, 3816,10017,10017, 3808,
       11,10017,    0,  601, 3773, 3786, 3771,    0, 1097,  519,
     3797, 3781,  503,  491, 3763,  514, 3765,    0, 3761, 3748,

     3750, 3761, 3762,  588, 3743, 3736, 3732, 3728,    0, 3724,
      613, 3715, 3713, 3708,    0,  621, 3721,  508, 3719, 3703,
     3693, 3684, 3689, 3697, 3682, 3680, 3670,10017,10017, 3670,
     1096,  739, 3712, 1100, 1099,10017,  742, 1129,  636,10017,
    10017, 1133, 1182,  646, 3682, 1183, 1184,  741, 1213,10017,
     1186,    0,    0, 3709,  748,    0,    0, 1266,    0,  750,
     1319, 1379, 1268,    0,    0,  756, 1439,  758,    0, 1269,
        0,    0, 1270, 1271,10017,  769,  664,10017,    0,    0,
      650,  964,  652,    0,10017,10017, 1106,10017,10017,10017,
     3686, 1280,10017, 3661, 3648,10017, 1274, 1468,    0,10017,

     3695, 3645, 3648, 3639, 3625, 3629, 3623, 3632, 3639, 3613,
     3605,  778,  755,  657,  763, 1110, 3620, 3652,10017,10017,
    10017,10017, 3650, 3607,  448, 3616, 3602, 3603, 3580,    0,
     3596, 3603, 3587, 3581, 3582, 3558, 3560,  736, 3554, 3564,
        0, 3548, 3557, 3536, 1158, 3542, 3523, 3537, 3539, 3534,
     3533, 3531, 3519, 3511, 3500, 3514, 3512, 3496,    0,  510,
     3488, 3488, 3477, 3476, 3476, 3474, 3470,    0, 3473,    0,
        0, 3465,    0, 3467,  749, 3481,  969,10017, 1277, 1105,
     1276,    0, 1108, 1526,    0,10017, 1195,    0, 1567,  787,
     1441, 1273, 1198, 1201,    0, 1282, 1283, 1197, 3482, 1620,

     3455, 3456, 3461, 3453, 3439, 3446, 3441, 1306, 3435, 3427,
     3422, 3423,  985, 3402, 3450,  791, 3416, 3404, 3396, 3396,
     3383, 3376, 3376, 3368, 3379,    0, 3379, 3366, 3372, 3354,
     3364, 3370, 3349,    0, 3353, 3329, 3347, 3336, 3344, 3325,
     3331,    0,    0, 3318, 3319, 3328, 3308, 3326, 3320, 3298,
     3315, 3290, 3285,    0, 3282, 3295, 3289, 3284, 3276, 3264,
     3265, 3270, 3248, 3250, 3259, 3246,    0, 1310,    0, 1312,
     1670,    0, 1627, 1620, 1443, 1624, 3260, 1627,  988, 3234,
     3223, 3229, 1308, 3232, 3221,  992,10017, 3232, 3228,  993,
     3214, 3207, 3216,10017, 3254, 1114, 3197, 3203, 3203, 3185,

     3199, 3194, 3192,    0,    0,    0,    0,    0,    0, 3172,
     3167, 3171, 3176,    0, 3178, 3161,    0, 3164, 3161, 3158,
        0, 3156, 3147, 3138, 3135, 3143, 3125, 3130,    0,    0,
     3108, 3124, 3122, 3106, 3104, 3113, 3097,    0,    0,    0,
     3105,10017, 1528, 1634, 3111, 1634,10017, 3131, 3078, 1122,
     3070, 1138,10017, 3092, 3080, 3077, 3061, 1194,10017, 3072,
     1224, 3062, 3051, 3063, 3040, 3060, 3059, 3041, 3044, 3019,
     3034, 3017,    0, 3024, 3030, 3013, 3015, 3005, 3008, 2998,
        0, 3005, 2999, 2999, 3000, 2988, 2970,    0, 2977,    0,
        0,    0, 2977, 2988, 1641, 1218, 1226,10017, 1227, 2964,

     2954, 1273, 1322, 1336,10017, 2950, 2960, 2959, 2947, 2952,
     2953, 2945, 2927, 2934,    0,    0, 2935, 2934, 2930, 2927,
        0,    0, 2910, 2902, 2915, 2908, 2909,    0, 2905, 2902,
     2889, 2902, 1724, 1544, 1446,10017, 1448, 1450, 1451,10017,
     1452,10017, 1673, 2892,    0, 2875, 2874,    0, 2888,    0,
        0, 2863, 2875, 2862,    0,    0, 2847, 2849, 2843, 2851,
     2851, 2832, 2841, 2845, 1725, 2834, 1733,    0, 2819, 2819,
     2827, 2819, 2805,    0, 2793, 2796, 2803,    0,    0, 2792,
     2791, 2810, 1731, 2779, 2791, 2773,    0,    0,    0,    0,
     2784,    0, 2783, 2777, 2779, 1736, 2761, 2768, 2757, 2759,

     2750, 2730, 2756, 1737, 2724,    0, 2732,    0,    0, 2738,
     2750, 1747, 2734, 2727,10017, 2733, 1758, 2714, 2700, 2721,
     1763, 2705,    0, 2718, 1771, 1531, 2710, 1777, 1667, 1548,
     2707, 1784, 1803, 2674, 2673, 2679, 2695, 1793, 2672, 2670,
     2651, 2675, 1815, 2648, 2647, 1823, 2669, 1823, 2684, 2677,
     1831,10017, 2656, 1831, 2653, 1837, 2652, 1844, 2650, 1853,
     2649, 1863, 2641, 1867, 2633, 1875, 2631, 1879, 2630, 1886,
     2629, 1902, 2627, 1909, 2618, 1913, 2611, 1921, 2610, 1925,
     2608, 1932, 2607, 1944, 2606, 1948, 2604, 1955, 2598, 1967,
     2595, 1971, 2587, 1978, 2584, 1979, 2581, 1990, 2575, 2001,

     2573, 2002, 2572, 2009, 2564, 2013, 2561, 2025, 2553, 2032,
     2552, 2036, 2550, 2048, 2549, 2055, 2543, 2059, 2541, 2067,
     2530, 2071, 2529, 2078, 2527, 2090, 2526, 2094, 2523, 2101,
     2520, 2113, 2518, 2117, 2510, 2124, 2507, 2125, 2506, 2136,
     2504, 2147, 2503, 2148, 2495, 2155, 2487, 2159, 2485, 2171,
     2484, 2178, 2483, 2182, 2481, 2194, 2472, 2201, 2465, 2205,
     2464, 2213, 2462, 2217, 2461, 2224, 2460, 2236, 2458, 2240,
     2452, 2247, 2449, 2259, 2441, 2263, 2438, 2270, 2435, 2271,
     2429, 2282, 2427, 2293, 2426, 2294, 2418, 2301, 2415, 2305,
     2407, 2317, 2406, 2324, 2404, 2328, 2403, 2340, 2397, 2347,

     2395, 2351, 2384, 2359, 2383, 2363, 2381, 2370, 2380, 2382,
     2377, 2386, 2374, 2393, 2372, 2405, 2364, 2409, 2361, 2416,
     2360, 2417, 2358, 2428, 2357, 2439, 2349, 2440, 2341, 2447,
     2339, 2451, 2338, 2463, 2337, 2470, 2335, 2474, 2326, 2486,
     2319, 2493, 2318, 2497, 2316, 2505, 2315, 2509, 2314, 2516,
     2312, 2528, 2306, 2532, 2303, 2539, 2295, 2551, 2292, 2555,
     2289, 2562, 2283, 2563, 2281, 2574, 2280, 2585, 2272, 2586,
     2269, 2593, 2261, 2597, 2260, 2609, 2258, 2616, 2257, 2620,
     2251, 2632, 2249, 2639, 2238, 2643, 2237, 2651, 2235, 2655,
     2234, 2662, 2231, 2674, 2228, 2678, 2226, 2685, 2218, 2697,

     2215, 2701, 2214, 2708, 2212, 2709,  106, 2720,  449, 2731,
      451, 2732,  471, 2739,  508, 2743,  518, 2755,  538, 2762,
      608, 2766,  621, 2778,  631, 2785,  650, 2789,  656, 2797,
      722, 2801,  739, 2808,  743, 2820,  762, 2824,  969, 2831,
      972, 2843,  984, 2847, 1090, 2854, 1096, 2855, 1097, 2866,
     1103, 2877, 1112, 2878, 1118, 2885, 1119, 2889, 1128, 2901,
     1131, 2908, 1134, 2912, 1184, 2924, 1199, 2931, 1201, 2935,
     1214, 2943, 1217, 2947, 1264, 2954, 1268, 2966, 1269, 2970,
     1270, 2977, 1272, 2989, 1277, 2993, 1293, 3000, 1298, 3001,
     1299, 3012, 1301, 3023, 1316, 3024, 1321, 3031, 1323, 3035,

     1326, 3047, 1328, 3054, 1431, 3058, 1432, 3070, 1433, 3077,
     1434, 3081, 1436, 3089, 1438, 3093, 1442, 3100, 1443, 3112,
     1444, 3116, 1445, 3123, 1513, 3135, 1514, 3139, 1515, 3146,
     1516, 3147, 1517, 3158, 1518, 3169, 1519, 3170, 1520, 3177,
     1521, 3181, 1525, 3193, 1529, 3200, 1531, 3204, 1567, 3216,
     1568, 3223, 1569, 3227, 1570, 3235, 1571, 3239, 1572, 3246,
     1574, 3258, 1576, 3262, 1609, 3269, 1615, 3281, 1616, 3285,
     1621, 3292, 1622, 3293, 1628, 3304, 1631, 3315, 1633, 3316,
     1635, 3323, 1636, 3327, 1638, 3339, 1640, 3346, 1642, 3350,
     1643, 3362, 1654, 3369, 1657, 3373, 1658, 3381, 1659, 3385,

     1661, 3392, 1664, 3404, 1665, 3408, 1666, 3415, 1667, 3427,
     1671, 3431, 1672, 3438, 1673, 3439, 1674, 3450, 1676, 3461,
     1677, 3462, 1679, 3469, 1715, 3473, 1717, 3485, 1718, 3492,
     1723, 3496, 1726, 3508, 1729, 3515, 1733, 3519, 1738, 3527,
     1742, 3531, 1744, 3538, 1745, 3550, 1749, 3554, 1751, 3561,
     1755, 3573, 1757, 3577, 1768, 3584, 1770, 3585, 1772, 3596,
     1773, 3607, 1779, 3608, 1788, 3615, 1789, 3619, 1792, 3631,
     1794, 3638, 1795, 3642, 1797, 3654, 1804, 3661, 1807, 3665,
     1813, 3673, 1817, 3677, 1819, 3684, 1824, 3696, 1830, 3700,
     1832, 3707, 1835, 3719, 1839, 3723, 1841, 3730, 1842, 3731,

     1845, 3742, 1849, 3753, 1854, 3754, 1855, 3761, 1857, 3765,
     1861, 3777, 1868, 3784, 1873, 3788, 1874, 3800, 1876, 3807,
     1877, 3811, 1880, 3819, 1883, 3823, 1884, 3830, 1888, 3842,
     1890, 3846, 1893, 3853, 1897, 3865, 1899, 3869, 1900, 3876,
     1901, 3877, 1911, 3888, 1918, 3899, 1919, 3900, 1920, 3907,
     1922, 3911, 1923, 3923, 1926, 3930, 1934, 3934, 1936, 3946,
     1939, 3953, 1942, 3957, 1943, 3965, 1945, 3969, 1946, 3976,
     1957, 3988, 1959, 3992, 1965, 3999, 1966, 4011, 1968, 4015,
     1969, 4022, 1977, 4023, 1980, 4034, 1988, 4045, 1989, 4046,
     1991, 4053, 1997, 4057, 2000, 4069, 2003, 4076, 2011, 4080,

     2014, 4092, 2020, 4099, 2022, 4103, 2023, 4111, 2024, 4115,
     2026, 4122, 2027, 4134, 2034, 4138, 2043, 4145, 2045, 4157,
     2046, 4161, 2047, 4168, 2049, 4169, 2057, 4180, 2065, 4191,
     2066, 4192, 2068, 4199, 2069, 4203, 2072, 4215, 2080, 4222,
     2082, 4226, 2085, 4238, 2088, 4245, 2089, 4249, 2091, 4257,
     2092, 4261, 2103, 4268, 2105, 4280, 2111, 4284, 2112, 4291,
     2114, 4303, 2115, 4307, 2123, 4314, 2126, 4315, 2134, 4326,
     2135, 4337, 2137, 4338, 2143, 4345, 2146, 4349, 2149, 4361,
     2157, 4368, 2160, 4372, 2166, 4384, 2168, 4391, 2169, 4395,
     2170, 4403, 2172, 4407, 2173, 4414, 2180, 4426, 2189, 4430,

     2191, 4437, 2192, 4449, 2193, 4453, 2195, 4460,10017, 4461,
    10017, 4513, 4526, 4539, 4552, 4565, 4578, 4591, 4604, 4617,
     4630, 2216, 4643, 4649, 4660, 4673, 4684, 4688, 4692, 4703,
     4716, 4729, 4742, 4747, 4758, 4764, 4775, 4787, 4799, 4811,
     4823, 4834, 4846, 4859, 4870, 2224, 4881, 4894, 4907, 4920,
     4933, 4946, 4959, 4972, 4985, 4998, 5011, 5024, 5037, 5050,
     5063, 5076, 5089, 5102, 5115, 5128, 5141, 5154, 5167, 5180,
     5193, 5206, 5219, 5232, 5245, 5258, 5271, 5284, 5297, 5310,
     5323, 5336, 5349, 5362, 5375, 5388, 5401, 5414, 5427, 5440,
     5453, 5466, 5479, 5492, 5505, 5518, 5531, 5544, 5557, 5570,

     5583, 5596, 5609, 5622, 5635, 5648, 5661, 5674, 5687, 5700,
     5713, 5726, 5739, 5752, 5765, 5778, 5791, 5804, 5817, 5830,
     5843, 5856, 5869, 5882, 5895, 5908, 5921, 5934, 5947, 5960,
     5973, 5986, 5999, 6012, 6025, 6038, 6051, 6064, 6077, 6090,
     6103, 6116, 6129, 6142, 6155, 6168, 6181, 6194, 6207, 6220,
     6233, 6246, 6259, 6272, 6285, 6298, 6311, 6324, 6337, 6350,
     6363, 6376, 6389, 6402, 6415, 6428, 6441, 6454, 6467, 6480,
     6493, 6506, 6519, 6532, 6545, 6558, 6571, 6584, 6597, 6610,
     6623, 6636, 6649, 6662, 6675, 6688, 6701, 6714, 6727, 6740,
     6753, 6766, 6779, 6792, 6805, 6818, 6831, 6844, 6857, 6870,

     6883, 6896, 6909, 6922, 6935, 6948, 6961, 6974, 6987, 7000,
     7013, 7026, 7039, 7052, 7065, 7078, 7091, 7104, 7117, 7130,
     7143, 7156, 7169, 7182, 7195, 7208, 7221, 7234, 7247, 7260,
     7273, 7286, 7299, 7312, 7325, 7338, 7351, 7364, 7377, 7390,
     7403, 7416, 7429, 7442, 7455, 7468, 7481, 7494, 7507, 7520,
     7533, 7546, 7559, 7572, 7585, 7598, 7611, 7624, 7637, 7650,
     7663, 7676, 7689, 7702, 7715, 7728, 7741, 7754, 7767, 7780,
     7793, 7806, 7819, 7832, 7845, 7858, 7871, 7884, 7897, 7910,
     7923, 7936, 7949, 7962, 7975, 7988, 8001, 8014, 8027, 8040,
     8053, 8066, 8079, 8092, 8105, 8118, 8131, 8144, 8157, 8170,

     8183, 8196, 8209, 8222, 8235, 8248, 8261, 8274, 8287, 8300,
     8313, 8326, 8339, 8352, 8365, 8378, 8391, 8404, 8417, 8430,
     8443, 8456, 8469, 8482, 8495, 8508, 8521, 8534, 8547, 8560,
     8573, 8586, 8599, 8612, 8625, 8638, 8651, 8664, 8677, 8690,
     8703, 8716, 8729, 8742, 8755, 8768, 8781, 8794, 8807, 8820,
     8833, 8846, 8859, 8872, 8885, 8898, 8911, 8924, 8937, 8950,
     8963, 8976, 8989, 9002, 9015, 9028, 9041, 9054, 9067, 9080,
     9093, 9106, 9119, 9132, 9145, 9158, 9171, 9184, 9197, 9210,
     9223, 9236, 9249, 9262, 9275, 9288, 9301, 9314, 9327, 9340,
     9353, 9366, 9379, 9392, 9405, 9418, 9431, 9444, 9457, 9470,

     9483, 9496, 9509, 9522, 9535, 9548, 9561, 9574, 9587, 9600,
     9613, 9626, 9639, 9652, 9665, 9678, 9691, 9704, 9717, 9730,
     9743, 9756, 9769, 9782, 9795, 9808, 9821, 9834, 9847, 9860,
     9873, 9886, 9899, 9912, 9925, 9938, 9951, 9964, 9977, 9990,
    10003
    } ;

static yyconst short int yy_def[1942] =
    {   0,
     1512, 1512, 1512, 1512, 1511,    5, 1513, 1513, 1514, 1514,
     1511,   11, 1511,   13, 1515, 1515, 1511,   17, 1511,   19,
     1511,   21, 1516, 1516, 1516, 1516, 1517, 1517, 1511, 1518,
     1519, 1520, 1511, 1511, 1511, 1511, 1521, 1511, 1522, 1511,
     1511, 1523, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1524, 1511, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1511,
     1511, 1511, 1511, 1525, 1511, 1511, 1525, 1525, 1526, 1511,
     1526, 1511, 1526, 1511, 1511,   95, 1511,   94, 1511,   98,

     1511, 1527, 1511, 1511, 1511, 1528, 1511, 1529, 1511, 1511,
     1522, 1511, 1511, 1511, 1530, 1511, 1511, 1531, 1511, 1511,
     1511, 1511, 1511, 1532, 1518, 1519, 1511, 1518, 1511, 1511,
     1511, 1511, 1511, 1521, 1511, 1533, 1521, 1521, 1534, 1511,
     1511, 1511, 1511, 1523, 1511, 1523,   43, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1524, 1524, 1524, 1524, 1524, 1524, 1521, 1523,
     1511, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,

     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1511, 1511, 1511,
     1525, 1535, 1525, 1525, 1525, 1511, 1535, 1535, 1536, 1511,
     1511, 1525, 1526, 1537, 1526, 1526, 1526, 1537, 1537, 1511,
     1526,   94,   95,   95, 1538,   98,   99,   98,   94, 1539,
       95, 1511,  261,   95,   94, 1538, 1538, 1538,   99,   94,
       98,   99,   98,   98, 1511, 1527, 1511, 1511, 1528, 1529,
     1511, 1511, 1511, 1530, 1511, 1511, 1531, 1511, 1511, 1511,
     1540, 1532, 1511, 1511, 1511, 1511, 1521, 1533, 1534, 1511,

     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1541, 1511, 1511,
     1511, 1511, 1511, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1511, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1511, 1535, 1511, 1536, 1511, 1525, 1537,
     1526,   94, 1539, 1539,   94, 1511, 1542,  262,  262, 1543,
     1543,  261, 1538, 1538,  267,   98,   98, 1511, 1544, 1540,

     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1541, 1545, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1511, 1546, 1539,   94, 1542,
     1542,   94, 1543,  261, 1538,   98, 1547, 1544, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1545, 1524, 1524, 1524, 1524,

     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1511, 1511, 1542, 1543, 1548, 1547, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1511, 1549, 1548, 1511, 1511, 1511, 1511, 1511,

     1511, 1511, 1511, 1511, 1511, 1511, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1511, 1550, 1549, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1511, 1551, 1550, 1511, 1511, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1511, 1552, 1551, 1511, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1511, 1553, 1552, 1511, 1524, 1524, 1524,

     1524, 1511, 1554, 1553, 1511, 1524, 1524, 1524, 1524, 1511,
     1555, 1554, 1511, 1524, 1511, 1556, 1555, 1511, 1524, 1557,
     1556, 1511, 1524, 1558, 1557, 1511, 1559, 1558, 1511, 1511,
     1560, 1559, 1511, 1511, 1511, 1511, 1561, 1560, 1511, 1511,
     1511, 1562, 1561, 1511, 1511, 1511, 1563, 1562, 1511, 1511,
     1511, 1511, 1564, 1563, 1565, 1564, 1566, 1565, 1567, 1566,
     1568, 1567, 1569, 1568, 1570, 1569, 1571, 1570, 1572, 1571,
     1573, 1572, 1574, 1573, 1575, 1574, 1576, 1575, 1577, 1576,
     1578, 1577, 1579, 1578, 1580, 1579, 1581, 1580, 1582, 1581,
     1583, 1582, 1584, 1583, 1585, 1584, 1586, 1585, 1587, 1586,

     1588, 1587, 1589, 1588, 1590, 1589, 1591, 1590, 1592, 1591,
     1593, 1592, 1594, 1593, 1595, 1594, 1596, 1595, 1597, 1596,
     1598, 1597, 1599, 1598, 1600, 1599, 1601, 1600, 1602, 1601,
     1603, 1602, 1604, 1603, 1605, 1604, 1606, 1605, 1607, 1606,
     1608, 1607, 1609, 1608, 1610, 1609, 1611, 1610, 1612, 1611,
     1613, 1612, 1614, 1613, 1615, 1614, 1616, 1615, 1617, 1616,
     1618, 1617, 1619, 1618, 1620, 1619, 1621, 1620, 1622, 1621,
     1623, 1622, 1624, 1623, 1625, 1624, 1626, 1625, 1627, 1626,
     1628, 1627, 1629, 1628, 1630, 1629, 1631, 1630, 1632, 1631,
     1633, 1632, 1634, 1633, 1635, 1634, 1636, 1635, 1637, 1636,

     1638, 1637, 1639, 1638, 1640, 1639, 1641, 1640, 1642, 1641,
     1643, 1642, 1644, 1643, 1645, 1644, 1646, 1645, 1647, 1646,
     1648, 1647, 1649, 1648, 1650, 1649, 1651, 1650, 1652, 1651,
     1653, 1652, 1654, 1653, 1655, 1654, 1656, 1655, 1657, 1656,
     1658, 1657, 1659, 1658, 1660, 1659, 1661, 1660, 1662, 1661,
     1663, 1662, 1664, 1663, 1665, 1664, 1666, 1665, 1667, 1666,
     1668, 1667, 1669, 1668, 1670, 1669, 1671, 1670, 1672, 1671,
     1673, 1672, 1674, 1673, 1675, 1674, 1676, 1675, 1677, 1676,
     1678, 1677, 1679, 1678, 1680, 1679, 1681, 1680, 1682, 1681,
     1683, 1682, 1684, 1683, 1685, 1684, 1686, 1685, 1687, 1686,

     1688, 1687, 1689, 1688, 1690, 1689, 1691, 1690, 1692, 1691,
     1693, 1692, 1694, 1693, 1695, 1694, 1696, 1695, 1697, 1696,
     1698, 1697, 1699, 1698, 1700, 1699, 1701, 1700, 1702, 1701,
     1703, 1702, 1704, 1703, 1705, 1704, 1706, 1705, 1707, 1706,
     1708, 1707, 1709, 1708, 1710, 1709, 1711, 1710, 1712, 1711,
     1713, 1712, 1714, 1713, 1715, 1714, 1716, 1715, 1717, 1716,
     1718, 1717, 1719, 1718, 1720, 1719, 1721, 1720, 1722, 1721,
     1723, 1722, 1724, 1723, 1725, 1724, 1726, 1725, 1727, 1726,
     1728, 1727, 1729, 1728, 1730, 1729, 1731, 1730, 1732, 1731,
     1733, 1732, 1734, 1733, 1735, 1734, 1736, 1735, 1737, 1736,

     1738, 1737, 1739, 1738, 1740, 1739, 1741, 1740, 1742, 1741,
     1743, 1742, 1744, 1743, 1745, 1744, 1746, 1745, 1747, 1746,
     1748, 1747, 1749, 1748, 1750, 1749, 1751, 1750, 1752, 1751,
     1753, 1752, 1754, 1753, 1755, 1754, 1756, 1755, 1757, 1756,
     1758, 1757, 1759, 1758, 1760, 1759, 1761, 1760, 1762, 1761,
     1763, 1762, 1764, 1763, 1765, 1764, 1766, 1765, 1767, 1766,
     1768, 1767, 1769, 1768, 1770, 1769, 1771, 1770, 1772, 1771,
     1773, 1772, 1774, 1773, 1775, 1774, 1776, 1775, 1777, 1776,
     1778, 1777, 1779, 1778, 1780, 1779, 1781, 1780, 1782, 1781,
     1783, 1782, 1784, 1783, 1785, 1784, 1786, 1785, 1787, 1786,

     1788, 1787, 1789, 1788, 1790, 1789, 1791, 1790, 1792, 1791,
     1793, 1792, 1794, 1793, 1795, 1794, 1796, 1795, 1797, 1796,
     1798, 1797, 1799, 1798, 1800, 1799, 1801, 1800, 1802, 1801,
     1803, 1802, 1804, 1803, 1805, 1804, 1806, 1805, 1807, 1806,
     1808, 1807, 1809, 1808, 1810, 1809, 1811, 1810, 1812, 1811,
     1813, 1812, 1814, 1813, 1815, 1814, 1816, 1815, 1817, 1816,
     1818, 1817, 1819, 1818, 1820, 1819, 1821, 1820, 1822, 1821,
     1823, 1822, 1824, 1823, 1825, 1824, 1826, 1825, 1827, 1826,
     1828, 1827, 1829, 1828, 1830, 1829, 1831, 1830, 1832, 1831,
     1833, 1832, 1834, 1833, 1835, 1834, 1836, 1835, 1837, 1836,

     1838, 1837, 1839, 1838, 1840, 1839, 1841, 1840, 1842, 1841,
     1843, 1842, 1844, 1843, 1845, 1844, 1846, 1845, 1847, 1846,
     1848, 1847, 1849, 1848, 1850, 1849, 1851, 1850, 1852, 1851,
     1853, 1852, 1854, 1853, 1855, 1854, 1856, 1855, 1857, 1856,
     1858, 1857, 1859, 1858, 1860, 1859, 1861, 1860, 1862, 1861,
     1863, 1862, 1864, 1863, 1865, 1864, 1866, 1865, 1867, 1866,
     1868, 1867, 1869, 1868, 1870, 1869, 1871, 1870, 1872, 1871,
     1873, 1872, 1874, 1873, 1875, 1874, 1876, 1875, 1877, 1876,
     1878, 1877, 1879, 1878, 1880, 1879, 1881, 1880, 1882, 1881,
     1883, 1882, 1884, 1883, 1885, 1884, 1886, 1885, 1887, 1886,

     1888, 1887, 1889, 1888, 1890, 1889, 1891, 1890, 1892, 1891,
     1893, 1892, 1894, 1893, 1895, 1894, 1896, 1895, 1897, 1896,
     1898, 1897, 1899, 1898, 1900, 1899, 1901, 1900, 1902, 1901,
     1903, 1902, 1904, 1903, 1905, 1904, 1906, 1905, 1907, 1906,
     1908, 1907, 1909, 1908, 1910, 1909, 1911, 1910, 1912, 1911,
     1913, 1912, 1914, 1913, 1915, 1914, 1916, 1915, 1917, 1916,
     1918, 1917, 1919, 1918, 1920, 1919, 1921, 1920, 1922, 1921,
     1923, 1922, 1924, 1923, 1925, 1924, 1926, 1925, 1927, 1926,
     1928, 1927, 1929, 1928, 1930, 1929, 1931, 1930, 1932, 1931,
     1933, 1932, 1934, 1933, 1935, 1934, 1936, 1935, 1937, 1936,

     1938, 1937, 1939, 1938, 1940, 1939, 1941, 1940, 1511, 1941,
        0, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,

     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,

     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,

     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,

     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511
    } ;

static yyconst short int yy_nxt[10080] =
    {   0,
     1511,  132,  132,  132,  300,  301,   31,   31,   33,   33,
      132,  132,  132,  322,  323, 1511,  314, 1511,  314,  283,
      283,  315,  315,   32,   32,   32,   32,   34,   35,   35,
       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   44,   47,   48,   49,   50,   51,   52,   44,
       53,   54,   55,   56,   44,   34,   44,   57,   58,   59,
       60,   61,   62,   63,   64,   65,   66,   67,   68,   67,
       67,   69,   67,   70,   71,   72,   67,   73,   74,   75,
       76,   77,   78,   79,   67,   67,   80,   81,   82,   85,
       85,   86,   86,   90,   90,  140,  141,  119,  120,  119,

      120,  142,  160,  121,  228,  121,  145,  158,  177,  178,
      161,  162,   87,   87,   91,   91,  143,  159,   92,   92,
      122,  123,  122,  123,  146,  163,  163,  165,  173, 1010,
      164,  221,  166,  174,  175,  176,  179,  180,  167,  216,
      229,  222,  217,   88,   88,   93,   93,   94,   94,   95,
       96,   94,   94,   94,   97,   94,   94,   94,   94,   94,
       94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
       94,   94,   94,   94,   94,   98,   94,   94,   99,   94,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,

       99,   99,   99,   99,   99,   99,  100,   94,   94,  101,
      101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
      101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
      101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
      102,  101,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  101,  101,
      101,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  105,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,

      104,  104,  106,  104,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      104,  104,  104,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  108,  107,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  107,  107,  107,   34,  109,  109,  109,  110,

      110,  109,  111,  110,  110,  109,  110,  110,  110,  110,
      110,  110,  110,  110,  112,  113,  110,  110,  110,  110,
      110,  110,  110,  109,  114,  110,   67,  110,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,  110,  110,  110,  129,  135,  168,
      136,  169,  169,  168,  189,  169,  169,  196,  185,  190,
      219,  197, 1012,  220, 1014,  130,  193,  198,  232,  170,
      186,  137,  191,  170,  187,  188,  199,  194,  223,  418,
      195,  281,  281,  224, 1016,  200,  201,  202,  171,  233,

      131,  419,  205,  209,  236,  203,  241,  204,  206,  192,
      210,  211,  138,  147,  207,  293,  212,  275,  275,  288,
      288,  135,  145,  136,  336,  288,  303,  233,  282,  145,
      234, 1018,  304,  163,  163,  318,  319,  277,  337,  294,
      146, 1020,  288,  288,  298,  148,  149,  146,  150,  339,
      151,  170,  340,  152,  334,  335,  455,  363,  242,  153,
      364, 1022,  154,  155,  456,  156,  235,  235,  235,  235,
      235,  236,  235,  237,  235,  235,  235,  235,  235,  235,
      235,  235,  235,  235,  235,  235,  235,  235,  235,  235,
      235,  235,  235,  235,  238,  235,  235,  239,  235,  239,

      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  240,  235,  235,  244,  347,
      124, 1024, 1511,  313,  313,  168,  324,  169,  169,  325,
      348,  326,  316,  316, 1026,  327,  328, 1511,  354,  245,
     1511,  170,  376,  248, 1028,  170,  316,  316,  316,  316,
      316,  316,  360,  378,  355,  356,  275,  275,  361,  281,
      281,  283,  283, 1030,  249, 1511,  315,  315,  250, 1032,
      246,  247,  247,  247,  247,  247,  247,  247,  248,  247,
      247,  247,  247,  247,  247,  247,  247,  247,  247,  247,

      247,  247,  247,  247,  247,  247,  247,  247,  247,  249,
      247,  247,  239,  250,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      240,  247,  247,  241,  236, 1034,  237,  236,  380,  375,
      253,  254,  253,  254,  236,  266,  375,  383,  253,  254,
      253,  254, 1036,  393,  245,  394, 1038,  238,  250,  249,
      238,  275,  275,  250,  313,  313,  267,  238,  384,  413,
      413,  413,  315,  315,  267, 1040,  395,  430,  431,  253,
      254,  277,  170,  494,  495,  251,  252,  252,  253,  254,

      252,  252,  252,  255,  252,  252,  252,  252,  252,  252,
      252,  252,  252,  252,  252,  252,  252,  252,  252,  252,
      252,  252,  252,  252,  256,  252,  252,  257,  252,  257,
      257,  257,  257,  257,  257,  257,  257,  257,  257,  257,
      257,  257,  257,  257,  257,  257,  257,  257,  257,  257,
      257,  257,  257,  257,  257,  258,  252,  252,  259,  259,
      253,  254,  259,  259,  259,  260,  259,  259,  259,  259,
      259,  259,  259,  259,  259,  259,  259,  259,  259,  259,
      259,  259,  259,  259,  259,  259,  261,  259,  259,  262,
      259,  262,  262,  262,  262,  262,  262,  262,  262,  262,

      262,  262,  262,  262,  262,  262,  262,  262,  262,  262,
      262,  262,  262,  262,  262,  262,  262,  263,  259,  259,
      265,  265,  253,  254,  265,  265,  265,  266,  265,  265,
      265,  265,  265,  265,  265,  265,  265,  265,  265,  265,
      265,  265,  265,  265,  265,  265,  265,  265,  267,  265,
      265,  239,  265,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  240,
      265,  265,  252,  398,  398,  376,  413,  413,  413,  547,
      547,  548, 1042,  486,  558, 1044,  378,  398,  398,  398,

      398,  398,  398,  252,  487,  559,  252, 1046,  252,  252,
      252,  252,  252,  252,  252,  252,  252,  252,  252,  252,
      252,  252,  252,  252,  252,  252,  252,  252,  252,  252,
      252,  252,  252,  252,  252,  252,  252,  253,  254,  252,
      252,  252,  268,  252,  252,  252,  252,  252,  252,  252,
      252,  252,  252,  252,  269,  269,  252,  270,  252,  252,
      252,  252,  252,  271,  252,  252,  272,  252,  272,  272,
      272,  272,  272,  272,  272,  272,  272,  272,  272,  272,
      272,  272,  272,  272,  272,  272,  272,  272,  272,  272,
      272,  272,  272,  272,  273,  252,  252,  241,  135,  135,

      136, 1511,  135,  232,  136,  236,  232, 1511,  288,  288,
      253,  254,  380, 1048,  288,  468,  494,  495,  256, 1050,
     1052,  137,  137,  597,  233,  137, 1054,  233,  233,  316,
      316,  288,  288,  249,  598, 1056,  384,  250,  236,  552,
     1511, 1058, 1060,  316,  316,  316,  316,  316,  316,  274,
      553, 1062,  138,  138, 1064,  234,  138, 1066,  234,  242,
      235,  233,  235,  235,  235,  235,  235,  235,  235,  235,
      235,  235,  235,  235,  235,  235,  235,  235,  235,  235,
      235,  235,  235,  235,  235,  235,  235,  235,  235,  244,
     1511,  244,  379, 1511,  437,  558,  438,  253,  254,  439,

      253,  254,  470,  253,  254,  393,  559, 1068,  475,  440,
      245,  245,  245,  441,  245,  250,  398,  398,  250,  634,
      634,  634, 1070,  471, 1072,  604,  267,  597,  635,  395,
      398,  398,  398,  398,  398,  398,  605, 1074,  598,  636,
     1076,  246,  251,  246,  247,  381,  247,  247,  247,  247,
      247,  247,  247,  247,  247,  247,  247,  247,  247,  247,
      247,  247,  247,  247,  247,  247,  247,  247,  247,  247,
      247,  247,  247, 1511,  639, 1511,  268, 1511, 1511,  135,
     1511,  136,  236, 1511, 1511,  640,  291, 1078, 1511, 1511,
     1511, 1080, 1082, 1084,  256, 1086,  261,  271,  271,  256,

     1088,  261,  137, 1511,  245,  233, 1511,  486,  250,  552,
      271,  256,  253,  254,  253,  254, 1090,  468,  487,  543,
      553, 1092, 1094,  641, 1096,  274,  259,  392,  273,  396,
      397, 1511,  474,  138,  642,  381,  379,  604,  384, 1098,
      471,  476,  397,  488, 1100,  554, 1102,  259,  605, 1104,
      259, 1106,  259,  259,  259,  259,  259,  259,  259,  259,
      259,  259,  259,  259,  259,  259,  259,  259,  259,  259,
      259,  259,  259,  259,  259,  259,  259,  259,  259,  385,
      385,  386,  386,  385,  385,  385,  387,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  388,  388,

      385,  389,  385,  385,  385,  385,  385,  390,  385,  385,
      388,  385,  388,  388,  388,  388,  388,  388,  388,  388,
      388,  388,  388,  388,  388,  388,  388,  388,  388,  388,
      388,  388,  388,  388,  388,  388,  388,  388,  391,  385,
      385,  253,  254,  253,  254,  253,  254,  635, 1511,  552,
      475,  486,  639,  641, 1108, 1110, 1112, 1114,  636, 1116,
      553, 1118,  487,  640,  642, 1120, 1122, 1124, 1126,  390,
      265,  395,  265,  265,  265,  265,  265,  265,  265,  265,
      265,  265,  265,  265,  265,  265,  265,  265,  265,  265,
      265,  265,  265,  265,  265,  265,  265,  265,  265,  297,

      473,  297,  297,  297,  297,  297,  297,  297,  297,  297,
      297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
      297,  297,  297,  297,  297,  297,  297,  297,  253,  254,
      253,  254,  729,  729,  729,  543, 1128, 1130, 1132, 1134,
     1136, 1138, 1140, 1142, 1144,  634,  634,  634, 1146,  733,
      733,  733, 1148,  734, 1150,  730,  471,  382,  735,  382,
      382,  382,  382,  382,  382,  382,  382,  382,  382,  382,
      382,  382,  382,  382,  382,  382,  382,  382,  382,  382,
      382,  382,  382,  382,  382,  382,  385,  385,  666,  385,
     1152, 1154, 1156, 1158, 1160, 1162,  736, 1164,  385, 1166,

      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  399, 1511, 1511,  253,
      254, 1511, 1168,  477, 1511, 1511,  253,  254, 1170, 1172,
      545, 1511, 1511, 1511, 1174, 1176, 1511,  594,  261, 1511,
     1511, 1178,  271, 1511, 1180,  390, 1182, 1511, 1184, 1186,
     1511, 1188,  390, 1190, 1511, 1192, 1194, 1511,  729,  729,
      729, 1511,  253,  254,  667,  667,  667, 1196, 1511,  474,
     1198, 1200, 1202,  476, 1204, 1511,  544, 1206, 1208, 1210,
     1212,  730, 1511,  544, 1214, 1216, 1218, 1220,  181, 1222,

     1224,  469, 1226,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      632,  664, 1511, 1511,  667,  667,  667,  682, 1228, 1511,
     1230, 1232,  695,  703, 1511, 1511, 1234, 1511, 1511, 1236,
     1511, 1511, 1238,  711, 1511, 1511, 1240, 1511,  181, 1511,
     1511, 1242, 1511, 1511,  716, 1244, 1511, 1246, 1248,  720,
     1511, 1511, 1250, 1511, 1252, 1511, 1511,  724, 1254, 1511,
     1256, 1511, 1511,  727, 1511, 1511, 1511, 1511, 1511, 1511,
      731, 1258, 1511, 1260, 1511, 1262, 1264, 1511, 1511,  737,

     1511, 1511, 1266, 1511,  733,  733,  733, 1511,  734, 1511,
     1511, 1268, 1270,  735, 1511, 1272, 1511, 1274, 1276, 1511,
     1278,  742, 1511, 1511,  751,  751,  751, 1280, 1511,  747,
     1282, 1511,  751,  751,  751, 1511, 1284,  753, 1511, 1511,
     1286, 1511, 1288,  755, 1511, 1511, 1511, 1290,  752, 1511,
      757,  736, 1511, 1292, 1511, 1294,  752, 1511, 1296,  759,
     1511, 1511, 1298, 1511, 1300, 1302, 1511, 1511, 1304,  761,
     1511, 1511, 1306,  763, 1511, 1511, 1511, 1308, 1310, 1511,
     1312,  765, 1511, 1511, 1314,  767, 1511, 1511, 1511, 1511,
     1511, 1316,  769, 1511, 1511, 1511, 1318, 1320, 1511, 1322,

     1324, 1511, 1511, 1326, 1511, 1511, 1328, 1330,  771, 1511,
     1511, 1332, 1511, 1334, 1511,  773, 1336, 1511, 1511,  775,
     1338, 1511, 1340, 1342, 1344, 1511, 1511,  777, 1511, 1511,
     1511,  779, 1511, 1511, 1346, 1511, 1511, 1511,  781, 1511,
     1511, 1348, 1350, 1352, 1511, 1354, 1356, 1511, 1511, 1358,
      783, 1511, 1511, 1511,  785, 1511, 1511, 1360, 1511, 1362,
     1511,  787, 1364, 1511, 1511, 1366, 1368, 1511, 1370, 1372,
     1511, 1511, 1511,  789, 1511, 1511, 1511,  791, 1511, 1511,
     1374, 1511, 1376, 1511,  793,  795, 1511, 1511, 1378, 1380,
     1511, 1382, 1384, 1511, 1511, 1511,  797, 1511, 1511, 1511,

     1386, 1511, 1511, 1388, 1511, 1511, 1511,  799,  801, 1511,
     1511, 1390, 1392, 1511, 1394,  803, 1511, 1511, 1511,  805,
     1396, 1511, 1511, 1398, 1511, 1511, 1400, 1511, 1511, 1511,
     1511,  807, 1511, 1511, 1402, 1511, 1511, 1404,  809, 1511,
     1511, 1511,  811, 1406, 1511, 1408, 1410, 1412, 1511, 1414,
     1416, 1511, 1511, 1511,  813, 1511, 1511, 1418, 1511, 1511,
     1511,  815, 1511, 1511, 1511,  817, 1420, 1511, 1422, 1424,
     1426, 1511, 1428,  819, 1511, 1511, 1511,  821, 1511, 1511,
     1430, 1511, 1511, 1511,  823, 1511, 1511, 1511, 1432, 1434,
     1511, 1436, 1438, 1511, 1511, 1440,  825, 1511, 1511, 1511,

      827, 1511, 1511, 1442, 1511, 1444, 1511,  829, 1446, 1511,
     1511, 1448, 1450, 1511, 1452, 1454, 1511, 1511, 1511,  831,
     1511, 1511, 1511,  833, 1511, 1511, 1456, 1511, 1458, 1511,
      835,  837, 1511, 1511, 1460, 1462, 1511, 1464, 1466, 1511,
     1511, 1511,  839, 1511, 1511, 1511, 1468, 1511, 1511, 1470,
     1511, 1511, 1511,  841,  843, 1511, 1511, 1472, 1474, 1511,
     1476,  845, 1511, 1511, 1511,  847, 1478, 1511, 1511, 1480,
     1511, 1511, 1482, 1511, 1511, 1511, 1511,  849, 1511, 1511,
     1484, 1511, 1511, 1486,  851, 1511, 1511, 1511,  853, 1488,
     1511, 1490, 1492, 1494, 1511, 1496, 1498, 1511, 1511, 1511,

      855, 1511, 1511, 1500, 1511, 1511, 1511,  857, 1511, 1511,
     1511,  859, 1502, 1511, 1504, 1506, 1508, 1511, 1510,  861,
     1511, 1511, 1511,  863, 1511, 1511,  139, 1511, 1511, 1511,
      865, 1511, 1511, 1511,  542, 1008, 1511, 1006, 1004, 1511,
     1511, 1002,  867, 1511, 1511, 1511,  869, 1511, 1511, 1000,
     1511,  998, 1511,  871,  996, 1511, 1511,  994,  992, 1511,
      990,  988, 1511, 1511, 1511,  873, 1511, 1511, 1511,  875,
     1511, 1511,  986, 1511,  984, 1511,  877,  879, 1511, 1511,
      982,  980, 1511,  978,  976, 1511, 1511, 1511,  881, 1511,
     1511, 1511,  974, 1511, 1511,  972, 1511, 1511, 1511,  883,

      885, 1511, 1511,  970,  968, 1511,  966,  887, 1511, 1511,
     1511,  889,  964, 1511, 1511,  962, 1511, 1511,  960, 1511,
     1511, 1511, 1511,  891, 1511, 1511,  958, 1511, 1511,  956,
      893, 1511, 1511, 1511,  895,  954, 1511,  952,  950,  948,
     1511,  946,  944, 1511, 1511, 1511,  897, 1511, 1511,  942,
     1511, 1511, 1511,  899, 1511, 1511, 1511,  901,  940, 1511,
      938,  936,  934, 1511,  932,  903, 1511, 1511, 1511,  905,
     1511, 1511,  930, 1511, 1511, 1511,  907, 1511, 1511, 1511,
      928,  926, 1511,  924,  922, 1511, 1511,  920,  909, 1511,
     1511, 1511,  911, 1511, 1511,  918, 1511,  916, 1511,  913,

      914, 1511, 1511,  912,  910, 1511,  908,  906, 1511, 1511,
     1511,  915, 1511, 1511, 1511,  917, 1511, 1511,  904, 1511,
      902, 1511,  919,  921, 1511, 1511,  900,  898, 1511,  896,
      894, 1511, 1511, 1511,  923, 1511, 1511, 1511,  892, 1511,
     1511,  890, 1511, 1511, 1511,  925,  927, 1511, 1511,  888,
      886, 1511,  884,  929, 1511, 1511, 1511,  931,  882, 1511,
     1511,  880, 1511, 1511,  878, 1511, 1511, 1511, 1511,  933,
     1511, 1511,  876, 1511, 1511,  874,  935, 1511, 1511, 1511,
      937,  872, 1511,  870,  868,  866, 1511,  864,  862, 1511,
     1511, 1511,  939, 1511, 1511,  860, 1511, 1511, 1511,  941,

     1511, 1511, 1511,  943,  858, 1511,  856,  854,  852, 1511,
      850,  945, 1511, 1511, 1511,  947, 1511, 1511,  848, 1511,
     1511, 1511,  949, 1511, 1511, 1511,  846,  844, 1511,  842,
      840, 1511, 1511,  838,  951, 1511, 1511, 1511,  953, 1511,
     1511,  836, 1511,  834, 1511,  955,  832, 1511, 1511,  830,
      828, 1511,  826,  824, 1511, 1511, 1511,  957, 1511, 1511,
     1511,  959, 1511, 1511,  822, 1511,  820, 1511,  961,  963,
     1511, 1511,  818,  816, 1511,  814,  812, 1511, 1511, 1511,
      965, 1511, 1511, 1511,  810, 1511, 1511,  808, 1511, 1511,
     1511,  967,  969, 1511, 1511,  806,  804, 1511,  802,  971,

     1511, 1511, 1511,  973,  800, 1511, 1511,  798, 1511, 1511,
      796, 1511, 1511, 1511, 1511,  975, 1511, 1511,  794, 1511,
     1511,  792,  977, 1511, 1511, 1511,  979,  790, 1511,  788,
      786,  784, 1511,  782,  780, 1511, 1511, 1511,  981, 1511,
     1511,  778, 1511, 1511, 1511,  983, 1511, 1511, 1511,  985,
      776, 1511,  774,  772,  770, 1511,  768,  987, 1511, 1511,
     1511,  989, 1511, 1511,  766, 1511, 1511, 1511,  991, 1511,
     1511, 1511,  764,  762, 1511,  760,  758, 1511, 1511,  756,
      993, 1511, 1511, 1511,  995, 1511, 1511,  746, 1511,  746,
     1511,  997,  754, 1511, 1511,  750,  749, 1511,  748,  746,

     1511, 1511, 1511,  999, 1511, 1511, 1511, 1001, 1511, 1511,
      745, 1511,  744, 1511, 1003, 1005, 1511, 1511,  743,  741,
     1511,  740,  739, 1511, 1511, 1511, 1007, 1511, 1511, 1511,
      738, 1511, 1511,  732, 1511, 1511, 1511, 1009, 1011, 1511,
     1511,  728,  726, 1511,  725, 1013, 1511, 1511, 1511, 1015,
      723, 1511, 1511,  722, 1511, 1511,  721, 1511, 1511, 1511,
     1511, 1017, 1511, 1511,  719, 1511, 1511,  718, 1019, 1511,
     1511, 1511, 1021,  717, 1511,  715,  714,  713, 1511,  712,
      710, 1511, 1511, 1511, 1023, 1511, 1511,  709, 1511, 1511,
     1511, 1025, 1511, 1511, 1511, 1027,  708, 1511,  707,  706,

      705, 1511,  704, 1029, 1511, 1511, 1511, 1031, 1511, 1511,
      702, 1511, 1511, 1511, 1033, 1511, 1511, 1511,  701,  700,
     1511,  699,  698, 1511, 1511,  697, 1035, 1511, 1511, 1511,
     1037, 1511, 1511,  696, 1511,  694, 1511, 1039,  693, 1511,
     1511,  692,  691, 1511,  690,  689, 1511, 1511, 1511, 1041,
     1511, 1511, 1511, 1043, 1511, 1511,  688, 1511,  687, 1511,
     1045, 1047, 1511, 1511,  686,  685, 1511,  684,  683, 1511,
     1511, 1511, 1049, 1511, 1511, 1511,  681, 1511, 1511,  680,
     1511, 1511, 1511, 1051, 1053, 1511, 1511,  679,  678, 1511,
      677, 1055, 1511, 1511, 1511, 1057,  676, 1511, 1511,  675,

     1511, 1511,  674, 1511, 1511, 1511, 1511, 1059, 1511, 1511,
      673, 1511, 1511,  672, 1061, 1511, 1511, 1511, 1063,  671,
     1511,  670,  669,  668, 1511,  665,  663, 1511, 1511, 1511,
     1065, 1511, 1511,  662, 1511, 1511, 1511, 1067, 1511, 1511,
     1511, 1069,  661, 1511,  660,  659,  658, 1511,  657, 1071,
     1511, 1511, 1511, 1073, 1511, 1511,  656, 1511, 1511, 1511,
     1075, 1511, 1511, 1511,  655,  654, 1511,  653,  652, 1511,
     1511,  651, 1077, 1511, 1511, 1511, 1079, 1511, 1511,  650,
     1511,  649, 1511, 1081,  648, 1511, 1511,  647,  646, 1511,
      645,  644, 1511, 1511, 1511, 1083, 1511, 1511, 1511, 1085,

     1511, 1511,  643, 1511,  638, 1511, 1087, 1089, 1511, 1511,
      637,  633, 1511,  631,  630, 1511, 1511, 1511, 1091, 1511,
     1511, 1511,  629, 1511, 1511,  628, 1511, 1511, 1511, 1093,
     1095, 1511, 1511,  627,  626, 1511,  625, 1097, 1511, 1511,
     1511, 1099,  624, 1511, 1511,  623, 1511, 1511,  622, 1511,
     1511, 1511, 1511, 1101, 1511, 1511,  621, 1511, 1511,  620,
     1103, 1511, 1511, 1511, 1105,  619, 1511,  618,  617,  616,
     1511,  615,  614, 1511, 1511, 1511, 1107, 1511, 1511,  613,
     1511, 1511, 1511, 1109, 1511, 1511, 1511, 1111,  612, 1511,
      611,  610,  609, 1511,  608, 1113, 1511, 1511, 1511, 1115,

     1511, 1511,  607, 1511, 1511, 1511, 1117, 1511, 1511, 1511,
      606,  603, 1511,  602,  601, 1511, 1511,  490, 1119, 1511,
     1511, 1511, 1121, 1511, 1511,  600, 1511,  599, 1511, 1123,
      596, 1511, 1511,  547,  595, 1511,  593,  592, 1511, 1511,
     1511, 1125, 1511, 1511, 1511, 1127, 1511, 1511,  591, 1511,
      590, 1511, 1129, 1131, 1511, 1511,  589,  588, 1511,  587,
      586, 1511, 1511, 1511, 1133, 1511, 1511, 1511,  585, 1511,
     1511,  584, 1511, 1511, 1511, 1135, 1137, 1511, 1511,  583,
      582, 1511,  581, 1139, 1511, 1511, 1511, 1141,  580, 1511,
     1511,  579, 1511, 1511,  578, 1511, 1511, 1511, 1511, 1143,

     1511, 1511,  577, 1511, 1511,  576, 1145, 1511, 1511, 1511,
     1147,  575, 1511,  574,  573,  572, 1511,  571,  570, 1511,
     1511, 1511, 1149, 1511, 1511,  569, 1511, 1511, 1511, 1151,
     1511, 1511, 1511, 1153,  568, 1511,  567,  566,  565, 1511,
      564, 1155, 1511, 1511, 1511, 1157, 1511, 1511,  563, 1511,
     1511, 1511, 1159, 1511, 1511, 1511,  494,  562, 1511,  561,
      560, 1511, 1511,  557, 1161, 1511, 1511, 1511, 1163, 1511,
     1511,  556, 1511,  490, 1511, 1165,  555, 1511, 1511,  551,
      550, 1511,  549,  546, 1511, 1511, 1511, 1167, 1511, 1511,
     1511, 1169, 1511, 1511,  541, 1511,  540, 1511, 1171, 1173,

     1511, 1511,  539,  538, 1511,  537,  536, 1511, 1511, 1511,
     1175, 1511, 1511, 1511,  535, 1511, 1511,  534, 1511, 1511,
     1511, 1177, 1179, 1511, 1511,  533,  532, 1511,  531, 1181,
     1511, 1511, 1511, 1183,  530, 1511, 1511,  529, 1511, 1511,
      528, 1511, 1511, 1511, 1511, 1185, 1511, 1511,  527, 1511,
     1511,  526, 1187, 1511, 1511, 1511, 1189,  525, 1511,  524,
      523,  522, 1511,  521,  520, 1511, 1511, 1511, 1191, 1511,
     1511,  519, 1511, 1511, 1511, 1193, 1511, 1511, 1511, 1195,
      518, 1511,  517,  516,  515, 1511,  514, 1197, 1511, 1511,
     1511, 1199, 1511, 1511,  513, 1511, 1511, 1511, 1201, 1511,

     1511, 1511,  512,  511, 1511,  510,  509, 1511, 1511,  508,
     1203, 1511, 1511, 1511, 1205, 1511, 1511,  507, 1511,  506,
     1511, 1207,  505, 1511, 1511,  504,  503, 1511,  502,  501,
     1511, 1511, 1511, 1209, 1511, 1511, 1511, 1211, 1511, 1511,
      500, 1511,  499, 1511, 1213, 1215, 1511, 1511,  498,  497,
     1511,  415,  493, 1511, 1511, 1511, 1217, 1511, 1511, 1511,
      492, 1511, 1511,  491, 1511, 1511, 1511, 1219, 1221, 1511,
     1511,  490,  489, 1511,  485, 1223, 1511, 1511, 1511, 1225,
      484, 1511, 1511,  483, 1511, 1511,  482, 1511, 1511, 1511,
     1511, 1227, 1511, 1511,  481, 1511, 1511,  480, 1229, 1511,

     1511, 1511, 1231,  479, 1511,  478,  467,  466, 1511,  465,
      464, 1511, 1511, 1511, 1233, 1511, 1511,  463, 1511, 1511,
     1511, 1235, 1511, 1511, 1511, 1237,  462, 1511,  461,  460,
      459, 1511,  458, 1239, 1511, 1511, 1511, 1241, 1511, 1511,
      457, 1511, 1511, 1511, 1243, 1511, 1511, 1511,  454,  453,
     1511,  452,  451, 1511, 1511,  450, 1245, 1511, 1511, 1511,
     1247, 1511, 1511,  449, 1511,  448, 1511, 1249,  447, 1511,
     1511,  446,  445, 1511,  444,  443, 1511, 1511, 1511, 1251,
     1511, 1511, 1511, 1253, 1511, 1511,  442, 1511,  436, 1511,
     1255, 1257, 1511, 1511,  435,  434, 1511,  433,  432, 1511,

     1511, 1511, 1259, 1511, 1511, 1511,  429, 1511, 1511,  428,
     1511, 1511, 1511, 1261, 1263, 1511, 1511,  427,  426, 1511,
      425, 1265, 1511, 1511, 1511, 1267,  318, 1511, 1511,  424,
     1511, 1511,  423, 1511, 1511, 1511, 1511, 1269, 1511, 1511,
      422, 1511, 1511,  421, 1271, 1511, 1511, 1511, 1273,  420,
     1511,  417,  322,  415, 1511,  414,  412, 1511, 1511, 1511,
     1275, 1511, 1511,  411, 1511, 1511, 1511, 1277, 1511, 1511,
     1511, 1279,  410, 1511,  409,  408,  407, 1511,  406, 1281,
     1511, 1511, 1511, 1283, 1511, 1511,  405, 1511, 1511, 1511,
     1285, 1511, 1511, 1511,  404,  403, 1511,  300,  402, 1511,

     1511,  401, 1287, 1511, 1511, 1511, 1289, 1511, 1511,  400,
     1511,  264, 1511, 1291,  243, 1511, 1511,  231,  374, 1511,
      373,  372, 1511, 1511, 1511, 1293, 1511, 1511, 1511, 1295,
     1511, 1511,  371, 1511,  370, 1511, 1297, 1299, 1511, 1511,
      369,  368, 1511,  367,  366, 1511, 1511, 1511, 1301, 1511,
     1511, 1511,  365, 1511, 1511,  362, 1511, 1511, 1511, 1303,
     1305, 1511, 1511,  359,  358, 1511,  357, 1307, 1511, 1511,
     1511, 1309,  353, 1511, 1511,  352, 1511, 1511,  351, 1511,
     1511, 1511, 1511, 1311, 1511, 1511,  350, 1511, 1511,  349,
     1313, 1511, 1511, 1511, 1315,  346, 1511,  345,  344,  343,

     1511,  342,  341, 1511, 1511, 1511, 1317, 1511, 1511,  338,
     1511, 1511, 1511, 1319, 1511, 1511, 1511, 1321,  333, 1511,
      332,  331,  330, 1511,  329, 1323, 1511, 1511, 1511, 1325,
     1511, 1511,  321, 1511, 1511, 1511, 1327, 1511, 1511, 1511,
      320,  317, 1511,  312,  311, 1511, 1511,  310, 1329, 1511,
     1511, 1511, 1331, 1511, 1511,  309, 1511,  308, 1511, 1333,
      307, 1511, 1511,  306,  305, 1511,  302,  296, 1511, 1511,
     1511, 1335, 1511, 1511, 1511, 1337, 1511, 1511,  295, 1511,
      293, 1511, 1339, 1341, 1511, 1511,  125,  127, 1511,  292,
      290, 1511, 1511, 1511, 1343, 1511, 1511, 1511,  290, 1511,

     1511,  289, 1511, 1511, 1511, 1345, 1347, 1511, 1511,  286,
      285, 1511,  278, 1349, 1511, 1511, 1511, 1351,  264, 1511,
     1511,  243, 1511, 1511,  231, 1511, 1511, 1511, 1511, 1353,
     1511, 1511,  230, 1511, 1511,  227, 1355, 1511, 1511, 1511,
     1357,  226, 1511,  225,  218,  215, 1511,  214,  213, 1511,
     1511, 1511, 1359, 1511, 1511,  208, 1511, 1511, 1511, 1361,
     1511, 1511, 1511, 1363,  184, 1511,  182,  181,  172, 1511,
      157, 1365, 1511, 1511, 1511, 1367, 1511, 1511,  133, 1511,
     1511, 1511, 1369, 1511, 1511, 1511,  127,  125, 1511, 1511,
      117, 1511, 1511,  117, 1371, 1511, 1511, 1511, 1373, 1511,

     1511,  116, 1511,  116, 1511, 1375,   83, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1377, 1511, 1511,
     1511, 1379, 1511, 1511, 1511, 1511, 1511, 1511, 1381, 1383,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1385, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1387, 1389, 1511, 1511, 1511, 1511, 1511, 1511, 1391,
     1511, 1511, 1511, 1393, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1395, 1511, 1511, 1511, 1511,
     1511, 1511, 1397, 1511, 1511, 1511, 1399, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1401, 1511,

     1511, 1511, 1511, 1511, 1511, 1403, 1511, 1511, 1511, 1405,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1407, 1511, 1511,
     1511, 1409, 1511, 1511, 1511, 1511, 1511, 1511, 1411, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1413, 1511, 1511, 1511, 1415, 1511, 1511, 1511, 1511, 1511,
     1511, 1417, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1419, 1511, 1511, 1511, 1421, 1511, 1511,
     1511, 1511, 1511, 1511, 1423, 1425, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1427, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1429, 1431, 1511,

     1511, 1511, 1511, 1511, 1511, 1433, 1511, 1511, 1511, 1435,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1437, 1511, 1511, 1511, 1511, 1511, 1511, 1439, 1511,
     1511, 1511, 1441, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1443, 1511, 1511, 1511, 1511, 1511,
     1511, 1445, 1511, 1511, 1511, 1447, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1449, 1511, 1511, 1511, 1451, 1511, 1511,
     1511, 1511, 1511, 1511, 1453, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1455, 1511, 1511, 1511,
     1457, 1511, 1511, 1511, 1511, 1511, 1511, 1459, 1511, 1511,

     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1461,
     1511, 1511, 1511, 1463, 1511, 1511, 1511, 1511, 1511, 1511,
     1465, 1467, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1469, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1471, 1473, 1511, 1511, 1511, 1511, 1511,
     1511, 1475, 1511, 1511, 1511, 1477, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1479, 1511, 1511,
     1511, 1511, 1511, 1511, 1481, 1511, 1511, 1511, 1483, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1485, 1511, 1511, 1511, 1511, 1511, 1511, 1487, 1511, 1511,

     1511, 1489, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1491,
     1511, 1511, 1511, 1493, 1511, 1511, 1511, 1511, 1511, 1511,
     1495, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1497, 1511, 1511, 1511, 1499, 1511, 1511, 1511,
     1511, 1511, 1511, 1501, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1503, 1511, 1511, 1511, 1505,
     1511, 1511, 1511, 1511, 1511, 1511, 1507, 1509, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,

     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   89,
       89,   89,   89,   89,   89,   89,   89,   89,   89,   89,
       89,   89,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  124,  124,  124,  124, 1511,  124,  124,  124,  124,

      124,  124,  124,  124,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  128,  128,  128,
      128,  128,  128,  128,  128,  128, 1511,  128,  128,  128,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  183, 1511, 1511,  183,
      231,  231,  231, 1511,  231,  231,  231,  231,  231,  231,
      231,  231,  231,  243,  243,  243,  243,  243,  243,  243,
      243,  243,  243,  243, 1511,  243,  276, 1511, 1511, 1511,
     1511,  276,  276, 1511,  276,  279, 1511, 1511,  279,  280,

     1511, 1511,  280,  284,  284,  284,  284,  284, 1511,  284,
      284,  284,  284,  284,  284,  284,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  291,
      291,  291,  291, 1511,  291,  291,  291,  291,  291,  291,
      291,  291,  297,  297,  297,  297,  297,  297,  297,  297,
      297,  297, 1511,  297,  299, 1511, 1511,  299,  235,  235,
      235,  235,  235,  235,  235,  235,  235,  235, 1511,  235,
      377,  377, 1511, 1511,  377,  247,  247,  247,  247,  247,
      247,  247,  247,  247,  247, 1511,  247,  265,  265,  265,
      265,  265,  265,  265,  265,  265,  265, 1511,  265,  382,

      382,  382,  382,  382,  382,  382,  382,  382,  382, 1511,
      382,  399,  399,  399,  399, 1511,  399,  399,  399,  399,
      399,  399,  399,  399,  416, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511,  416,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469, 1511,  469,  472,  472,  472,  472,
      472,  472,  472,  472,  472,  472,  472,  472,  472,  477,
      477,  477,  477, 1511,  477,  477,  477,  477,  477,  477,
      477,  477,  496, 1511, 1511, 1511, 1511,  496, 1511, 1511,
      496,  545,  545,  545,  545, 1511,  545,  545,  545,  545,
      545,  545,  545,  545,  594,  594,  594,  594, 1511,  594,

      594,  594,  594,  594,  594,  594,  594,  632,  632,  632,
      632, 1511,  632,  632,  632,  632,  632,  632,  632,  632,
      664,  664,  664,  664, 1511,  664,  664,  664,  664,  664,
      664,  664,  664,  682,  682,  682,  682, 1511,  682,  682,
      682,  682,  682,  682,  682,  682,  695,  695,  695,  695,
     1511,  695,  695,  695,  695,  695,  695,  695,  695,  703,
      703,  703,  703, 1511,  703,  703,  703,  703,  703,  703,
      703,  703,  711,  711,  711,  711, 1511,  711,  711,  711,
      711,  711,  711,  711,  711,  716,  716,  716,  716, 1511,
      716,  716,  716,  716,  716,  716,  716,  716,  720,  720,

      720,  720, 1511,  720,  720,  720,  720,  720,  720,  720,
      720,  724,  724,  724,  724, 1511,  724,  724,  724,  724,
      724,  724,  724,  724,  727,  727,  727,  727, 1511,  727,
      727,  727,  727,  727,  727,  727,  727,  731,  731,  731,
      731, 1511,  731,  731,  731,  731,  731,  731,  731,  731,
      737,  737,  737,  737, 1511,  737,  737,  737,  737,  737,
      737,  737,  737,  742,  742,  742,  742, 1511,  742,  742,
      742,  742,  742,  742,  742,  742,  747,  747,  747,  747,
     1511,  747,  747,  747,  747,  747,  747,  747,  747,  753,
      753,  753,  753, 1511,  753,  753,  753,  753,  753,  753,

      753,  753,  755,  755,  755,  755, 1511,  755,  755,  755,
      755,  755,  755,  755,  755,  757,  757,  757,  757, 1511,
      757,  757,  757,  757,  757,  757,  757,  757,  759,  759,
      759,  759, 1511,  759,  759,  759,  759,  759,  759,  759,
      759,  761,  761,  761,  761, 1511,  761,  761,  761,  761,
      761,  761,  761,  761,  763,  763,  763,  763, 1511,  763,
      763,  763,  763,  763,  763,  763,  763,  765,  765,  765,
      765, 1511,  765,  765,  765,  765,  765,  765,  765,  765,
      767,  767,  767,  767, 1511,  767,  767,  767,  767,  767,
      767,  767,  767,  769,  769,  769,  769, 1511,  769,  769,

      769,  769,  769,  769,  769,  769,  771,  771,  771,  771,
     1511,  771,  771,  771,  771,  771,  771,  771,  771,  773,
      773,  773,  773, 1511,  773,  773,  773,  773,  773,  773,
      773,  773,  775,  775,  775,  775, 1511,  775,  775,  775,
      775,  775,  775,  775,  775,  777,  777,  777,  777, 1511,
      777,  777,  777,  777,  777,  777,  777,  777,  779,  779,
      779,  779, 1511,  779,  779,  779,  779,  779,  779,  779,
      779,  781,  781,  781,  781, 1511,  781,  781,  781,  781,
      781,  781,  781,  781,  783,  783,  783,  783, 1511,  783,
      783,  783,  783,  783,  783,  783,  783,  785,  785,  785,

      785, 1511,  785,  785,  785,  785,  785,  785,  785,  785,
      787,  787,  787,  787, 1511,  787,  787,  787,  787,  787,
      787,  787,  787,  789,  789,  789,  789, 1511,  789,  789,
      789,  789,  789,  789,  789,  789,  791,  791,  791,  791,
     1511,  791,  791,  791,  791,  791,  791,  791,  791,  793,
      793,  793,  793, 1511,  793,  793,  793,  793,  793,  793,
      793,  793,  795,  795,  795,  795, 1511,  795,  795,  795,
      795,  795,  795,  795,  795,  797,  797,  797,  797, 1511,
      797,  797,  797,  797,  797,  797,  797,  797,  799,  799,
      799,  799, 1511,  799,  799,  799,  799,  799,  799,  799,

      799,  801,  801,  801,  801, 1511,  801,  801,  801,  801,
      801,  801,  801,  801,  803,  803,  803,  803, 1511,  803,
      803,  803,  803,  803,  803,  803,  803,  805,  805,  805,
      805, 1511,  805,  805,  805,  805,  805,  805,  805,  805,
      807,  807,  807,  807, 1511,  807,  807,  807,  807,  807,
      807,  807,  807,  809,  809,  809,  809, 1511,  809,  809,
      809,  809,  809,  809,  809,  809,  811,  811,  811,  811,
     1511,  811,  811,  811,  811,  811,  811,  811,  811,  813,
      813,  813,  813, 1511,  813,  813,  813,  813,  813,  813,
      813,  813,  815,  815,  815,  815, 1511,  815,  815,  815,

      815,  815,  815,  815,  815,  817,  817,  817,  817, 1511,
      817,  817,  817,  817,  817,  817,  817,  817,  819,  819,
      819,  819, 1511,  819,  819,  819,  819,  819,  819,  819,
      819,  821,  821,  821,  821, 1511,  821,  821,  821,  821,
      821,  821,  821,  821,  823,  823,  823,  823, 1511,  823,
      823,  823,  823,  823,  823,  823,  823,  825,  825,  825,
      825, 1511,  825,  825,  825,  825,  825,  825,  825,  825,
      827,  827,  827,  827, 1511,  827,  827,  827,  827,  827,
      827,  827,  827,  829,  829,  829,  829, 1511,  829,  829,
      829,  829,  829,  829,  829,  829,  831,  831,  831,  831,

     1511,  831,  831,  831,  831,  831,  831,  831,  831,  833,
      833,  833,  833, 1511,  833,  833,  833,  833,  833,  833,
      833,  833,  835,  835,  835,  835, 1511,  835,  835,  835,
      835,  835,  835,  835,  835,  837,  837,  837,  837, 1511,
      837,  837,  837,  837,  837,  837,  837,  837,  839,  839,
      839,  839, 1511,  839,  839,  839,  839,  839,  839,  839,
      839,  841,  841,  841,  841, 1511,  841,  841,  841,  841,
      841,  841,  841,  841,  843,  843,  843,  843, 1511,  843,
      843,  843,  843,  843,  843,  843,  843,  845,  845,  845,
      845, 1511,  845,  845,  845,  845,  845,  845,  845,  845,

      847,  847,  847,  847, 1511,  847,  847,  847,  847,  847,
      847,  847,  847,  849,  849,  849,  849, 1511,  849,  849,
      849,  849,  849,  849,  849,  849,  851,  851,  851,  851,
     1511,  851,  851,  851,  851,  851,  851,  851,  851,  853,
      853,  853,  853, 1511,  853,  853,  853,  853,  853,  853,
      853,  853,  855,  855,  855,  855, 1511,  855,  855,  855,
      855,  855,  855,  855,  855,  857,  857,  857,  857, 1511,
      857,  857,  857,  857,  857,  857,  857,  857,  859,  859,
      859,  859, 1511,  859,  859,  859,  859,  859,  859,  859,
      859,  861,  861,  861,  861, 1511,  861,  861,  861,  861,

      861,  861,  861,  861,  863,  863,  863,  863, 1511,  863,
      863,  863,  863,  863,  863,  863,  863,  865,  865,  865,
      865, 1511,  865,  865,  865,  865,  865,  865,  865,  865,
      867,  867,  867,  867, 1511,  867,  867,  867,  867,  867,
      867,  867,  867,  869,  869,  869,  869, 1511,  869,  869,
      869,  869,  869,  869,  869,  869,  871,  871,  871,  871,
     1511,  871,  871,  871,  871,  871,  871,  871,  871,  873,
      873,  873,  873, 1511,  873,  873,  873,  873,  873,  873,
      873,  873,  875,  875,  875,  875, 1511,  875,  875,  875,
      875,  875,  875,  875,  875,  877,  877,  877,  877, 1511,

      877,  877,  877,  877,  877,  877,  877,  877,  879,  879,
      879,  879, 1511,  879,  879,  879,  879,  879,  879,  879,
      879,  881,  881,  881,  881, 1511,  881,  881,  881,  881,
      881,  881,  881,  881,  883,  883,  883,  883, 1511,  883,
      883,  883,  883,  883,  883,  883,  883,  885,  885,  885,
      885, 1511,  885,  885,  885,  885,  885,  885,  885,  885,
      887,  887,  887,  887, 1511,  887,  887,  887,  887,  887,
      887,  887,  887,  889,  889,  889,  889, 1511,  889,  889,
      889,  889,  889,  889,  889,  889,  891,  891,  891,  891,
     1511,  891,  891,  891,  891,  891,  891,  891,  891,  893,

      893,  893,  893, 1511,  893,  893,  893,  893,  893,  893,
      893,  893,  895,  895,  895,  895, 1511,  895,  895,  895,
      895,  895,  895,  895,  895,  897,  897,  897,  897, 1511,
      897,  897,  897,  897,  897,  897,  897,  897,  899,  899,
      899,  899, 1511,  899,  899,  899,  899,  899,  899,  899,
      899,  901,  901,  901,  901, 1511,  901,  901,  901,  901,
      901,  901,  901,  901,  903,  903,  903,  903, 1511,  903,
      903,  903,  903,  903,  903,  903,  903,  905,  905,  905,
      905, 1511,  905,  905,  905,  905,  905,  905,  905,  905,
      907,  907,  907,  907, 1511,  907,  907,  907,  907,  907,

      907,  907,  907,  909,  909,  909,  909, 1511,  909,  909,
      909,  909,  909,  909,  909,  909,  911,  911,  911,  911,
     1511,  911,  911,  911,  911,  911,  911,  911,  911,  913,
      913,  913,  913, 1511,  913,  913,  913,  913,  913,  913,
      913,  913,  915,  915,  915,  915, 1511,  915,  915,  915,
      915,  915,  915,  915,  915,  917,  917,  917,  917, 1511,
      917,  917,  917,  917,  917,  917,  917,  917,  919,  919,
      919,  919, 1511,  919,  919,  919,  919,  919,  919,  919,
      919,  921,  921,  921,  921, 1511,  921,  921,  921,  921,
      921,  921,  921,  921,  923,  923,  923,  923, 1511,  923,

      923,  923,  923,  923,  923,  923,  923,  925,  925,  925,
      925, 1511,  925,  925,  925,  925,  925,  925,  925,  925,
      927,  927,  927,  927, 1511,  927,  927,  927,  927,  927,
      927,  927,  927,  929,  929,  929,  929, 1511,  929,  929,
      929,  929,  929,  929,  929,  929,  931,  931,  931,  931,
     1511,  931,  931,  931,  931,  931,  931,  931,  931,  933,
      933,  933,  933, 1511,  933,  933,  933,  933,  933,  933,
      933,  933,  935,  935,  935,  935, 1511,  935,  935,  935,
      935,  935,  935,  935,  935,  937,  937,  937,  937, 1511,
      937,  937,  937,  937,  937,  937,  937,  937,  939,  939,

      939,  939, 1511,  939,  939,  939,  939,  939,  939,  939,
      939,  941,  941,  941,  941, 1511,  941,  941,  941,  941,
      941,  941,  941,  941,  943,  943,  943,  943, 1511,  943,
      943,  943,  943,  943,  943,  943,  943,  945,  945,  945,
      945, 1511,  945,  945,  945,  945,  945,  945,  945,  945,
      947,  947,  947,  947, 1511,  947,  947,  947,  947,  947,
      947,  947,  947,  949,  949,  949,  949, 1511,  949,  949,
      949,  949,  949,  949,  949,  949,  951,  951,  951,  951,
     1511,  951,  951,  951,  951,  951,  951,  951,  951,  953,
      953,  953,  953, 1511,  953,  953,  953,  953,  953,  953,

      953,  953,  955,  955,  955,  955, 1511,  955,  955,  955,
      955,  955,  955,  955,  955,  957,  957,  957,  957, 1511,
      957,  957,  957,  957,  957,  957,  957,  957,  959,  959,
      959,  959, 1511,  959,  959,  959,  959,  959,  959,  959,
      959,  961,  961,  961,  961, 1511,  961,  961,  961,  961,
      961,  961,  961,  961,  963,  963,  963,  963, 1511,  963,
      963,  963,  963,  963,  963,  963,  963,  965,  965,  965,
      965, 1511,  965,  965,  965,  965,  965,  965,  965,  965,
      967,  967,  967,  967, 1511,  967,  967,  967,  967,  967,
      967,  967,  967,  969,  969,  969,  969, 1511,  969,  969,

      969,  969,  969,  969,  969,  969,  971,  971,  971,  971,
     1511,  971,  971,  971,  971,  971,  971,  971,  971,  973,
      973,  973,  973, 1511,  973,  973,  973,  973,  973,  973,
      973,  973,  975,  975,  975,  975, 1511,  975,  975,  975,
      975,  975,  975,  975,  975,  977,  977,  977,  977, 1511,
      977,  977,  977,  977,  977,  977,  977,  977,  979,  979,
      979,  979, 1511,  979,  979,  979,  979,  979,  979,  979,
      979,  981,  981,  981,  981, 1511,  981,  981,  981,  981,
      981,  981,  981,  981,  983,  983,  983,  983, 1511,  983,
      983,  983,  983,  983,  983,  983,  983,  985,  985,  985,

      985, 1511,  985,  985,  985,  985,  985,  985,  985,  985,
      987,  987,  987,  987, 1511,  987,  987,  987,  987,  987,
      987,  987,  987,  989,  989,  989,  989, 1511,  989,  989,
      989,  989,  989,  989,  989,  989,  991,  991,  991,  991,
     1511,  991,  991,  991,  991,  991,  991,  991,  991,  993,
      993,  993,  993, 1511,  993,  993,  993,  993,  993,  993,
      993,  993,  995,  995,  995,  995, 1511,  995,  995,  995,
      995,  995,  995,  995,  995,  997,  997,  997,  997, 1511,
      997,  997,  997,  997,  997,  997,  997,  997,  999,  999,
      999,  999, 1511,  999,  999,  999,  999,  999,  999,  999,

      999, 1001, 1001, 1001, 1001, 1511, 1001, 1001, 1001, 1001,
     1001, 1001, 1001, 1001, 1003, 1003, 1003, 1003, 1511, 1003,
     1003, 1003, 1003, 1003, 1003, 1003, 1003, 1005, 1005, 1005,
     1005, 1511, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
     1007, 1007, 1007, 1007, 1511, 1007, 1007, 1007, 1007, 1007,
     1007, 1007, 1007, 1009, 1009, 1009, 1009, 1511, 1009, 1009,
     1009, 1009, 1009, 1009, 1009, 1009, 1011, 1011, 1011, 1011,
     1511, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1013,
     1013, 1013, 1013, 1511, 1013, 1013, 1013, 1013, 1013, 1013,
     1013, 1013, 1015, 1015, 1015, 1015, 1511, 1015, 1015, 1015,

     1015, 1015, 1015, 1015, 1015, 1017, 1017, 1017, 1017, 1511,
     1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1019, 1019,
     1019, 1019, 1511, 1019, 1019, 1019, 1019, 1019, 1019, 1019,
     1019, 1021, 1021, 1021, 1021, 1511, 1021, 1021, 1021, 1021,
     1021, 1021, 1021, 1021, 1023, 1023, 1023, 1023, 1511, 1023,
     1023, 1023, 1023, 1023, 1023, 1023, 1023, 1025, 1025, 1025,
     1025, 1511, 1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025,
     1027, 1027, 1027, 1027, 1511, 1027, 1027, 1027, 1027, 1027,
     1027, 1027, 1027, 1029, 1029, 1029, 1029, 1511, 1029, 1029,
     1029, 1029, 1029, 1029, 1029, 1029, 1031, 1031, 1031, 1031,

     1511, 1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031, 1033,
     1033, 1033, 1033, 1511, 1033, 1033, 1033, 1033, 1033, 1033,
     1033, 1033, 1035, 1035, 1035, 1035, 1511, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1035, 1037, 1037, 1037, 1037, 1511,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1039, 1039,
     1039, 1039, 1511, 1039, 1039, 1039, 1039, 1039, 1039, 1039,
     1039, 1041, 1041, 1041, 1041, 1511, 1041, 1041, 1041, 1041,
     1041, 1041, 1041, 1041, 1043, 1043, 1043, 1043, 1511, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1045, 1045, 1045,
     1045, 1511, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,

     1047, 1047, 1047, 1047, 1511, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1049, 1049, 1049, 1049, 1511, 1049, 1049,
     1049, 1049, 1049, 1049, 1049, 1049, 1051, 1051, 1051, 1051,
     1511, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1053,
     1053, 1053, 1053, 1511, 1053, 1053, 1053, 1053, 1053, 1053,
     1053, 1053, 1055, 1055, 1055, 1055, 1511, 1055, 1055, 1055,
     1055, 1055, 1055, 1055, 1055, 1057, 1057, 1057, 1057, 1511,
     1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1059, 1059,
     1059, 1059, 1511, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1061, 1061, 1061, 1061, 1511, 1061, 1061, 1061, 1061,

     1061, 1061, 1061, 1061, 1063, 1063, 1063, 1063, 1511, 1063,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1065, 1065, 1065,
     1065, 1511, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
     1067, 1067, 1067, 1067, 1511, 1067, 1067, 1067, 1067, 1067,
     1067, 1067, 1067, 1069, 1069, 1069, 1069, 1511, 1069, 1069,
     1069, 1069, 1069, 1069, 1069, 1069, 1071, 1071, 1071, 1071,
     1511, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1073,
     1073, 1073, 1073, 1511, 1073, 1073, 1073, 1073, 1073, 1073,
     1073, 1073, 1075, 1075, 1075, 1075, 1511, 1075, 1075, 1075,
     1075, 1075, 1075, 1075, 1075, 1077, 1077, 1077, 1077, 1511,

     1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1079, 1079,
     1079, 1079, 1511, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1081, 1081, 1081, 1081, 1511, 1081, 1081, 1081, 1081,
     1081, 1081, 1081, 1081, 1083, 1083, 1083, 1083, 1511, 1083,
     1083, 1083, 1083, 1083, 1083, 1083, 1083, 1085, 1085, 1085,
     1085, 1511, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
     1087, 1087, 1087, 1087, 1511, 1087, 1087, 1087, 1087, 1087,
     1087, 1087, 1087, 1089, 1089, 1089, 1089, 1511, 1089, 1089,
     1089, 1089, 1089, 1089, 1089, 1089, 1091, 1091, 1091, 1091,
     1511, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1093,

     1093, 1093, 1093, 1511, 1093, 1093, 1093, 1093, 1093, 1093,
     1093, 1093, 1095, 1095, 1095, 1095, 1511, 1095, 1095, 1095,
     1095, 1095, 1095, 1095, 1095, 1097, 1097, 1097, 1097, 1511,
     1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1099, 1099,
     1099, 1099, 1511, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
     1099, 1101, 1101, 1101, 1101, 1511, 1101, 1101, 1101, 1101,
     1101, 1101, 1101, 1101, 1103, 1103, 1103, 1103, 1511, 1103,
     1103, 1103, 1103, 1103, 1103, 1103, 1103, 1105, 1105, 1105,
     1105, 1511, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105,
     1107, 1107, 1107, 1107, 1511, 1107, 1107, 1107, 1107, 1107,

     1107, 1107, 1107, 1109, 1109, 1109, 1109, 1511, 1109, 1109,
     1109, 1109, 1109, 1109, 1109, 1109, 1111, 1111, 1111, 1111,
     1511, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1113,
     1113, 1113, 1113, 1511, 1113, 1113, 1113, 1113, 1113, 1113,
     1113, 1113, 1115, 1115, 1115, 1115, 1511, 1115, 1115, 1115,
     1115, 1115, 1115, 1115, 1115, 1117, 1117, 1117, 1117, 1511,
     1117, 1117, 1117, 1117, 1117, 1117, 1117, 1117, 1119, 1119,
     1119, 1119, 1511, 1119, 1119, 1119, 1119, 1119, 1119, 1119,
     1119, 1121, 1121, 1121, 1121, 1511, 1121, 1121, 1121, 1121,
     1121, 1121, 1121, 1121, 1123, 1123, 1123, 1123, 1511, 1123,

     1123, 1123, 1123, 1123, 1123, 1123, 1123, 1125, 1125, 1125,
     1125, 1511, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125,
     1127, 1127, 1127, 1127, 1511, 1127, 1127, 1127, 1127, 1127,
     1127, 1127, 1127, 1129, 1129, 1129, 1129, 1511, 1129, 1129,
     1129, 1129, 1129, 1129, 1129, 1129, 1131, 1131, 1131, 1131,
     1511, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1133,
     1133, 1133, 1133, 1511, 1133, 1133, 1133, 1133, 1133, 1133,
     1133, 1133, 1135, 1135, 1135, 1135, 1511, 1135, 1135, 1135,
     1135, 1135, 1135, 1135, 1135, 1137, 1137, 1137, 1137, 1511,
     1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1139, 1139,

     1139, 1139, 1511, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
     1139, 1141, 1141, 1141, 1141, 1511, 1141, 1141, 1141, 1141,
     1141, 1141, 1141, 1141, 1143, 1143, 1143, 1143, 1511, 1143,
     1143, 1143, 1143, 1143, 1143, 1143, 1143, 1145, 1145, 1145,
     1145, 1511, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
     1147, 1147, 1147, 1147, 1511, 1147, 1147, 1147, 1147, 1147,
     1147, 1147, 1147, 1149, 1149, 1149, 1149, 1511, 1149, 1149,
     1149, 1149, 1149, 1149, 1149, 1149, 1151, 1151, 1151, 1151,
     1511, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1153,
     1153, 1153, 1153, 1511, 1153, 1153, 1153, 1153, 1153, 1153,

     1153, 1153, 1155, 1155, 1155, 1155, 1511, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1155, 1157, 1157, 1157, 1157, 1511,
     1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1159, 1159,
     1159, 1159, 1511, 1159, 1159, 1159, 1159, 1159, 1159, 1159,
     1159, 1161, 1161, 1161, 1161, 1511, 1161, 1161, 1161, 1161,
     1161, 1161, 1161, 1161, 1163, 1163, 1163, 1163, 1511, 1163,
     1163, 1163, 1163, 1163, 1163, 1163, 1163, 1165, 1165, 1165,
     1165, 1511, 1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165,
     1167, 1167, 1167, 1167, 1511, 1167, 1167, 1167, 1167, 1167,
     1167, 1167, 1167, 1169, 1169, 1169, 1169, 1511, 1169, 1169,

     1169, 1169, 1169, 1169, 1169, 1169, 1171, 1171, 1171, 1171,
     1511, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1173,
     1173, 1173, 1173, 1511, 1173, 1173, 1173, 1173, 1173, 1173,
     1173, 1173, 1175, 1175, 1175, 1175, 1511, 1175, 1175, 1175,
     1175, 1175, 1175, 1175, 1175, 1177, 1177, 1177, 1177, 1511,
     1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1179, 1179,
     1179, 1179, 1511, 1179, 1179, 1179, 1179, 1179, 1179, 1179,
     1179, 1181, 1181, 1181, 1181, 1511, 1181, 1181, 1181, 1181,
     1181, 1181, 1181, 1181, 1183, 1183, 1183, 1183, 1511, 1183,
     1183, 1183, 1183, 1183, 1183, 1183, 1183, 1185, 1185, 1185,

     1185, 1511, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185,
     1187, 1187, 1187, 1187, 1511, 1187, 1187, 1187, 1187, 1187,
     1187, 1187, 1187, 1189, 1189, 1189, 1189, 1511, 1189, 1189,
     1189, 1189, 1189, 1189, 1189, 1189, 1191, 1191, 1191, 1191,
     1511, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1193,
     1193, 1193, 1193, 1511, 1193, 1193, 1193, 1193, 1193, 1193,
     1193, 1193, 1195, 1195, 1195, 1195, 1511, 1195, 1195, 1195,
     1195, 1195, 1195, 1195, 1195, 1197, 1197, 1197, 1197, 1511,
     1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1199, 1199,
     1199, 1199, 1511, 1199, 1199, 1199, 1199, 1199, 1199, 1199,

     1199, 1201, 1201, 1201, 1201, 1511, 1201, 1201, 1201, 1201,
     1201, 1201, 1201, 1201, 1203, 1203, 1203, 1203, 1511, 1203,
     1203, 1203, 1203, 1203, 1203, 1203, 1203, 1205, 1205, 1205,
     1205, 1511, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205,
     1207, 1207, 1207, 1207, 1511, 1207, 1207, 1207, 1207, 1207,
     1207, 1207, 1207, 1209, 1209, 1209, 1209, 1511, 1209, 1209,
     1209, 1209, 1209, 1209, 1209, 1209, 1211, 1211, 1211, 1211,
     1511, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1213,
     1213, 1213, 1213, 1511, 1213, 1213, 1213, 1213, 1213, 1213,
     1213, 1213, 1215, 1215, 1215, 1215, 1511, 1215, 1215, 1215,

     1215, 1215, 1215, 1215, 1215, 1217, 1217, 1217, 1217, 1511,
     1217, 1217, 1217, 1217, 1217, 1217, 1217, 1217, 1219, 1219,
     1219, 1219, 1511, 1219, 1219, 1219, 1219, 1219, 1219, 1219,
     1219, 1221, 1221, 1221, 1221, 1511, 1221, 1221, 1221, 1221,
     1221, 1221, 1221, 1221, 1223, 1223, 1223, 1223, 1511, 1223,
     1223, 1223, 1223, 1223, 1223, 1223, 1223, 1225, 1225, 1225,
     1225, 1511, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
     1227, 1227, 1227, 1227, 1511, 1227, 1227, 1227, 1227, 1227,
     1227, 1227, 1227, 1229, 1229, 1229, 1229, 1511, 1229, 1229,
     1229, 1229, 1229, 1229, 1229, 1229, 1231, 1231, 1231, 1231,

     1511, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1233,
     1233, 1233, 1233, 1511, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1235, 1235, 1235, 1235, 1511, 1235, 1235, 1235,
     1235, 1235, 1235, 1235, 1235, 1237, 1237, 1237, 1237, 1511,
     1237, 1237, 1237, 1237, 1237, 1237, 1237, 1237, 1239, 1239,
     1239, 1239, 1511, 1239, 1239, 1239, 1239, 1239, 1239, 1239,
     1239, 1241, 1241, 1241, 1241, 1511, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1243, 1243, 1243, 1243, 1511, 1243,
     1243, 1243, 1243, 1243, 1243, 1243, 1243, 1245, 1245, 1245,
     1245, 1511, 1245, 1245, 1245, 1245, 1245, 1245, 1245, 1245,

     1247, 1247, 1247, 1247, 1511, 1247, 1247, 1247, 1247, 1247,
     1247, 1247, 1247, 1249, 1249, 1249, 1249, 1511, 1249, 1249,
     1249, 1249, 1249, 1249, 1249, 1249, 1251, 1251, 1251, 1251,
     1511, 1251, 1251, 1251, 1251, 1251, 1251, 1251, 1251, 1253,
     1253, 1253, 1253, 1511, 1253, 1253, 1253, 1253, 1253, 1253,
     1253, 1253, 1255, 1255, 1255, 1255, 1511, 1255, 1255, 1255,
     1255, 1255, 1255, 1255, 1255, 1257, 1257, 1257, 1257, 1511,
     1257, 1257, 1257, 1257, 1257, 1257, 1257, 1257, 1259, 1259,
     1259, 1259, 1511, 1259, 1259, 1259, 1259, 1259, 1259, 1259,
     1259, 1261, 1261, 1261, 1261, 1511, 1261, 1261, 1261, 1261,

     1261, 1261, 1261, 1261, 1263, 1263, 1263, 1263, 1511, 1263,
     1263, 1263, 1263, 1263, 1263, 1263, 1263, 1265, 1265, 1265,
     1265, 1511, 1265, 1265, 1265, 1265, 1265, 1265, 1265, 1265,
     1267, 1267, 1267, 1267, 1511, 1267, 1267, 1267, 1267, 1267,
     1267, 1267, 1267, 1269, 1269, 1269, 1269, 1511, 1269, 1269,
     1269, 1269, 1269, 1269, 1269, 1269, 1271, 1271, 1271, 1271,
     1511, 1271, 1271, 1271, 1271, 1271, 1271, 1271, 1271, 1273,
     1273, 1273, 1273, 1511, 1273, 1273, 1273, 1273, 1273, 1273,
     1273, 1273, 1275, 1275, 1275, 1275, 1511, 1275, 1275, 1275,
     1275, 1275, 1275, 1275, 1275, 1277, 1277, 1277, 1277, 1511,

     1277, 1277, 1277, 1277, 1277, 1277, 1277, 1277, 1279, 1279,
     1279, 1279, 1511, 1279, 1279, 1279, 1279, 1279, 1279, 1279,
     1279, 1281, 1281, 1281, 1281, 1511, 1281, 1281, 1281, 1281,
     1281, 1281, 1281, 1281, 1283, 1283, 1283, 1283, 1511, 1283,
     1283, 1283, 1283, 1283, 1283, 1283, 1283, 1285, 1285, 1285,
     1285, 1511, 1285, 1285, 1285, 1285, 1285, 1285, 1285, 1285,
     1287, 1287, 1287, 1287, 1511, 1287, 1287, 1287, 1287, 1287,
     1287, 1287, 1287, 1289, 1289, 1289, 1289, 1511, 1289, 1289,
     1289, 1289, 1289, 1289, 1289, 1289, 1291, 1291, 1291, 1291,
     1511, 1291, 1291, 1291, 1291, 1291, 1291, 1291, 1291, 1293,

     1293, 1293, 1293, 1511, 1293, 1293, 1293, 1293, 1293, 1293,
     1293, 1293, 1295, 1295, 1295, 1295, 1511, 1295, 1295, 1295,
     1295, 1295, 1295, 1295, 1295, 1297, 1297, 1297, 1297, 1511,
     1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1299, 1299,
     1299, 1299, 1511, 1299, 1299, 1299, 1299, 1299, 1299, 1299,
     1299, 1301, 1301, 1301, 1301, 1511, 1301, 1301, 1301, 1301,
     1301, 1301, 1301, 1301, 1303, 1303, 1303, 1303, 1511, 1303,
     1303, 1303, 1303, 1303, 1303, 1303, 1303, 1305, 1305, 1305,
     1305, 1511, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305,
     1307, 1307, 1307, 1307, 1511, 1307, 1307, 1307, 1307, 1307,

     1307, 1307, 1307, 1309, 1309, 1309, 1309, 1511, 1309, 1309,
     1309, 1309, 1309, 1309, 1309, 1309, 1311, 1311, 1311, 1311,
     1511, 1311, 1311, 1311, 1311, 1311, 1311, 1311, 1311, 1313,
     1313, 1313, 1313, 1511, 1313, 1313, 1313, 1313, 1313, 1313,
     1313, 1313, 1315, 1315, 1315, 1315, 1511, 1315, 1315, 1315,
     1315, 1315, 1315, 1315, 1315, 1317, 1317, 1317, 1317, 1511,
     1317, 1317, 1317, 1317, 1317, 1317, 1317, 1317, 1319, 1319,
     1319, 1319, 1511, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
     1319, 1321, 1321, 1321, 1321, 1511, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1323, 1323, 1323, 1323, 1511, 1323,

     1323, 1323, 1323, 1323, 1323, 1323, 1323, 1325, 1325, 1325,
     1325, 1511, 1325, 1325, 1325, 1325, 1325, 1325, 1325, 1325,
     1327, 1327, 1327, 1327, 1511, 1327, 1327, 1327, 1327, 1327,
     1327, 1327, 1327, 1329, 1329, 1329, 1329, 1511, 1329, 1329,
     1329, 1329, 1329, 1329, 1329, 1329, 1331, 1331, 1331, 1331,
     1511, 1331, 1331, 1331, 1331, 1331, 1331, 1331, 1331, 1333,
     1333, 1333, 1333, 1511, 1333, 1333, 1333, 1333, 1333, 1333,
     1333, 1333, 1335, 1335, 1335, 1335, 1511, 1335, 1335, 1335,
     1335, 1335, 1335, 1335, 1335, 1337, 1337, 1337, 1337, 1511,
     1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1339, 1339,

     1339, 1339, 1511, 1339, 1339, 1339, 1339, 1339, 1339, 1339,
     1339, 1341, 1341, 1341, 1341, 1511, 1341, 1341, 1341, 1341,
     1341, 1341, 1341, 1341, 1343, 1343, 1343, 1343, 1511, 1343,
     1343, 1343, 1343, 1343, 1343, 1343, 1343, 1345, 1345, 1345,
     1345, 1511, 1345, 1345, 1345, 1345, 1345, 1345, 1345, 1345,
     1347, 1347, 1347, 1347, 1511, 1347, 1347, 1347, 1347, 1347,
     1347, 1347, 1347, 1349, 1349, 1349, 1349, 1511, 1349, 1349,
     1349, 1349, 1349, 1349, 1349, 1349, 1351, 1351, 1351, 1351,
     1511, 1351, 1351, 1351, 1351, 1351, 1351, 1351, 1351, 1353,
     1353, 1353, 1353, 1511, 1353, 1353, 1353, 1353, 1353, 1353,

     1353, 1353, 1355, 1355, 1355, 1355, 1511, 1355, 1355, 1355,
     1355, 1355, 1355, 1355, 1355, 1357, 1357, 1357, 1357, 1511,
     1357, 1357, 1357, 1357, 1357, 1357, 1357, 1357, 1359, 1359,
     1359, 1359, 1511, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1361, 1361, 1361, 1361, 1511, 1361, 1361, 1361, 1361,
     1361, 1361, 1361, 1361, 1363, 1363, 1363, 1363, 1511, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1365, 1365, 1365,
     1365, 1511, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     1367, 1367, 1367, 1367, 1511, 1367, 1367, 1367, 1367, 1367,
     1367, 1367, 1367, 1369, 1369, 1369, 1369, 1511, 1369, 1369,

     1369, 1369, 1369, 1369, 1369, 1369, 1371, 1371, 1371, 1371,
     1511, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1373,
     1373, 1373, 1373, 1511, 1373, 1373, 1373, 1373, 1373, 1373,
     1373, 1373, 1375, 1375, 1375, 1375, 1511, 1375, 1375, 1375,
     1375, 1375, 1375, 1375, 1375, 1377, 1377, 1377, 1377, 1511,
     1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377, 1379, 1379,
     1379, 1379, 1511, 1379, 1379, 1379, 1379, 1379, 1379, 1379,
     1379, 1381, 1381, 1381, 1381, 1511, 1381, 1381, 1381, 1381,
     1381, 1381, 1381, 1381, 1383, 1383, 1383, 1383, 1511, 1383,
     1383, 1383, 1383, 1383, 1383, 1383, 1383, 1385, 1385, 1385,

     1385, 1511, 1385, 1385, 1385, 1385, 1385, 1385, 1385, 1385,
     1387, 1387, 1387, 1387, 1511, 1387, 1387, 1387, 1387, 1387,
     1387, 1387, 1387, 1389, 1389, 1389, 1389, 1511, 1389, 1389,
     1389, 1389, 1389, 1389, 1389, 1389, 1391, 1391, 1391, 1391,
     1511, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1393,
     1393, 1393, 1393, 1511, 1393, 1393, 1393, 1393, 1393, 1393,
     1393, 1393, 1395, 1395, 1395, 1395, 1511, 1395, 1395, 1395,
     1395, 1395, 1395, 1395, 1395, 1397, 1397, 1397, 1397, 1511,
     1397, 1397, 1397, 1397, 1397, 1397, 1397, 1397, 1399, 1399,
     1399, 1399, 1511, 1399, 1399, 1399, 1399, 1399, 1399, 1399,

     1399, 1401, 1401, 1401, 1401, 1511, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1403, 1403, 1403, 1403, 1511, 1403,
     1403, 1403, 1403, 1403, 1403, 1403, 1403, 1405, 1405, 1405,
     1405, 1511, 1405, 1405, 1405, 1405, 1405, 1405, 1405, 1405,
     1407, 1407, 1407, 1407, 1511, 1407, 1407, 1407, 1407, 1407,
     1407, 1407, 1407, 1409, 1409, 1409, 1409, 1511, 1409, 1409,
     1409, 1409, 1409, 1409, 1409, 1409, 1411, 1411, 1411, 1411,
     1511, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1413,
     1413, 1413, 1413, 1511, 1413, 1413, 1413, 1413, 1413, 1413,
     1413, 1413, 1415, 1415, 1415, 1415, 1511, 1415, 1415, 1415,

     1415, 1415, 1415, 1415, 1415, 1417, 1417, 1417, 1417, 1511,
     1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1419, 1419,
     1419, 1419, 1511, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
     1419, 1421, 1421, 1421, 1421, 1511, 1421, 1421, 1421, 1421,
     1421, 1421, 1421, 1421, 1423, 1423, 1423, 1423, 1511, 1423,
     1423, 1423, 1423, 1423, 1423, 1423, 1423, 1425, 1425, 1425,
     1425, 1511, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425,
     1427, 1427, 1427, 1427, 1511, 1427, 1427, 1427, 1427, 1427,
     1427, 1427, 1427, 1429, 1429, 1429, 1429, 1511, 1429, 1429,
     1429, 1429, 1429, 1429, 1429, 1429, 1431, 1431, 1431, 1431,

     1511, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1433,
     1433, 1433, 1433, 1511, 1433, 1433, 1433, 1433, 1433, 1433,
     1433, 1433, 1435, 1435, 1435, 1435, 1511, 1435, 1435, 1435,
     1435, 1435, 1435, 1435, 1435, 1437, 1437, 1437, 1437, 1511,
     1437, 1437, 1437, 1437, 1437, 1437, 1437, 1437, 1439, 1439,
     1439, 1439, 1511, 1439, 1439, 1439, 1439, 1439, 1439, 1439,
     1439, 1441, 1441, 1441, 1441, 1511, 1441, 1441, 1441, 1441,
     1441, 1441, 1441, 1441, 1443, 1443, 1443, 1443, 1511, 1443,
     1443, 1443, 1443, 1443, 1443, 1443, 1443, 1445, 1445, 1445,
     1445, 1511, 1445, 1445, 1445, 1445, 1445, 1445, 1445, 1445,

     1447, 1447, 1447, 1447, 1511, 1447, 1447, 1447, 1447, 1447,
     1447, 1447, 1447, 1449, 1449, 1449, 1449, 1511, 1449, 1449,
     1449, 1449, 1449, 1449, 1449, 1449, 1451, 1451, 1451, 1451,
     1511, 1451, 1451, 1451, 1451, 1451, 1451, 1451, 1451, 1453,
     1453, 1453, 1453, 1511, 1453, 1453, 1453, 1453, 1453, 1453,
     1453, 1453, 1455, 1455, 1455, 1455, 1511, 1455, 1455, 1455,
     1455, 1455, 1455, 1455, 1455, 1457, 1457, 1457, 1457, 1511,
     1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1459, 1459,
     1459, 1459, 1511, 1459, 1459, 1459, 1459, 1459, 1459, 1459,
     1459, 1461, 1461, 1461, 1461, 1511, 1461, 1461, 1461, 1461,

     1461, 1461, 1461, 1461, 1463, 1463, 1463, 1463, 1511, 1463,
     1463, 1463, 1463, 1463, 1463, 1463, 1463, 1465, 1465, 1465,
     1465, 1511, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465,
     1467, 1467, 1467, 1467, 1511, 1467, 1467, 1467, 1467, 1467,
     1467, 1467, 1467, 1469, 1469, 1469, 1469, 1511, 1469, 1469,
     1469, 1469, 1469, 1469, 1469, 1469, 1471, 1471, 1471, 1471,
     1511, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1473,
     1473, 1473, 1473, 1511, 1473, 1473, 1473, 1473, 1473, 1473,
     1473, 1473, 1475, 1475, 1475, 1475, 1511, 1475, 1475, 1475,
     1475, 1475, 1475, 1475, 1475, 1477, 1477, 1477, 1477, 1511,

     1477, 1477, 1477, 1477, 1477, 1477, 1477, 1477, 1479, 1479,
     1479, 1479, 1511, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
     1479, 1481, 1481, 1481, 1481, 1511, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1483, 1483, 1483, 1483, 1511, 1483,
     1483, 1483, 1483, 1483, 1483, 1483, 1483, 1485, 1485, 1485,
     1485, 1511, 1485, 1485, 1485, 1485, 1485, 1485, 1485, 1485,
     1487, 1487, 1487, 1487, 1511, 1487, 1487, 1487, 1487, 1487,
     1487, 1487, 1487, 1489, 1489, 1489, 1489, 1511, 1489, 1489,
     1489, 1489, 1489, 1489, 1489, 1489, 1491, 1491, 1491, 1491,
     1511, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1493,

     1493, 1493, 1493, 1511, 1493, 1493, 1493, 1493, 1493, 1493,
     1493, 1493, 1495, 1495, 1495, 1495, 1511, 1495, 1495, 1495,
     1495, 1495, 1495, 1495, 1495, 1497, 1497, 1497, 1497, 1511,
     1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1499, 1499,
     1499, 1499, 1511, 1499, 1499, 1499, 1499, 1499, 1499, 1499,
     1499, 1501, 1501, 1501, 1501, 1511, 1501, 1501, 1501, 1501,
     1501, 1501, 1501, 1501, 1503, 1503, 1503, 1503, 1511, 1503,
     1503, 1503, 1503, 1503, 1503, 1503, 1503, 1505, 1505, 1505,
     1505, 1511, 1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505,
     1507, 1507, 1507, 1507, 1511, 1507, 1507, 1507, 1507, 1507,

     1507, 1507, 1507, 1509, 1509, 1509, 1509, 1511, 1509, 1509,
     1509, 1509, 1509, 1509, 1509, 1509,   29, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511
    } ;

static yyconst short int yy_chk[10080] =
    {   0,
        0,   35,   35,   35,  141,  141,    1,    2,    3,    4,
      132,  132,  132,  181,  181,    0,  170,    0,  170,  113,
      113,  170,  170,    1,    2,    3,    4,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    7,
        8,    7,    8,    9,   10,   40,   40,   27,   27,   28,

       28,   41,   47,   27,   81,   28,   42,   46,   54,   54,
       47,   47,    7,    8,    9,   10,   41,   46,    9,   10,
       27,   27,   28,   28,   42,   48,   48,   49,   53, 1007,
       48,   75,   49,   53,   53,   53,   55,   55,   49,   72,
       81,   75,   72,    7,    8,    9,   10,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,

       11,   11,   11,   11,   11,   11,   11,   11,   11,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,

       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   21,   21,   21,   21,   21,

       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   32,   37,   50,
       37,   50,   50,   51,   61,   51,   51,   63,   60,   61,
       74,   63, 1009,   74, 1011,   32,   62,   63,   84,   50,
       60,   37,   61,   51,   60,   60,   64,   62,   76,  325,
       62,  112,  112,   76, 1013,   64,   64,   64,   50,   84,

       32,  325,   65,   68,   88,   64,   88,   64,   65,   61,
       68,   68,   37,   43,   65,  130,   68,  102,  102,  118,
      118,  136,  144,  136,  194,  118,  149,   88,  112,  190,
       84, 1015,  149,  163,  163,  174,  174,  102,  194,  130,
      144, 1017,  118,  118,  136,   43,   43,  190,   43,  196,
       43,  163,  196,   43,  193,  193,  360,  218,   88,   43,
      218, 1019,   43,   43,  360,   43,   86,   86,   86,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,

       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   89,  204,
      125, 1021,  125,  168,  168,  169,  184,  169,  169,  184,
      204,  184,  171,  171, 1023,  184,  184,  125,  211,   89,
      125,  168,  239,  244, 1025,  169,  171,  171,  171,  171,
      171,  171,  216,  239,  211,  211,  277,  277,  216,  281,
      281,  283,  283, 1027,  244,  125,  314,  314,  244, 1029,
       89,   90,   90,   90,   90,   90,   90,   90,   90,   90,
       90,   90,   90,   90,   90,   90,   90,   90,   90,   90,

       90,   90,   90,   90,   90,   90,   90,   90,   90,   90,
       90,   90,   90,   90,   90,   90,   90,   90,   90,   90,
       90,   90,   90,   90,   90,   90,   90,   90,   90,   90,
       90,   90,   90,   90,   90,   90,   90,   90,   90,   90,
       90,   90,   90,   93,  232, 1031,  232,  237,  248,  237,
      255,  255,  260,  260,  375,  255,  375,  260,  266,  266,
      268,  268, 1033,  266,   93,  268, 1035,  232,   93,  248,
      237,  276,  276,  248,  313,  313,  255,  375,  260,  312,
      312,  312,  315,  315,  266, 1037,  268,  338,  338,  390,
      390,  276,  313,  416,  416,   93,   94,   94,   94,   94,

       94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
       94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
       94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
       94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
       94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
       94,   94,   94,   94,   94,   94,   94,   94,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,

       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   98,  282,  282,  377,  413,  413,  413,  479,
      479,  479, 1039,  486,  490, 1041,  377,  282,  282,  282,

      282,  282,  282,   98,  486,  490,   98, 1043,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,  100,  134,  138,

      134,  138,  189,  231,  189,  234,  235,  234,  287,  287,
      383,  383,  380, 1045,  287,  383,  496,  496,  100, 1047,
     1049,  134,  138,  550,  231,  189, 1051,  235,  234,  316,
      316,  287,  287,  380,  550, 1053,  383,  380,  242,  552,
      242, 1055, 1057,  316,  316,  316,  316,  316,  316,  100,
      552, 1059,  134,  138, 1061,  231,  189, 1063,  235,  234,
      238,  242,  238,  238,  238,  238,  238,  238,  238,  238,
      238,  238,  238,  238,  238,  238,  238,  238,  238,  238,
      238,  238,  238,  238,  238,  238,  238,  238,  238,  243,
      246,  247,  242,  251,  345,  558,  345,  387,  387,  345,

      393,  393,  387,  394,  394,  393,  558, 1065,  394,  345,
      243,  246,  247,  345,  251,  246,  398,  398,  251,  596,
      596,  596, 1067,  387, 1069,  561,  393,  597,  599,  394,
      398,  398,  398,  398,  398,  398,  561, 1071,  597,  599,
     1073,  243,  246,  247,  249,  251,  249,  249,  249,  249,
      249,  249,  249,  249,  249,  249,  249,  249,  249,  249,
      249,  249,  249,  249,  249,  249,  249,  249,  249,  249,
      249,  249,  249,  258,  602,  263,  270,  273,  274,  297,
      392,  297,  379,  381,  379,  602,  292, 1075,  292,  396,
      397, 1077, 1079, 1081,  258, 1083,  263,  270,  273,  274,

     1085,  392,  297,  292,  381,  379,  292,  408,  381,  483,
      396,  397,  468,  468,  470,  470, 1087,  468,  408,  470,
      483, 1089, 1091,  603, 1093,  258,  261,  263,  270,  273,
      274,  292,  392,  297,  603,  381,  379,  604,  468, 1095,
      470,  396,  397,  408, 1097,  483, 1099,  261,  604, 1101,
      261, 1103,  261,  261,  261,  261,  261,  261,  261,  261,
      261,  261,  261,  261,  261,  261,  261,  261,  261,  261,
      261,  261,  261,  261,  261,  261,  261,  261,  261,  262,
      262,  262,  262,  262,  262,  262,  262,  262,  262,  262,
      262,  262,  262,  262,  262,  262,  262,  262,  262,  262,

      262,  262,  262,  262,  262,  262,  262,  262,  262,  262,
      262,  262,  262,  262,  262,  262,  262,  262,  262,  262,
      262,  262,  262,  262,  262,  262,  262,  262,  262,  262,
      262,  262,  262,  262,  262,  262,  262,  262,  262,  262,
      262,  267,  267,  391,  391,  475,  475,  635,  391,  637,
      475,  638,  639,  641, 1105, 1107, 1109, 1111,  635, 1113,
      637, 1115,  638,  639,  641, 1117, 1119, 1121, 1123,  391,
      267,  475,  267,  267,  267,  267,  267,  267,  267,  267,
      267,  267,  267,  267,  267,  267,  267,  267,  267,  267,
      267,  267,  267,  267,  267,  267,  267,  267,  267,  298,

      391,  298,  298,  298,  298,  298,  298,  298,  298,  298,
      298,  298,  298,  298,  298,  298,  298,  298,  298,  298,
      298,  298,  298,  298,  298,  298,  298,  298,  384,  384,
      543,  543,  726,  726,  726,  543, 1125, 1127, 1129, 1131,
     1133, 1135, 1137, 1139, 1141,  634,  634,  634, 1143,  730,
      730,  730, 1145,  730, 1147,  726,  543,  384,  730,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  389,  389,  634,  389,
     1149, 1151, 1153, 1155, 1157, 1159,  730, 1161,  389, 1163,

      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  400,  474,  400,  473,
      473,  476, 1165,  478,  473,  478,  544,  544, 1167, 1169,
      546,  544,  546,  400, 1171, 1173,  400,  595,  474,  595,
      478, 1175,  476,  478, 1177,  473, 1179,  546, 1181, 1183,
      546, 1185,  544, 1187,  595, 1189, 1191,  595,  729,  729,
      729,  400,  471,  471,  643,  643,  643, 1193,  478,  474,
     1195, 1197, 1199,  476, 1201,  546,  473, 1203, 1205, 1207,
     1209,  729,  595,  544, 1211, 1213, 1215, 1217,  643, 1219,

     1221,  471, 1223,  471,  471,  471,  471,  471,  471,  471,
      471,  471,  471,  471,  471,  471,  471,  471,  471,  471,
      471,  471,  471,  471,  471,  471,  471,  471,  471,  471,
      633,  665,  633,  665,  667,  667,  667,  683, 1225,  683,
     1227, 1229,  696,  704,  696,  704, 1231,  633,  665, 1233,
      633,  665, 1235,  712,  683,  712, 1237,  683,  667,  696,
      704, 1239,  696,  704,  717, 1241,  717, 1243, 1245,  721,
      712,  721, 1247,  712, 1249,  633,  665,  725, 1251,  725,
     1253,  717,  683,  728,  717,  728,  721,  696,  704,  721,
      732, 1255,  732, 1257,  725, 1259, 1261,  725,  712,  738,

      728,  738, 1263,  728,  733,  733,  733,  732,  733,  717,
      732, 1265, 1267,  733,  721, 1269,  738, 1271, 1273,  738,
     1275,  743,  725,  743,  746,  746,  746, 1277,  728,  748,
     1279,  748,  751,  751,  751,  732, 1281,  754,  743,  754,
     1283,  743, 1285,  756,  738,  756,  748, 1287,  746,  748,
      758,  733,  758, 1289,  754, 1291,  751,  754, 1293,  760,
      756,  760, 1295,  756, 1297, 1299,  743,  758, 1301,  762,
      758,  762, 1303,  764,  748,  764,  760, 1305, 1307,  760,
     1309,  766,  754,  766, 1311,  768,  762,  768,  756,  762,
      764, 1313,  770,  764,  770,  758, 1315, 1317,  766, 1319,

     1321,  766,  768, 1323,  760,  768, 1325, 1327,  772,  770,
      772, 1329,  770, 1331,  762,  774, 1333,  774,  764,  776,
     1335,  776, 1337, 1339, 1341,  772,  766,  778,  772,  778,
      768,  780,  774,  780, 1343,  774,  776,  770,  782,  776,
      782, 1345, 1347, 1349,  778, 1351, 1353,  778,  780, 1355,
      784,  780,  784,  772,  786,  782,  786, 1357,  782, 1359,
      774,  788, 1361,  788,  776, 1363, 1365,  784, 1367, 1369,
      784,  786,  778,  790,  786,  790,  780,  792,  788,  792,
     1371,  788, 1373,  782,  794,  796,  794,  796, 1375, 1377,
      790, 1379, 1381,  790,  792,  784,  798,  792,  798,  786,

     1383,  794,  796, 1385,  794,  796,  788,  800,  802,  800,
      802, 1387, 1389,  798, 1391,  804,  798,  804,  790,  806,
     1393,  806,  792, 1395,  800,  802, 1397,  800,  802,  794,
      796,  808,  804,  808, 1399,  804,  806, 1401,  810,  806,
      810,  798,  812, 1403,  812, 1405, 1407, 1409,  808, 1411,
     1413,  808,  800,  802,  814,  810,  814, 1415,  810,  812,
      804,  816,  812,  816,  806,  818, 1417,  818, 1419, 1421,
     1423,  814, 1425,  820,  814,  820,  808,  822,  816,  822,
     1427,  816,  818,  810,  824,  818,  824,  812, 1429, 1431,
      820, 1433, 1435,  820,  822, 1437,  826,  822,  826,  814,

      828,  824,  828, 1439,  824, 1441,  816,  830, 1443,  830,
      818, 1445, 1447,  826, 1449, 1451,  826,  828,  820,  832,
      828,  832,  822,  834,  830,  834, 1453,  830, 1455,  824,
      836,  838,  836,  838, 1457, 1459,  832, 1461, 1463,  832,
      834,  826,  840,  834,  840,  828, 1465,  836,  838, 1467,
      836,  838,  830,  842,  844,  842,  844, 1469, 1471,  840,
     1473,  846,  840,  846,  832,  848, 1475,  848,  834, 1477,
      842,  844, 1479,  842,  844,  836,  838,  850,  846,  850,
     1481,  846,  848, 1483,  852,  848,  852,  840,  854, 1485,
      854, 1487, 1489, 1491,  850, 1493, 1495,  850,  842,  844,

      856,  852,  856, 1497,  852,  854,  846,  858,  854,  858,
      848,  860, 1499,  860, 1501, 1503, 1505,  856, 1507,  862,
      856,  862,  850,  864,  858,  864, 1522,  858,  860,  852,
      866,  860,  866,  854, 1546, 1005,  862, 1003, 1001,  862,
      864,  999,  868,  864,  868,  856,  870,  866,  870,  997,
      866,  995,  858,  872,  993,  872,  860,  991,  989,  868,
      987,  985,  868,  870,  862,  874,  870,  874,  864,  876,
      872,  876,  983,  872,  981,  866,  878,  880,  878,  880,
      979,  977,  874,  975,  973,  874,  876,  868,  882,  876,
      882,  870,  971,  878,  880,  969,  878,  880,  872,  884,

      886,  884,  886,  967,  965,  882,  963,  888,  882,  888,
      874,  890,  961,  890,  876,  959,  884,  886,  957,  884,
      886,  878,  880,  892,  888,  892,  955,  888,  890,  953,
      894,  890,  894,  882,  896,  951,  896,  949,  947,  945,
      892,  943,  941,  892,  884,  886,  898,  894,  898,  939,
      894,  896,  888,  900,  896,  900,  890,  902,  937,  902,
      935,  933,  931,  898,  929,  904,  898,  904,  892,  906,
      900,  906,  927,  900,  902,  894,  908,  902,  908,  896,
      925,  923,  904,  921,  919,  904,  906,  917,  910,  906,
      910,  898,  912,  908,  912,  915,  908,  913,  900,  914,

      911,  914,  902,  909,  907,  910,  905,  903,  910,  912,
      904,  916,  912,  916,  906,  918,  914,  918,  901,  914,
      899,  908,  920,  922,  920,  922,  897,  895,  916,  893,
      891,  916,  918,  910,  924,  918,  924,  912,  889,  920,
      922,  887,  920,  922,  914,  926,  928,  926,  928,  885,
      883,  924,  881,  930,  924,  930,  916,  932,  879,  932,
      918,  877,  926,  928,  875,  926,  928,  920,  922,  934,
      930,  934,  873,  930,  932,  871,  936,  932,  936,  924,
      938,  869,  938,  867,  865,  863,  934,  861,  859,  934,
      926,  928,  940,  936,  940,  857,  936,  938,  930,  942,

      938,  942,  932,  944,  855,  944,  853,  851,  849,  940,
      847,  946,  940,  946,  934,  948,  942,  948,  845,  942,
      944,  936,  950,  944,  950,  938,  843,  841,  946,  839,
      837,  946,  948,  835,  952,  948,  952,  940,  954,  950,
      954,  833,  950,  831,  942,  956,  829,  956,  944,  827,
      825,  952,  823,  821,  952,  954,  946,  958,  954,  958,
      948,  960,  956,  960,  819,  956,  817,  950,  962,  964,
      962,  964,  815,  813,  958,  811,  809,  958,  960,  952,
      966,  960,  966,  954,  807,  962,  964,  805,  962,  964,
      956,  968,  970,  968,  970,  803,  801,  966,  799,  972,

      966,  972,  958,  974,  797,  974,  960,  795,  968,  970,
      793,  968,  970,  962,  964,  976,  972,  976,  791,  972,
      974,  789,  978,  974,  978,  966,  980,  787,  980,  785,
      783,  781,  976,  779,  777,  976,  968,  970,  982,  978,
      982,  775,  978,  980,  972,  984,  980,  984,  974,  986,
      773,  986,  771,  769,  767,  982,  765,  988,  982,  988,
      976,  990,  984,  990,  763,  984,  986,  978,  992,  986,
      992,  980,  761,  759,  988,  757,  755,  988,  990,  753,
      994,  990,  994,  982,  996,  992,  996,  750,  992,  749,
      984,  998,  747,  998,  986,  745,  744,  994,  742,  741,

      994,  996,  988, 1000,  996, 1000,  990, 1002,  998, 1002,
      740,  998,  739,  992, 1004, 1006, 1004, 1006,  737,  736,
     1000,  735,  734, 1000, 1002,  994, 1008, 1002, 1008,  996,
      731, 1004, 1006,  727, 1004, 1006,  998, 1010, 1012, 1010,
     1012,  724,  722, 1008,  720, 1014, 1008, 1014, 1000, 1016,
      719, 1016, 1002,  718, 1010, 1012,  716, 1010, 1012, 1004,
     1006, 1018, 1014, 1018,  714, 1014, 1016,  713, 1020, 1016,
     1020, 1008, 1022,  711, 1022,  710,  707,  705, 1018,  703,
      702, 1018, 1010, 1012, 1024, 1020, 1024,  701, 1020, 1022,
     1014, 1026, 1022, 1026, 1016, 1028,  700, 1028,  699,  698,

      697, 1024,  695, 1030, 1024, 1030, 1018, 1032, 1026, 1032,
      694, 1026, 1028, 1020, 1034, 1028, 1034, 1022,  693,  691,
     1030,  686,  685, 1030, 1032,  684, 1036, 1032, 1036, 1024,
     1038, 1034, 1038,  682, 1034,  681, 1026, 1040,  680, 1040,
     1028,  677,  676, 1036,  675,  673, 1036, 1038, 1030, 1042,
     1038, 1042, 1032, 1044, 1040, 1044,  672, 1040,  671, 1034,
     1046, 1048, 1046, 1048,  670,  669, 1042,  666,  664, 1042,
     1044, 1036, 1050, 1044, 1050, 1038,  663, 1046, 1048,  662,
     1046, 1048, 1040, 1052, 1054, 1052, 1054,  661,  660, 1050,
      659, 1056, 1050, 1056, 1042, 1058,  658, 1058, 1044,  657,

     1052, 1054,  654, 1052, 1054, 1046, 1048, 1060, 1056, 1060,
      653, 1056, 1058,  652, 1062, 1058, 1062, 1050, 1064,  649,
     1064,  647,  646,  644, 1060,  632,  631, 1060, 1052, 1054,
     1066, 1062, 1066,  630, 1062, 1064, 1056, 1068, 1064, 1068,
     1058, 1070,  629, 1070,  627,  626,  625, 1066,  624, 1072,
     1066, 1072, 1060, 1074, 1068, 1074,  623, 1068, 1070, 1062,
     1076, 1070, 1076, 1064,  620,  619, 1072,  618,  617, 1072,
     1074,  614, 1078, 1074, 1078, 1066, 1080, 1076, 1080,  613,
     1076,  612, 1068, 1082,  611, 1082, 1070,  610,  609, 1078,
      608,  607, 1078, 1080, 1072, 1084, 1080, 1084, 1074, 1086,

     1082, 1086,  606, 1082,  601, 1076, 1088, 1090, 1088, 1090,
      600,  594, 1084,  593,  589, 1084, 1086, 1078, 1092, 1086,
     1092, 1080,  587, 1088, 1090,  586, 1088, 1090, 1082, 1094,
     1096, 1094, 1096,  585,  584, 1092,  583, 1098, 1092, 1098,
     1084, 1100,  582, 1100, 1086,  580, 1094, 1096,  579, 1094,
     1096, 1088, 1090, 1102, 1098, 1102,  578, 1098, 1100,  577,
     1104, 1100, 1104, 1092, 1106,  576, 1106,  575,  574,  572,
     1102,  571,  570, 1102, 1094, 1096, 1108, 1104, 1108,  569,
     1104, 1106, 1098, 1110, 1106, 1110, 1100, 1112,  568, 1112,
      567,  566,  565, 1108,  564, 1114, 1108, 1114, 1102, 1116,

     1110, 1116,  563, 1110, 1112, 1104, 1118, 1112, 1118, 1106,
      562,  560, 1114,  557,  556, 1114, 1116,  555, 1120, 1116,
     1120, 1108, 1122, 1118, 1122,  554, 1118,  551, 1110, 1124,
      549, 1124, 1112,  548,  545, 1120,  541,  537, 1120, 1122,
     1114, 1126, 1122, 1126, 1116, 1128, 1124, 1128,  536, 1124,
      535, 1118, 1130, 1132, 1130, 1132,  534,  533, 1126,  532,
      531, 1126, 1128, 1120, 1134, 1128, 1134, 1122,  528, 1130,
     1132,  527, 1130, 1132, 1124, 1136, 1138, 1136, 1138,  526,
      525, 1134,  524, 1140, 1134, 1140, 1126, 1142,  523, 1142,
     1128,  522, 1136, 1138,  520, 1136, 1138, 1130, 1132, 1144,

     1140, 1144,  519, 1140, 1142,  518, 1146, 1142, 1146, 1134,
     1148,  516, 1148,  515,  513,  512, 1144,  511,  510, 1144,
     1136, 1138, 1150, 1146, 1150,  503, 1146, 1148, 1140, 1152,
     1148, 1152, 1142, 1154,  502, 1154,  501,  500,  499, 1150,
      498, 1156, 1150, 1156, 1144, 1158, 1152, 1158,  497, 1152,
     1154, 1146, 1160, 1154, 1160, 1148,  495,  493, 1156,  492,
      491, 1156, 1158,  489, 1162, 1158, 1162, 1150, 1164, 1160,
     1164,  488, 1160,  485, 1152, 1166,  484, 1166, 1154,  482,
      481, 1162,  480,  477, 1162, 1164, 1156, 1168, 1164, 1168,
     1158, 1170, 1166, 1170,  466, 1166,  465, 1160, 1172, 1174,

     1172, 1174,  464,  463, 1168,  462,  461, 1168, 1170, 1162,
     1176, 1170, 1176, 1164,  460, 1172, 1174,  459, 1172, 1174,
     1166, 1178, 1180, 1178, 1180,  458,  457, 1176,  456, 1182,
     1176, 1182, 1168, 1184,  455, 1184, 1170,  453, 1178, 1180,
      452, 1178, 1180, 1172, 1174, 1186, 1182, 1186,  451, 1182,
     1184,  450, 1188, 1184, 1188, 1176, 1190,  449, 1190,  448,
      447,  446, 1186,  445,  444, 1186, 1178, 1180, 1192, 1188,
     1192,  441, 1188, 1190, 1182, 1194, 1190, 1194, 1184, 1196,
      440, 1196,  439,  438,  437, 1192,  436, 1198, 1192, 1198,
     1186, 1200, 1194, 1200,  435, 1194, 1196, 1188, 1202, 1196,

     1202, 1190,  433,  432, 1198,  431,  430, 1198, 1200,  429,
     1204, 1200, 1204, 1192, 1206, 1202, 1206,  428, 1202,  427,
     1194, 1208,  425, 1208, 1196,  424,  423, 1204,  422,  421,
     1204, 1206, 1198, 1210, 1206, 1210, 1200, 1212, 1208, 1212,
      420, 1208,  419, 1202, 1214, 1216, 1214, 1216,  418,  417,
     1210,  415,  414, 1210, 1212, 1204, 1218, 1212, 1218, 1206,
      412, 1214, 1216,  411, 1214, 1216, 1208, 1220, 1222, 1220,
     1222,  410,  409, 1218,  407, 1224, 1218, 1224, 1210, 1226,
      406, 1226, 1212,  405, 1220, 1222,  404, 1220, 1222, 1214,
     1216, 1228, 1224, 1228,  403, 1224, 1226,  402, 1230, 1226,

     1230, 1218, 1232,  401, 1232,  399,  376,  374, 1228,  372,
      369, 1228, 1220, 1222, 1234, 1230, 1234,  367, 1230, 1232,
     1224, 1236, 1232, 1236, 1226, 1238,  366, 1238,  365,  364,
      363, 1234,  362, 1240, 1234, 1240, 1228, 1242, 1236, 1242,
      361, 1236, 1238, 1230, 1244, 1238, 1244, 1232,  358,  357,
     1240,  356,  355, 1240, 1242,  354, 1246, 1242, 1246, 1234,
     1248, 1244, 1248,  353, 1244,  352, 1236, 1250,  351, 1250,
     1238,  350,  349, 1246,  348,  347, 1246, 1248, 1240, 1252,
     1248, 1252, 1242, 1254, 1250, 1254,  346, 1250,  344, 1244,
     1256, 1258, 1256, 1258,  343,  342, 1252,  340,  339, 1252,

     1254, 1246, 1260, 1254, 1260, 1248,  337, 1256, 1258,  336,
     1256, 1258, 1250, 1262, 1264, 1262, 1264,  335,  334, 1260,
      333, 1266, 1260, 1266, 1252, 1268,  332, 1268, 1254,  331,
     1262, 1264,  329, 1262, 1264, 1256, 1258, 1270, 1266, 1270,
      328, 1266, 1268,  327, 1272, 1268, 1272, 1260, 1274,  326,
     1274,  324,  323,  318, 1270,  317,  311, 1270, 1262, 1264,
     1276, 1272, 1276,  310, 1272, 1274, 1266, 1278, 1274, 1278,
     1268, 1280,  309, 1280,  308,  307,  306, 1276,  305, 1282,
     1276, 1282, 1270, 1284, 1278, 1284,  304, 1278, 1280, 1272,
     1286, 1280, 1286, 1274,  303,  302, 1282,  301,  295, 1282,

     1284,  294, 1288, 1284, 1288, 1276, 1290, 1286, 1290,  291,
     1286,  254, 1278, 1292,  245, 1292, 1280,  233,  230, 1288,
      227,  226, 1288, 1290, 1282, 1294, 1290, 1294, 1284, 1296,
     1292, 1296,  225, 1292,  224, 1286, 1298, 1300, 1298, 1300,
      223,  222, 1294,  221,  220, 1294, 1296, 1288, 1302, 1296,
     1302, 1290,  219, 1298, 1300,  217, 1298, 1300, 1292, 1304,
     1306, 1304, 1306,  214,  213, 1302,  212, 1308, 1302, 1308,
     1294, 1310,  210, 1310, 1296,  208, 1304, 1306,  207, 1304,
     1306, 1298, 1300, 1312, 1308, 1312,  206, 1308, 1310,  205,
     1314, 1310, 1314, 1302, 1316,  203, 1316,  202,  201,  200,

     1312,  199,  197, 1312, 1304, 1306, 1318, 1314, 1318,  195,
     1314, 1316, 1308, 1320, 1316, 1320, 1310, 1322,  192, 1322,
      191,  187,  186, 1318,  185, 1324, 1318, 1324, 1312, 1326,
     1320, 1326,  180, 1320, 1322, 1314, 1328, 1322, 1328, 1316,
      177,  173, 1324,  165,  156, 1324, 1326,  155, 1330, 1326,
     1330, 1318, 1332, 1328, 1332,  154, 1328,  153, 1320, 1334,
      152, 1334, 1322,  151,  150, 1330,  148,  133, 1330, 1332,
     1324, 1336, 1332, 1336, 1326, 1338, 1334, 1338,  131, 1334,
      129, 1328, 1340, 1342, 1340, 1342,  128,  126, 1336,  124,
      123, 1336, 1338, 1330, 1344, 1338, 1344, 1332,  121, 1340,

     1342,  120, 1340, 1342, 1334, 1346, 1348, 1346, 1348,  117,
      116, 1344,  105, 1350, 1344, 1350, 1336, 1352,   96, 1352,
     1338,   91, 1346, 1348,   87, 1346, 1348, 1340, 1342, 1354,
     1350, 1354,   83, 1350, 1352,   79, 1356, 1352, 1356, 1344,
     1358,   78, 1358,   77,   73,   71, 1354,   70,   69, 1354,
     1346, 1348, 1360, 1356, 1360,   66, 1356, 1358, 1350, 1362,
     1358, 1362, 1352, 1364,   58, 1364,   57,   56,   52, 1360,
       45, 1366, 1360, 1366, 1354, 1368, 1362, 1368,   36, 1362,
     1364, 1356, 1370, 1364, 1370, 1358,   31,   30, 1366,   29,
       26, 1366, 1368,   25, 1372, 1368, 1372, 1360, 1374, 1370,

     1374,   24, 1370,   23, 1362, 1376,    6, 1376, 1364,    0,
        0, 1372,    0,    0, 1372, 1374, 1366, 1378, 1374, 1378,
     1368, 1380, 1376, 1380,    0, 1376,    0, 1370, 1382, 1384,
     1382, 1384,    0,    0, 1378,    0,    0, 1378, 1380, 1372,
     1386, 1380, 1386, 1374,    0, 1382, 1384,    0, 1382, 1384,
     1376, 1388, 1390, 1388, 1390,    0,    0, 1386,    0, 1392,
     1386, 1392, 1378, 1394,    0, 1394, 1380,    0, 1388, 1390,
        0, 1388, 1390, 1382, 1384, 1396, 1392, 1396,    0, 1392,
     1394,    0, 1398, 1394, 1398, 1386, 1400,    0, 1400,    0,
        0,    0, 1396,    0,    0, 1396, 1388, 1390, 1402, 1398,

     1402,    0, 1398, 1400, 1392, 1404, 1400, 1404, 1394, 1406,
        0, 1406,    0,    0,    0, 1402,    0, 1408, 1402, 1408,
     1396, 1410, 1404, 1410,    0, 1404, 1406, 1398, 1412, 1406,
     1412, 1400,    0,    0, 1408,    0,    0, 1408, 1410,    0,
     1414, 1410, 1414, 1402, 1416, 1412, 1416,    0, 1412,    0,
     1404, 1418,    0, 1418, 1406,    0,    0, 1414,    0,    0,
     1414, 1416, 1408, 1420, 1416, 1420, 1410, 1422, 1418, 1422,
        0, 1418,    0, 1412, 1424, 1426, 1424, 1426,    0,    0,
     1420,    0,    0, 1420, 1422, 1414, 1428, 1422, 1428, 1416,
        0, 1424, 1426,    0, 1424, 1426, 1418, 1430, 1432, 1430,

     1432,    0,    0, 1428,    0, 1434, 1428, 1434, 1420, 1436,
        0, 1436, 1422,    0, 1430, 1432,    0, 1430, 1432, 1424,
     1426, 1438, 1434, 1438,    0, 1434, 1436,    0, 1440, 1436,
     1440, 1428, 1442,    0, 1442,    0,    0,    0, 1438,    0,
        0, 1438, 1430, 1432, 1444, 1440, 1444,    0, 1440, 1442,
     1434, 1446, 1442, 1446, 1436, 1448,    0, 1448,    0,    0,
        0, 1444,    0, 1450, 1444, 1450, 1438, 1452, 1446, 1452,
        0, 1446, 1448, 1440, 1454, 1448, 1454, 1442,    0,    0,
     1450,    0,    0, 1450, 1452,    0, 1456, 1452, 1456, 1444,
     1458, 1454, 1458,    0, 1454,    0, 1446, 1460,    0, 1460,

     1448,    0,    0, 1456,    0,    0, 1456, 1458, 1450, 1462,
     1458, 1462, 1452, 1464, 1460, 1464,    0, 1460,    0, 1454,
     1466, 1468, 1466, 1468,    0,    0, 1462,    0,    0, 1462,
     1464, 1456, 1470, 1464, 1470, 1458,    0, 1466, 1468,    0,
     1466, 1468, 1460, 1472, 1474, 1472, 1474,    0,    0, 1470,
        0, 1476, 1470, 1476, 1462, 1478,    0, 1478, 1464,    0,
     1472, 1474,    0, 1472, 1474, 1466, 1468, 1480, 1476, 1480,
        0, 1476, 1478,    0, 1482, 1478, 1482, 1470, 1484,    0,
     1484,    0,    0,    0, 1480,    0,    0, 1480, 1472, 1474,
     1486, 1482, 1486,    0, 1482, 1484, 1476, 1488, 1484, 1488,

     1478, 1490,    0, 1490,    0,    0,    0, 1486,    0, 1492,
     1486, 1492, 1480, 1494, 1488, 1494,    0, 1488, 1490, 1482,
     1496, 1490, 1496, 1484,    0,    0, 1492,    0,    0, 1492,
     1494,    0, 1498, 1494, 1498, 1486, 1500, 1496, 1500,    0,
     1496,    0, 1488, 1502,    0, 1502, 1490,    0,    0, 1498,
        0,    0, 1498, 1500, 1492, 1504, 1500, 1504, 1494, 1506,
     1502, 1506,    0, 1502,    0, 1496, 1508, 1510, 1508, 1510,
        0,    0, 1504,    0,    0, 1504, 1506, 1498,    0, 1506,
        0, 1500,    0, 1508, 1510,    0, 1508, 1510, 1502,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

     1504,    0,    0,    0, 1506,    0,    0,    0,    0,    0,
        0, 1508, 1510, 1512, 1512, 1512, 1512, 1512, 1512, 1512,
     1512, 1512, 1512, 1512, 1512, 1512, 1513, 1513, 1513, 1513,
     1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1514,
     1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514,
     1514, 1514, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515,
     1515, 1515, 1515, 1515, 1515, 1516, 1516, 1516, 1516, 1516,
     1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1517, 1517,
     1517, 1517, 1517, 1517, 1517, 1517, 1517, 1517, 1517, 1517,
     1517, 1518, 1518, 1518, 1518,    0, 1518, 1518, 1518, 1518,

     1518, 1518, 1518, 1518, 1519, 1519, 1519, 1519, 1519, 1519,
     1519, 1519, 1519, 1519, 1519, 1519, 1519, 1520, 1520, 1520,
     1520, 1520, 1520, 1520, 1520, 1520,    0, 1520, 1520, 1520,
     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
     1521, 1521, 1521, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
     1523, 1523, 1523, 1523, 1523, 1523, 1524,    0,    0, 1524,
     1525, 1525, 1525,    0, 1525, 1525, 1525, 1525, 1525, 1525,
     1525, 1525, 1525, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
     1526, 1526, 1526, 1526,    0, 1526, 1527,    0,    0,    0,
        0, 1527, 1527,    0, 1527, 1528,    0,    0, 1528, 1529,

        0,    0, 1529, 1530, 1530, 1530, 1530, 1530,    0, 1530,
     1530, 1530, 1530, 1530, 1530, 1530, 1531, 1531, 1531, 1531,
     1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1532,
     1532, 1532, 1532,    0, 1532, 1532, 1532, 1532, 1532, 1532,
     1532, 1532, 1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533,
     1533, 1533,    0, 1533, 1534,    0,    0, 1534, 1535, 1535,
     1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535,    0, 1535,
     1536, 1536,    0,    0, 1536, 1537, 1537, 1537, 1537, 1537,
     1537, 1537, 1537, 1537, 1537,    0, 1537, 1538, 1538, 1538,
     1538, 1538, 1538, 1538, 1538, 1538, 1538,    0, 1538, 1539,

     1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539,    0,
     1539, 1540, 1540, 1540, 1540,    0, 1540, 1540, 1540, 1540,
     1540, 1540, 1540, 1540, 1541,    0,    0,    0,    0,    0,
        0,    0,    0, 1541, 1542, 1542, 1542, 1542, 1542, 1542,
     1542, 1542, 1542, 1542,    0, 1542, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1544,
     1544, 1544, 1544,    0, 1544, 1544, 1544, 1544, 1544, 1544,
     1544, 1544, 1545,    0,    0,    0,    0, 1545,    0,    0,
     1545, 1547, 1547, 1547, 1547,    0, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1548, 1548, 1548, 1548,    0, 1548,

     1548, 1548, 1548, 1548, 1548, 1548, 1548, 1549, 1549, 1549,
     1549,    0, 1549, 1549, 1549, 1549, 1549, 1549, 1549, 1549,
     1550, 1550, 1550, 1550,    0, 1550, 1550, 1550, 1550, 1550,
     1550, 1550, 1550, 1551, 1551, 1551, 1551,    0, 1551, 1551,
     1551, 1551, 1551, 1551, 1551, 1551, 1552, 1552, 1552, 1552,
        0, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1553,
     1553, 1553, 1553,    0, 1553, 1553, 1553, 1553, 1553, 1553,
     1553, 1553, 1554, 1554, 1554, 1554,    0, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1555, 1555, 1555, 1555,    0,
     1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1556, 1556,

     1556, 1556,    0, 1556, 1556, 1556, 1556, 1556, 1556, 1556,
     1556, 1557, 1557, 1557, 1557,    0, 1557, 1557, 1557, 1557,
     1557, 1557, 1557, 1557, 1558, 1558, 1558, 1558,    0, 1558,
     1558, 1558, 1558, 1558, 1558, 1558, 1558, 1559, 1559, 1559,
     1559,    0, 1559, 1559, 1559, 1559, 1559, 1559, 1559, 1559,
     1560, 1560, 1560, 1560,    0, 1560, 1560, 1560, 1560, 1560,
     1560, 1560, 1560, 1561, 1561, 1561, 1561,    0, 1561, 1561,
     1561, 1561, 1561, 1561, 1561, 1561, 1562, 1562, 1562, 1562,
        0, 1562, 1562, 1562, 1562, 1562, 1562, 1562, 1562, 1563,
     1563, 1563, 1563,    0, 1563, 1563, 1563, 1563, 1563, 1563,

     1563, 1563, 1564, 1564, 1564, 1564,    0, 1564, 1564, 1564,
     1564, 1564, 1564, 1564, 1564, 1565, 1565, 1565, 1565,    0,
     1565, 1565, 1565, 1565, 1565, 1565, 1565, 1565, 1566, 1566,
     1566, 1566,    0, 1566, 1566, 1566, 1566, 1566, 1566, 1566,
     1566, 1567, 1567, 1567, 1567,    0, 1567, 1567, 1567, 1567,
     1567, 1567, 1567, 1567, 1568, 1568, 1568, 1568,    0, 1568,
     1568, 1568, 1568, 1568, 1568, 1568, 1568, 1569, 1569, 1569,
     1569,    0, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569,
     1570, 1570, 1570, 1570,    0, 1570, 1570, 1570, 1570, 1570,
     1570, 1570, 1570, 1571, 1571, 1571, 1571,    0, 1571, 1571,

     1571, 1571, 1571, 1571, 1571, 1571, 1572, 1572, 1572, 1572,
        0, 1572, 1572, 1572, 1572, 1572, 1572, 1572, 1572, 1573,
     1573, 1573, 1573,    0, 1573, 1573, 1573, 1573, 1573, 1573,
     1573, 1573, 1574, 1574, 1574, 1574,    0, 1574, 1574, 1574,
     1574, 1574, 1574, 1574, 1574, 1575, 1575, 1575, 1575,    0,
     1575, 1575, 1575, 1575, 1575, 1575, 1575, 1575, 1576, 1576,
     1576, 1576,    0, 1576, 1576, 1576, 1576, 1576, 1576, 1576,
     1576, 1577, 1577, 1577, 1577,    0, 1577, 1577, 1577, 1577,
     1577, 1577, 1577, 1577, 1578, 1578, 1578, 1578,    0, 1578,
     1578, 1578, 1578, 1578, 1578, 1578, 1578, 1579, 1579, 1579,

     1579,    0, 1579, 1579, 1579, 1579, 1579, 1579, 1579, 1579,
     1580, 1580, 1580, 1580,    0, 1580, 1580, 1580, 1580, 1580,
     1580, 1580, 1580, 1581, 1581, 1581, 1581,    0, 1581, 1581,
     1581, 1581, 1581, 1581, 1581, 1581, 1582, 1582, 1582, 1582,
        0, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1583,
     1583, 1583, 1583,    0, 1583, 1583, 1583, 1583, 1583, 1583,
     1583, 1583, 1584, 1584, 1584, 1584,    0, 1584, 1584, 1584,
     1584, 1584, 1584, 1584, 1584, 1585, 1585, 1585, 1585,    0,
     1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1586, 1586,
     1586, 1586,    0, 1586, 1586, 1586, 1586, 1586, 1586, 1586,

     1586, 1587, 1587, 1587, 1587,    0, 1587, 1587, 1587, 1587,
     1587, 1587, 1587, 1587, 1588, 1588, 1588, 1588,    0, 1588,
     1588, 1588, 1588, 1588, 1588, 1588, 1588, 1589, 1589, 1589,
     1589,    0, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
     1590, 1590, 1590, 1590,    0, 1590, 1590, 1590, 1590, 1590,
     1590, 1590, 1590, 1591, 1591, 1591, 1591,    0, 1591, 1591,
     1591, 1591, 1591, 1591, 1591, 1591, 1592, 1592, 1592, 1592,
        0, 1592, 1592, 1592, 1592, 1592, 1592, 1592, 1592, 1593,
     1593, 1593, 1593,    0, 1593, 1593, 1593, 1593, 1593, 1593,
     1593, 1593, 1594, 1594, 1594, 1594,    0, 1594, 1594, 1594,

     1594, 1594, 1594, 1594, 1594, 1595, 1595, 1595, 1595,    0,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1596, 1596,
     1596, 1596,    0, 1596, 1596, 1596, 1596, 1596, 1596, 1596,
     1596, 1597, 1597, 1597, 1597,    0, 1597, 1597, 1597, 1597,
     1597, 1597, 1597, 1597, 1598, 1598, 1598, 1598,    0, 1598,
     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1599, 1599, 1599,
     1599,    0, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
     1600, 1600, 1600, 1600,    0, 1600, 1600, 1600, 1600, 1600,
     1600, 1600, 1600, 1601, 1601, 1601, 1601,    0, 1601, 1601,
     1601, 1601, 1601, 1601, 1601, 1601, 1602, 1602, 1602, 1602,

        0, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1603,
     1603, 1603, 1603,    0, 1603, 1603, 1603, 1603, 1603, 1603,
     1603, 1603, 1604, 1604, 1604, 1604,    0, 1604, 1604, 1604,
     1604, 1604, 1604, 1604, 1604, 1605, 1605, 1605, 1605,    0,
     1605, 1605, 1605, 1605, 1605, 1605, 1605, 1605, 1606, 1606,
     1606, 1606,    0, 1606, 1606, 1606, 1606, 1606, 1606, 1606,
     1606, 1607, 1607, 1607, 1607,    0, 1607, 1607, 1607, 1607,
     1607, 1607, 1607, 1607, 1608, 1608, 1608, 1608,    0, 1608,
     1608, 1608, 1608, 1608, 1608, 1608, 1608, 1609, 1609, 1609,
     1609,    0, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609,

     1610, 1610, 1610, 1610,    0, 1610, 1610, 1610, 1610, 1610,
     1610, 1610, 1610, 1611, 1611, 1611, 1611,    0, 1611, 1611,
     1611, 1611, 1611, 1611, 1611, 1611, 1612, 1612, 1612, 1612,
        0, 1612, 1612, 1612, 1612, 1612, 1612, 1612, 1612, 1613,
     1613, 1613, 1613,    0, 1613, 1613, 1613, 1613, 1613, 1613,
     1613, 1613, 1614, 1614, 1614, 1614,    0, 1614, 1614, 1614,
     1614, 1614, 1614, 1614, 1614, 1615, 1615, 1615, 1615,    0,
     1615, 1615, 1615, 1615, 1615, 1615, 1615, 1615, 1616, 1616,
     1616, 1616,    0, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
     1616, 1617, 1617, 1617, 1617,    0, 1617, 1617, 1617, 1617,

     1617, 1617, 1617, 1617, 1618, 1618, 1618, 1618,    0, 1618,
     1618, 1618, 1618, 1618, 1618, 1618, 1618, 1619, 1619, 1619,
     1619,    0, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619,
     1620, 1620, 1620, 1620,    0, 1620, 1620, 1620, 1620, 1620,
     1620, 1620, 1620, 1621, 1621, 1621, 1621,    0, 1621, 1621,
     1621, 1621, 1621, 1621, 1621, 1621, 1622, 1622, 1622, 1622,
        0, 1622, 1622, 1622, 1622, 1622, 1622, 1622, 1622, 1623,
     1623, 1623, 1623,    0, 1623, 1623, 1623, 1623, 1623, 1623,
     1623, 1623, 1624, 1624, 1624, 1624,    0, 1624, 1624, 1624,
     1624, 1624, 1624, 1624, 1624, 1625, 1625, 1625, 1625,    0,

     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1626, 1626,
     1626, 1626,    0, 1626, 1626, 1626, 1626, 1626, 1626, 1626,
     1626, 1627, 1627, 1627, 1627,    0, 1627, 1627, 1627, 1627,
     1627, 1627, 1627, 1627, 1628, 1628, 1628, 1628,    0, 1628,
     1628, 1628, 1628, 1628, 1628, 1628, 1628, 1629, 1629, 1629,
     1629,    0, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629,
     1630, 1630, 1630, 1630,    0, 1630, 1630, 1630, 1630, 1630,
     1630, 1630, 1630, 1631, 1631, 1631, 1631,    0, 1631, 1631,
     1631, 1631, 1631, 1631, 1631, 1631, 1632, 1632, 1632, 1632,
        0, 1632, 1632, 1632, 1632, 1632, 1632, 1632, 1632, 1633,

     1633, 1633, 1633,    0, 1633, 1633, 1633, 1633, 1633, 1633,
     1633, 1633, 1634, 1634, 1634, 1634,    0, 1634, 1634, 1634,
     1634, 1634, 1634, 1634, 1634, 1635, 1635, 1635, 1635,    0,
     1635, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 1636, 1636,
     1636, 1636,    0, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
     1636, 1637, 1637, 1637, 1637,    0, 1637, 1637, 1637, 1637,
     1637, 1637, 1637, 1637, 1638, 1638, 1638, 1638,    0, 1638,
     1638, 1638, 1638, 1638, 1638, 1638, 1638, 1639, 1639, 1639,
     1639,    0, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639,
     1640, 1640, 1640, 1640,    0, 1640, 1640, 1640, 1640, 1640,

     1640, 1640, 1640, 1641, 1641, 1641, 1641,    0, 1641, 1641,
     1641, 1641, 1641, 1641, 1641, 1641, 1642, 1642, 1642, 1642,
        0, 1642, 1642, 1642, 1642, 1642, 1642, 1642, 1642, 1643,
     1643, 1643, 1643,    0, 1643, 1643, 1643, 1643, 1643, 1643,
     1643, 1643, 1644, 1644, 1644, 1644,    0, 1644, 1644, 1644,
     1644, 1644, 1644, 1644, 1644, 1645, 1645, 1645, 1645,    0,
     1645, 1645, 1645, 1645, 1645, 1645, 1645, 1645, 1646, 1646,
     1646, 1646,    0, 1646, 1646, 1646, 1646, 1646, 1646, 1646,
     1646, 1647, 1647, 1647, 1647,    0, 1647, 1647, 1647, 1647,
     1647, 1647, 1647, 1647, 1648, 1648, 1648, 1648,    0, 1648,

     1648, 1648, 1648, 1648, 1648, 1648, 1648, 1649, 1649, 1649,
     1649,    0, 1649, 1649, 1649, 1649, 1649, 1649, 1649, 1649,
     1650, 1650, 1650, 1650,    0, 1650, 1650, 1650, 1650, 1650,
     1650, 1650, 1650, 1651, 1651, 1651, 1651,    0, 1651, 1651,
     1651, 1651, 1651, 1651, 1651, 1651, 1652, 1652, 1652, 1652,
        0, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1653,
     1653, 1653, 1653,    0, 1653, 1653, 1653, 1653, 1653, 1653,
     1653, 1653, 1654, 1654, 1654, 1654,    0, 1654, 1654, 1654,
     1654, 1654, 1654, 1654, 1654, 1655, 1655, 1655, 1655,    0,
     1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1656, 1656,

     1656, 1656,    0, 1656, 1656, 1656, 1656, 1656, 1656, 1656,
     1656, 1657, 1657, 1657, 1657,    0, 1657, 1657, 1657, 1657,
     1657, 1657, 1657, 1657, 1658, 1658, 1658, 1658,    0, 1658,
     1658, 1658, 1658, 1658, 1658, 1658, 1658, 1659, 1659, 1659,
     1659,    0, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659,
     1660, 1660, 1660, 1660,    0, 1660, 1660, 1660, 1660, 1660,
     1660, 1660, 1660, 1661, 1661, 1661, 1661,    0, 1661, 1661,
     1661, 1661, 1661, 1661, 1661, 1661, 1662, 1662, 1662, 1662,
        0, 1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662, 1663,
     1663, 1663, 1663,    0, 1663, 1663, 1663, 1663, 1663, 1663,

     1663, 1663, 1664, 1664, 1664, 1664,    0, 1664, 1664, 1664,
     1664, 1664, 1664, 1664, 1664, 1665, 1665, 1665, 1665,    0,
     1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1666, 1666,
     1666, 1666,    0, 1666, 1666, 1666, 1666, 1666, 1666, 1666,
     1666, 1667, 1667, 1667, 1667,    0, 1667, 1667, 1667, 1667,
     1667, 1667, 1667, 1667, 1668, 1668, 1668, 1668,    0, 1668,
     1668, 1668, 1668, 1668, 1668, 1668, 1668, 1669, 1669, 1669,
     1669,    0, 1669, 1669, 1669, 1669, 1669, 1669, 1669, 1669,
     1670, 1670, 1670, 1670,    0, 1670, 1670, 1670, 1670, 1670,
     1670, 1670, 1670, 1671, 1671, 1671, 1671,    0, 1671, 1671,

     1671, 1671, 1671, 1671, 1671, 1671, 1672, 1672, 1672, 1672,
        0, 1672, 1672, 1672, 1672, 1672, 1672, 1672, 1672, 1673,
     1673, 1673, 1673,    0, 1673, 1673, 1673, 1673, 1673, 1673,
     1673, 1673, 1674, 1674, 1674, 1674,    0, 1674, 1674, 1674,
     1674, 1674, 1674, 1674, 1674, 1675, 1675, 1675, 1675,    0,
     1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1676, 1676,
     1676, 1676,    0, 1676, 1676, 1676, 1676, 1676, 1676, 1676,
     1676, 1677, 1677, 1677, 1677,    0, 1677, 1677, 1677, 1677,
     1677, 1677, 1677, 1677, 1678, 1678, 1678, 1678,    0, 1678,
     1678, 1678, 1678, 1678, 1678, 1678, 1678, 1679, 1679, 1679,

     1679,    0, 1679, 1679, 1679, 1679, 1679, 1679, 1679, 1679,
     1680, 1680, 1680, 1680,    0, 1680, 1680, 1680, 1680, 1680,
     1680, 1680, 1680, 1681, 1681, 1681, 1681,    0, 1681, 1681,
     1681, 1681, 1681, 1681, 1681, 1681, 1682, 1682, 1682, 1682,
        0, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 1683,
     1683, 1683, 1683,    0, 1683, 1683, 1683, 1683, 1683, 1683,
     1683, 1683, 1684, 1684, 1684, 1684,    0, 1684, 1684, 1684,
     1684, 1684, 1684, 1684, 1684, 1685, 1685, 1685, 1685,    0,
     1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1686, 1686,
     1686, 1686,    0, 1686, 1686, 1686, 1686, 1686, 1686, 1686,

     1686, 1687, 1687, 1687, 1687,    0, 1687, 1687, 1687, 1687,
     1687, 1687, 1687, 1687, 1688, 1688, 1688, 1688,    0, 1688,
     1688, 1688, 1688, 1688, 1688, 1688, 1688, 1689, 1689, 1689,
     1689,    0, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
     1690, 1690, 1690, 1690,    0, 1690, 1690, 1690, 1690, 1690,
     1690, 1690, 1690, 1691, 1691, 1691, 1691,    0, 1691, 1691,
     1691, 1691, 1691, 1691, 1691, 1691, 1692, 1692, 1692, 1692,
        0, 1692, 1692, 1692, 1692, 1692, 1692, 1692, 1692, 1693,
     1693, 1693, 1693,    0, 1693, 1693, 1693, 1693, 1693, 1693,
     1693, 1693, 1694, 1694, 1694, 1694,    0, 1694, 1694, 1694,

     1694, 1694, 1694, 1694, 1694, 1695, 1695, 1695, 1695,    0,
     1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 1696, 1696,
     1696, 1696,    0, 1696, 1696, 1696, 1696, 1696, 1696, 1696,
     1696, 1697, 1697, 1697, 1697,    0, 1697, 1697, 1697, 1697,
     1697, 1697, 1697, 1697, 1698, 1698, 1698, 1698,    0, 1698,
     1698, 1698, 1698, 1698, 1698, 1698, 1698, 1699, 1699, 1699,
     1699,    0, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699,
     1700, 1700, 1700, 1700,    0, 1700, 1700, 1700, 1700, 1700,
     1700, 1700, 1700, 1701, 1701, 1701, 1701,    0, 1701, 1701,
     1701, 1701, 1701, 1701, 1701, 1701, 1702, 1702, 1702, 1702,

        0, 1702, 1702, 1702, 1702, 1702, 1702, 1702, 1702, 1703,
     1703, 1703, 1703,    0, 1703, 1703, 1703, 1703, 1703, 1703,
     1703, 1703, 1704, 1704, 1704, 1704,    0, 1704, 1704, 1704,
     1704, 1704, 1704, 1704, 1704, 1705, 1705, 1705, 1705,    0,
     1705, 1705, 1705, 1705, 1705, 1705, 1705, 1705, 1706, 1706,
     1706, 1706,    0, 1706, 1706, 1706, 1706, 1706, 1706, 1706,
     1706, 1707, 1707, 1707, 1707,    0, 1707, 1707, 1707, 1707,
     1707, 1707, 1707, 1707, 1708, 1708, 1708, 1708,    0, 1708,
     1708, 1708, 1708, 1708, 1708, 1708, 1708, 1709, 1709, 1709,
     1709,    0, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,

     1710, 1710, 1710, 1710,    0, 1710, 1710, 1710, 1710, 1710,
     1710, 1710, 1710, 1711, 1711, 1711, 1711,    0, 1711, 1711,
     1711, 1711, 1711, 1711, 1711, 1711, 1712, 1712, 1712, 1712,
        0, 1712, 1712, 1712, 1712, 1712, 1712, 1712, 1712, 1713,
     1713, 1713, 1713,    0, 1713, 1713, 1713, 1713, 1713, 1713,
     1713, 1713, 1714, 1714, 1714, 1714,    0, 1714, 1714, 1714,
     1714, 1714, 1714, 1714, 1714, 1715, 1715, 1715, 1715,    0,
     1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715, 1716, 1716,
     1716, 1716,    0, 1716, 1716, 1716, 1716, 1716, 1716, 1716,
     1716, 1717, 1717, 1717, 1717,    0, 1717, 1717, 1717, 1717,

     1717, 1717, 1717, 1717, 1718, 1718, 1718, 1718,    0, 1718,
     1718, 1718, 1718, 1718, 1718, 1718, 1718, 1719, 1719, 1719,
     1719,    0, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719,
     1720, 1720, 1720, 1720,    0, 1720, 1720, 1720, 1720, 1720,
     1720, 1720, 1720, 1721, 1721, 1721, 1721,    0, 1721, 1721,
     1721, 1721, 1721, 1721, 1721, 1721, 1722, 1722, 1722, 1722,
        0, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1723,
     1723, 1723, 1723,    0, 1723, 1723, 1723, 1723, 1723, 1723,
     1723, 1723, 1724, 1724, 1724, 1724,    0, 1724, 1724, 1724,
     1724, 1724, 1724, 1724, 1724, 1725, 1725, 1725, 1725,    0,

     1725, 1725, 1725, 1725, 1725, 1725, 1725, 1725, 1726, 1726,
     1726, 1726,    0, 1726, 1726, 1726, 1726, 1726, 1726, 1726,
     1726, 1727, 1727, 1727, 1727,    0, 1727, 1727, 1727, 1727,
     1727, 1727, 1727, 1727, 1728, 1728, 1728, 1728,    0, 1728,
     1728, 1728, 1728, 1728, 1728, 1728, 1728, 1729, 1729, 1729,
     1729,    0, 1729, 1729, 1729, 1729, 1729, 1729, 1729, 1729,
     1730, 1730, 1730, 1730,    0, 1730, 1730, 1730, 1730, 1730,
     1730, 1730, 1730, 1731, 1731, 1731, 1731,    0, 1731, 1731,
     1731, 1731, 1731, 1731, 1731, 1731, 1732, 1732, 1732, 1732,
        0, 1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732, 1733,

     1733, 1733, 1733,    0, 1733, 1733, 1733, 1733, 1733, 1733,
     1733, 1733, 1734, 1734, 1734, 1734,    0, 1734, 1734, 1734,
     1734, 1734, 1734, 1734, 1734, 1735, 1735, 1735, 1735,    0,
     1735, 1735, 1735, 1735, 1735, 1735, 1735, 1735, 1736, 1736,
     1736, 1736,    0, 1736, 1736, 1736, 1736, 1736, 1736, 1736,
     1736, 1737, 1737, 1737, 1737,    0, 1737, 1737, 1737, 1737,
     1737, 1737, 1737, 1737, 1738, 1738, 1738, 1738,    0, 1738,
     1738, 1738, 1738, 1738, 1738, 1738, 1738, 1739, 1739, 1739,
     1739,    0, 1739, 1739, 1739, 1739, 1739, 1739, 1739, 1739,
     1740, 1740, 1740, 1740,    0, 1740, 1740, 1740, 1740, 1740,

     1740, 1740, 1740, 1741, 1741, 1741, 1741,    0, 1741, 1741,
     1741, 1741, 1741, 1741, 1741, 1741, 1742, 1742, 1742, 1742,
        0, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1743,
     1743, 1743, 1743,    0, 1743, 1743, 1743, 1743, 1743, 1743,
     1743, 1743, 1744, 1744, 1744, 1744,    0, 1744, 1744, 1744,
     1744, 1744, 1744, 1744, 1744, 1745, 1745, 1745, 1745,    0,
     1745, 1745, 1745, 1745, 1745, 1745, 1745, 1745, 1746, 1746,
     1746, 1746,    0, 1746, 1746, 1746, 1746, 1746, 1746, 1746,
     1746, 1747, 1747, 1747, 1747,    0, 1747, 1747, 1747, 1747,
     1747, 1747, 1747, 1747, 1748, 1748, 1748, 1748,    0, 1748,

     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1749, 1749, 1749,
     1749,    0, 1749, 1749, 1749, 1749, 1749, 1749, 1749, 1749,
     1750, 1750, 1750, 1750,    0, 1750, 1750, 1750, 1750, 1750,
     1750, 1750, 1750, 1751, 1751, 1751, 1751,    0, 1751, 1751,
     1751, 1751, 1751, 1751, 1751, 1751, 1752, 1752, 1752, 1752,
        0, 1752, 1752, 1752, 1752, 1752, 1752, 1752, 1752, 1753,
     1753, 1753, 1753,    0, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1754, 1754, 1754, 1754,    0, 1754, 1754, 1754,
     1754, 1754, 1754, 1754, 1754, 1755, 1755, 1755, 1755,    0,
     1755, 1755, 1755, 1755, 1755, 1755, 1755, 1755, 1756, 1756,

     1756, 1756,    0, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
     1756, 1757, 1757, 1757, 1757,    0, 1757, 1757, 1757, 1757,
     1757, 1757, 1757, 1757, 1758, 1758, 1758, 1758,    0, 1758,
     1758, 1758, 1758, 1758, 1758, 1758, 1758, 1759, 1759, 1759,
     1759,    0, 1759, 1759, 1759, 1759, 1759, 1759, 1759, 1759,
     1760, 1760, 1760, 1760,    0, 1760, 1760, 1760, 1760, 1760,
     1760, 1760, 1760, 1761, 1761, 1761, 1761,    0, 1761, 1761,
     1761, 1761, 1761, 1761, 1761, 1761, 1762, 1762, 1762, 1762,
        0, 1762, 1762, 1762, 1762, 1762, 1762, 1762, 1762, 1763,
     1763, 1763, 1763,    0, 1763, 1763, 1763, 1763, 1763, 1763,

     1763, 1763, 1764, 1764, 1764, 1764,    0, 1764, 1764, 1764,
     1764, 1764, 1764, 1764, 1764, 1765, 1765, 1765, 1765,    0,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1766, 1766,
     1766, 1766,    0, 1766, 1766, 1766, 1766, 1766, 1766, 1766,
     1766, 1767, 1767, 1767, 1767,    0, 1767, 1767, 1767, 1767,
     1767, 1767, 1767, 1767, 1768, 1768, 1768, 1768,    0, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1769, 1769, 1769,
     1769,    0, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
     1770, 1770, 1770, 1770,    0, 1770, 1770, 1770, 1770, 1770,
     1770, 1770, 1770, 1771, 1771, 1771, 1771,    0, 1771, 1771,

     1771, 1771, 1771, 1771, 1771, 1771, 1772, 1772, 1772, 1772,
        0, 1772, 1772, 1772, 1772, 1772, 1772, 1772, 1772, 1773,
     1773, 1773, 1773,    0, 1773, 1773, 1773, 1773, 1773, 1773,
     1773, 1773, 1774, 1774, 1774, 1774,    0, 1774, 1774, 1774,
     1774, 1774, 1774, 1774, 1774, 1775, 1775, 1775, 1775,    0,
     1775, 1775, 1775, 1775, 1775, 1775, 1775, 1775, 1776, 1776,
     1776, 1776,    0, 1776, 1776, 1776, 1776, 1776, 1776, 1776,
     1776, 1777, 1777, 1777, 1777,    0, 1777, 1777, 1777, 1777,
     1777, 1777, 1777, 1777, 1778, 1778, 1778, 1778,    0, 1778,
     1778, 1778, 1778, 1778, 1778, 1778, 1778, 1779, 1779, 1779,

     1779,    0, 1779, 1779, 1779, 1779, 1779, 1779, 1779, 1779,
     1780, 1780, 1780, 1780,    0, 1780, 1780, 1780, 1780, 1780,
     1780, 1780, 1780, 1781, 1781, 1781, 1781,    0, 1781, 1781,
     1781, 1781, 1781, 1781, 1781, 1781, 1782, 1782, 1782, 1782,
        0, 1782, 1782, 1782, 1782, 1782, 1782, 1782, 1782, 1783,
     1783, 1783, 1783,    0, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 1783, 1784, 1784, 1784, 1784,    0, 1784, 1784, 1784,
     1784, 1784, 1784, 1784, 1784, 1785, 1785, 1785, 1785,    0,
     1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1786, 1786,
     1786, 1786,    0, 1786, 1786, 1786, 1786, 1786, 1786, 1786,

     1786, 1787, 1787, 1787, 1787,    0, 1787, 1787, 1787, 1787,
     1787, 1787, 1787, 1787, 1788, 1788, 1788, 1788,    0, 1788,
     1788, 1788, 1788, 1788, 1788, 1788, 1788, 1789, 1789, 1789,
     1789,    0, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
     1790, 1790, 1790, 1790,    0, 1790, 1790, 1790, 1790, 1790,
     1790, 1790, 1790, 1791, 1791, 1791, 1791,    0, 1791, 1791,
     1791, 1791, 1791, 1791, 1791, 1791, 1792, 1792, 1792, 1792,
        0, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1793,
     1793, 1793, 1793,    0, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1794, 1794, 1794, 1794,    0, 1794, 1794, 1794,

     1794, 1794, 1794, 1794, 1794, 1795, 1795, 1795, 1795,    0,
     1795, 1795, 1795, 1795, 1795, 1795, 1795, 1795, 1796, 1796,
     1796, 1796,    0, 1796, 1796, 1796, 1796, 1796, 1796, 1796,
     1796, 1797, 1797, 1797, 1797,    0, 1797, 1797, 1797, 1797,
     1797, 1797, 1797, 1797, 1798, 1798, 1798, 1798,    0, 1798,
     1798, 1798, 1798, 1798, 1798, 1798, 1798, 1799, 1799, 1799,
     1799,    0, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799,
     1800, 1800, 1800, 1800,    0, 1800, 1800, 1800, 1800, 1800,
     1800, 1800, 1800, 1801, 1801, 1801, 1801,    0, 1801, 1801,
     1801, 1801, 1801, 1801, 1801, 1801, 1802, 1802, 1802, 1802,

        0, 1802, 1802, 1802, 1802, 1802, 1802, 1802, 1802, 1803,
     1803, 1803, 1803,    0, 1803, 1803, 1803, 1803, 1803, 1803,
     1803, 1803, 1804, 1804, 1804, 1804,    0, 1804, 1804, 1804,
     1804, 1804, 1804, 1804, 1804, 1805, 1805, 1805, 1805,    0,
     1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1806, 1806,
     1806, 1806,    0, 1806, 1806, 1806, 1806, 1806, 1806, 1806,
     1806, 1807, 1807, 1807, 1807,    0, 1807, 1807, 1807, 1807,
     1807, 1807, 1807, 1807, 1808, 1808, 1808, 1808,    0, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1809, 1809, 1809,
     1809,    0, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809,

     1810, 1810, 1810, 1810,    0, 1810, 1810, 1810, 1810, 1810,
     1810, 1810, 1810, 1811, 1811, 1811, 1811,    0, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1812, 1812, 1812, 1812,
        0, 1812, 1812, 1812, 1812, 1812, 1812, 1812, 1812, 1813,
     1813, 1813, 1813,    0, 1813, 1813, 1813, 1813, 1813, 1813,
     1813, 1813, 1814, 1814, 1814, 1814,    0, 1814, 1814, 1814,
     1814, 1814, 1814, 1814, 1814, 1815, 1815, 1815, 1815,    0,
     1815, 1815, 1815, 1815, 1815, 1815, 1815, 1815, 1816, 1816,
     1816, 1816,    0, 1816, 1816, 1816, 1816, 1816, 1816, 1816,
     1816, 1817, 1817, 1817, 1817,    0, 1817, 1817, 1817, 1817,

     1817, 1817, 1817, 1817, 1818, 1818, 1818, 1818,    0, 1818,
     1818, 1818, 1818, 1818, 1818, 1818, 1818, 1819, 1819, 1819,
     1819,    0, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819,
     1820, 1820, 1820, 1820,    0, 1820, 1820, 1820, 1820, 1820,
     1820, 1820, 1820, 1821, 1821, 1821, 1821,    0, 1821, 1821,
     1821, 1821, 1821, 1821, 1821, 1821, 1822, 1822, 1822, 1822,
        0, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1823,
     1823, 1823, 1823,    0, 1823, 1823, 1823, 1823, 1823, 1823,
     1823, 1823, 1824, 1824, 1824, 1824,    0, 1824, 1824, 1824,
     1824, 1824, 1824, 1824, 1824, 1825, 1825, 1825, 1825,    0,

     1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825, 1826, 1826,
     1826, 1826,    0, 1826, 1826, 1826, 1826, 1826, 1826, 1826,
     1826, 1827, 1827, 1827, 1827,    0, 1827, 1827, 1827, 1827,
     1827, 1827, 1827, 1827, 1828, 1828, 1828, 1828,    0, 1828,
     1828, 1828, 1828, 1828, 1828, 1828, 1828, 1829, 1829, 1829,
     1829,    0, 1829, 1829, 1829, 1829, 1829, 1829, 1829, 1829,
     1830, 1830, 1830, 1830,    0, 1830, 1830, 1830, 1830, 1830,
     1830, 1830, 1830, 1831, 1831, 1831, 1831,    0, 1831, 1831,
     1831, 1831, 1831, 1831, 1831, 1831, 1832, 1832, 1832, 1832,
        0, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1833,

     1833, 1833, 1833,    0, 1833, 1833, 1833, 1833, 1833, 1833,
     1833, 1833, 1834, 1834, 1834, 1834,    0, 1834, 1834, 1834,
     1834, 1834, 1834, 1834, 1834, 1835, 1835, 1835, 1835,    0,
     1835, 1835, 1835, 1835, 1835, 1835, 1835, 1835, 1836, 1836,
     1836, 1836,    0, 1836, 1836, 1836, 1836, 1836, 1836, 1836,
     1836, 1837, 1837, 1837, 1837,    0, 1837, 1837, 1837, 1837,
     1837, 1837, 1837, 1837, 1838, 1838, 1838, 1838,    0, 1838,
     1838, 1838, 1838, 1838, 1838, 1838, 1838, 1839, 1839, 1839,
     1839,    0, 1839, 1839, 1839, 1839, 1839, 1839, 1839, 1839,
     1840, 1840, 1840, 1840,    0, 1840, 1840, 1840, 1840, 1840,

     1840, 1840, 1840, 1841, 1841, 1841, 1841,    0, 1841, 1841,
     1841, 1841, 1841, 1841, 1841, 1841, 1842, 1842, 1842, 1842,
        0, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1843,
     1843, 1843, 1843,    0, 1843, 1843, 1843, 1843, 1843, 1843,
     1843, 1843, 1844, 1844, 1844, 1844,    0, 1844, 1844, 1844,
     1844, 1844, 1844, 1844, 1844, 1845, 1845, 1845, 1845,    0,
     1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845, 1846, 1846,
     1846, 1846,    0, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
     1846, 1847, 1847, 1847, 1847,    0, 1847, 1847, 1847, 1847,
     1847, 1847, 1847, 1847, 1848, 1848, 1848, 1848,    0, 1848,

     1848, 1848, 1848, 1848, 1848, 1848, 1848, 1849, 1849, 1849,
     1849,    0, 1849, 1849, 1849, 1849, 1849, 1849, 1849, 1849,
     1850, 1850, 1850, 1850,    0, 1850, 1850, 1850, 1850, 1850,
     1850, 1850, 1850, 1851, 1851, 1851, 1851,    0, 1851, 1851,
     1851, 1851, 1851, 1851, 1851, 1851, 1852, 1852, 1852, 1852,
        0, 1852, 1852, 1852, 1852, 1852, 1852, 1852, 1852, 1853,
     1853, 1853, 1853,    0, 1853, 1853, 1853, 1853, 1853, 1853,
     1853, 1853, 1854, 1854, 1854, 1854,    0, 1854, 1854, 1854,
     1854, 1854, 1854, 1854, 1854, 1855, 1855, 1855, 1855,    0,
     1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1856, 1856,

     1856, 1856,    0, 1856, 1856, 1856, 1856, 1856, 1856, 1856,
     1856, 1857, 1857, 1857, 1857,    0, 1857, 1857, 1857, 1857,
     1857, 1857, 1857, 1857, 1858, 1858, 1858, 1858,    0, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1859, 1859, 1859,
     1859,    0, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
     1860, 1860, 1860, 1860,    0, 1860, 1860, 1860, 1860, 1860,
     1860, 1860, 1860, 1861, 1861, 1861, 1861,    0, 1861, 1861,
     1861, 1861, 1861, 1861, 1861, 1861, 1862, 1862, 1862, 1862,
        0, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1863,
     1863, 1863, 1863,    0, 1863, 1863, 1863, 1863, 1863, 1863,

     1863, 1863, 1864, 1864, 1864, 1864,    0, 1864, 1864, 1864,
     1864, 1864, 1864, 1864, 1864, 1865, 1865, 1865, 1865,    0,
     1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1866, 1866,
     1866, 1866,    0, 1866, 1866, 1866, 1866, 1866, 1866, 1866,
     1866, 1867, 1867, 1867, 1867,    0, 1867, 1867, 1867, 1867,
     1867, 1867, 1867, 1867, 1868, 1868, 1868, 1868,    0, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1869, 1869, 1869,
     1869,    0, 1869, 1869, 1869, 1869, 1869, 1869, 1869, 1869,
     1870, 1870, 1870, 1870,    0, 1870, 1870, 1870, 1870, 1870,
     1870, 1870, 1870, 1871, 1871, 1871, 1871,    0, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1872, 1872, 1872, 1872,
        0, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1873,
     1873, 1873, 1873,    0, 1873, 1873, 1873, 1873, 1873, 1873,
     1873, 1873, 1874, 1874, 1874, 1874,    0, 1874, 1874, 1874,
     1874, 1874, 1874, 1874, 1874, 1875, 1875, 1875, 1875,    0,
     1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1876, 1876,
     1876, 1876,    0, 1876, 1876, 1876, 1876, 1876, 1876, 1876,
     1876, 1877, 1877, 1877, 1877,    0, 1877, 1877, 1877, 1877,
     1877, 1877, 1877, 1877, 1878, 1878, 1878, 1878,    0, 1878,
     1878, 1878, 1878, 1878, 1878, 1878, 1878, 1879, 1879, 1879,

     1879,    0, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879,
     1880, 1880, 1880, 1880,    0, 1880, 1880, 1880, 1880, 1880,
     1880, 1880, 1880, 1881, 1881, 1881, 1881,    0, 1881, 1881,
     1881, 1881, 1881, 1881, 1881, 1881, 1882, 1882, 1882, 1882,
        0, 1882, 1882, 1882, 1882, 1882, 1882, 1882, 1882, 1883,
     1883, 1883, 1883,    0, 1883, 1883, 1883, 1883, 1883, 1883,
     1883, 1883, 1884, 1884, 1884, 1884,    0, 1884, 1884, 1884,
     1884, 1884, 1884, 1884, 1884, 1885, 1885, 1885, 1885,    0,
     1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885, 1886, 1886,
     1886, 1886,    0, 1886, 1886, 1886, 1886, 1886, 1886, 1886,

     1886, 1887, 1887, 1887, 1887,    0, 1887, 1887, 1887, 1887,
     1887, 1887, 1887, 1887, 1888, 1888, 1888, 1888,    0, 1888,
     1888, 1888, 1888, 1888, 1888, 1888, 1888, 1889, 1889, 1889,
     1889,    0, 1889, 1889, 1889, 1889, 1889, 1889, 1889, 1889,
     1890, 1890, 1890, 1890,    0, 1890, 1890, 1890, 1890, 1890,
     1890, 1890, 1890, 1891, 1891, 1891, 1891,    0, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1892, 1892, 1892, 1892,
        0, 1892, 1892, 1892, 1892, 1892, 1892, 1892, 1892, 1893,
     1893, 1893, 1893,    0, 1893, 1893, 1893, 1893, 1893, 1893,
     1893, 1893, 1894, 1894, 1894, 1894,    0, 1894, 1894, 1894,

     1894, 1894, 1894, 1894, 1894, 1895, 1895, 1895, 1895,    0,
     1895, 1895, 1895, 1895, 1895, 1895, 1895, 1895, 1896, 1896,
     1896, 1896,    0, 1896, 1896, 1896, 1896, 1896, 1896, 1896,
     1896, 1897, 1897, 1897, 1897,    0, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1898, 1898, 1898, 1898,    0, 1898,
     1898, 1898, 1898, 1898, 1898, 1898, 1898, 1899, 1899, 1899,
     1899,    0, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1900, 1900, 1900, 1900,    0, 1900, 1900, 1900, 1900, 1900,
     1900, 1900, 1900, 1901, 1901, 1901, 1901,    0, 1901, 1901,
     1901, 1901, 1901, 1901, 1901, 1901, 1902, 1902, 1902, 1902,

        0, 1902, 1902, 1902, 1902, 1902, 1902, 1902, 1902, 1903,
     1903, 1903, 1903,    0, 1903, 1903, 1903, 1903, 1903, 1903,
     1903, 1903, 1904, 1904, 1904, 1904,    0, 1904, 1904, 1904,
     1904, 1904, 1904, 1904, 1904, 1905, 1905, 1905, 1905,    0,
     1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1906, 1906,
     1906, 1906,    0, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1907, 1907, 1907, 1907,    0, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1908, 1908, 1908, 1908,    0, 1908,
     1908, 1908, 1908, 1908, 1908, 1908, 1908, 1909, 1909, 1909,
     1909,    0, 1909, 1909, 1909, 1909, 1909, 1909, 1909, 1909,

     1910, 1910, 1910, 1910,    0, 1910, 1910, 1910, 1910, 1910,
     1910, 1910, 1910, 1911, 1911, 1911, 1911,    0, 1911, 1911,
     1911, 1911, 1911, 1911, 1911, 1911, 1912, 1912, 1912, 1912,
        0, 1912, 1912, 1912, 1912, 1912, 1912, 1912, 1912, 1913,
     1913, 1913, 1913,    0, 1913, 1913, 1913, 1913, 1913, 1913,
     1913, 1913, 1914, 1914, 1914, 1914,    0, 1914, 1914, 1914,
     1914, 1914, 1914, 1914, 1914, 1915, 1915, 1915, 1915,    0,
     1915, 1915, 1915, 1915, 1915, 1915, 1915, 1915, 1916, 1916,
     1916, 1916,    0, 1916, 1916, 1916, 1916, 1916, 1916, 1916,
     1916, 1917, 1917, 1917, 1917,    0, 1917, 1917, 1917, 1917,

     1917, 1917, 1917, 1917, 1918, 1918, 1918, 1918,    0, 1918,
     1918, 1918, 1918, 1918, 1918, 1918, 1918, 1919, 1919, 1919,
     1919,    0, 1919, 1919, 1919, 1919, 1919, 1919, 1919, 1919,
     1920, 1920, 1920, 1920,    0, 1920, 1920, 1920, 1920, 1920,
     1920, 1920, 1920, 1921, 1921, 1921, 1921,    0, 1921, 1921,
     1921, 1921, 1921, 1921, 1921, 1921, 1922, 1922, 1922, 1922,
        0, 1922, 1922, 1922, 1922, 1922, 1922, 1922, 1922, 1923,
     1923, 1923, 1923,    0, 1923, 1923, 1923, 1923, 1923, 1923,
     1923, 1923, 1924, 1924, 1924, 1924,    0, 1924, 1924, 1924,
     1924, 1924, 1924, 1924, 1924, 1925, 1925, 1925, 1925,    0,

     1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1926, 1926,
     1926, 1926,    0, 1926, 1926, 1926, 1926, 1926, 1926, 1926,
     1926, 1927, 1927, 1927, 1927,    0, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1928, 1928, 1928, 1928,    0, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1929, 1929, 1929,
     1929,    0, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1930, 1930, 1930, 1930,    0, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1931, 1931, 1931, 1931,    0, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1932, 1932, 1932, 1932,
        0, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1933,

     1933, 1933, 1933,    0, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1934, 1934, 1934, 1934,    0, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1935, 1935, 1935, 1935,    0,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1936, 1936,
     1936, 1936,    0, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1937, 1937, 1937, 1937,    0, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1938, 1938, 1938, 1938,    0, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1939, 1939, 1939,
     1939,    0, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1940, 1940, 1940, 1940,    0, 1940, 1940, 1940, 1940, 1940,

     1940, 1940, 1940, 1941, 1941, 1941, 1941,    0, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
     1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
static int yy_more_flag = 0;
static int yy_more_len = 0;
#define yymore() (yy_more_flag = 1)
#define YY_MORE_ADJ yy_more_len
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "hphp.x"
#define INITIAL 0
#line 2 "hphp.x"
#include <runtime/eval/parser/hphp.tab.hpp>
#include <runtime/eval/parser/scanner.h>
#define YLMM_SCANNER_CLASS HPHP::Eval::Scanner
#include <util/ylmm/lexmm.hh>
#include <errno.h>
#define SETTOKEN _scanner->setToken(yytext, yyleng, yytext, yyleng)
// STEPPOS is for tokens that we don't need the string of.
#define STEPPOS _scanner->setToken(yytext, yyleng, yytext, yyleng, false)
#define ST_IN_HTML 1

#define ST_IN_SCRIPTING 2

#define ST_DOUBLE_QUOTES 3

#define ST_BACKQUOTE 4

#define ST_HEREDOC 5

#define ST_START_HEREDOC 6

#define ST_END_HEREDOC 7

#define ST_LOOKING_FOR_PROPERTY 8

#define ST_LOOKING_FOR_VARNAME 9

#define ST_VAR_OFFSET 10

#define ST_COMMENT 11

#define ST_DOC_COMMENT 12

#define ST_ONE_LINE_COMMENT 13

#define YY_STACK_USED 1
/*
 * LITERAL_DOLLAR matches unescaped $ that aren't followed by a label character
 * or a { and therefore will be taken literally. The case of literal $ before
 * a variable or "${" is handled in a rule for each string type
 */
/*
 * Usually, HEREDOC_NEWLINE will just function like a simple NEWLINE, but some
 * special cases need to be handled. HEREDOC_CHARS doesn't allow a line to
 * match when { or $, and/or \ is at the end. (("{"*|"$"*)"\\"?) handles that,
 * along with cases where { or $, and/or \ is the ONLY thing on a line
 *
 * The other case is when a line contains a label, followed by ONLY
 * { or $, and/or \  Handled by ({LABEL}";"?((("{"+|"$"+)"\\"?)|"\\"))
 */
/*
 * This pattern is just used in the next 2 for matching { or literal $, and/or
 * \ escape sequence immediately at the beginning of a line or after a label
 */
/*
 * These 2 label-related patterns allow HEREDOC_CHARS to continue "regular"
 * matching after a newline that starts with either a non-label character or a
 * label that isn't followed by a newline. Like HEREDOC_CHARS, they won't match
 * a variable or "{$"  Matching a newline, and possibly label, up TO a variable
 * or "{$", is handled in the heredoc rules
 *
 * The HEREDOC_LABEL_NO_NEWLINE pattern (";"[^$\n\r\\{]) handles cases where ;
 * follows a label. [^a-zA-Z0-9_\x7f-\xff;$\n\r\\{] is needed to prevent a label
 * character or ; from matching on a possible (real) ending label
 */
/*
 * CHARS matches everything up to a variable or "{$"
 * {'s are matched as long as they aren't followed by a $
 * The case of { before "{$" is handled in a rule for each string type
 *
 * For heredocs, matching continues across/after newlines if/when it's known
 * that the next line doesn't contain a possible ending label
 */
#line 3279 "lex.eval_.cpp"

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap YY_PROTO(( void ));
#else
extern int yywrap YY_PROTO(( void ));
#endif
#endif

#ifndef YY_NO_UNPUT
static void yyunput YY_PROTO(( int c, char *buf_ptr ));
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen YY_PROTO(( yyconst char * ));
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif
#endif

#if YY_STACK_USED
static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
#ifndef YY_NO_PUSH_STATE
static void yy_push_state YY_PROTO(( int new_state ));
#endif
#ifndef YY_NO_POP_STATE
static void yy_pop_state YY_PROTO(( void ));
#endif
#ifndef YY_NO_TOP_STATE
static int yy_top_state YY_PROTO(( void ));
#endif

#else
#define YY_NO_PUSH_STATE 1
#define YY_NO_POP_STATE 1
#define YY_NO_TOP_STATE 1
#endif

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = '*', n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	if ( yyleng > 0 ) \
		yy_current_buffer->yy_at_bol = \
				(yytext[yyleng - 1] == '\n'); \
	YY_USER_ACTION

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp = NULL, *yy_bp = NULL;
	register int yy_act;

#line 88 "hphp.x"


#line 3436 "lex.eval_.cpp"

	if ( yy_init )
		{
		yy_init = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! yy_current_buffer )
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_more_len = 0;
		if ( yy_more_flag )
			{
			yy_more_len = yy_c_buf_p - yytext_ptr;
			yy_more_flag = 0;
			}
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
		yy_current_state += YY_AT_BOL();
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1512 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 10017 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 90 "hphp.x"
{STEPPOS; return T_EXIT;}
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 91 "hphp.x"
{STEPPOS; return T_EXIT;}
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 92 "hphp.x"
{STEPPOS; return T_FUNCTION;}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 93 "hphp.x"
{STEPPOS; return T_CONST;}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 94 "hphp.x"
{STEPPOS; return T_RETURN;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 95 "hphp.x"
{STEPPOS; return T_TRY;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 96 "hphp.x"
{STEPPOS; return T_CATCH;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 97 "hphp.x"
{STEPPOS; return T_THROW;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 98 "hphp.x"
{STEPPOS; return T_IF;}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 99 "hphp.x"
{STEPPOS; return T_ELSEIF;}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 100 "hphp.x"
{STEPPOS; return T_ENDIF;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 101 "hphp.x"
{STEPPOS; return T_ELSE;}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 102 "hphp.x"
{STEPPOS; return T_WHILE;}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 103 "hphp.x"
{STEPPOS; return T_ENDWHILE;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 104 "hphp.x"
{STEPPOS; return T_DO;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 105 "hphp.x"
{STEPPOS; return T_FOR;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 106 "hphp.x"
{STEPPOS; return T_ENDFOR;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 107 "hphp.x"
{STEPPOS; return T_FOREACH;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 108 "hphp.x"
{STEPPOS; return T_ENDFOREACH;}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 109 "hphp.x"
{STEPPOS; return T_DECLARE;}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 110 "hphp.x"
{STEPPOS; return T_ENDDECLARE;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 111 "hphp.x"
{STEPPOS; return T_INSTANCEOF;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 112 "hphp.x"
{STEPPOS; return T_AS;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 113 "hphp.x"
{STEPPOS; return T_SWITCH;}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 114 "hphp.x"
{STEPPOS; return T_ENDSWITCH;}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 115 "hphp.x"
{STEPPOS; return T_CASE;}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 116 "hphp.x"
{STEPPOS; return T_DEFAULT;}
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 117 "hphp.x"
{STEPPOS; return T_BREAK;}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 118 "hphp.x"
{STEPPOS; return T_CONTINUE;}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 119 "hphp.x"
{STEPPOS; return T_ECHO;}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 120 "hphp.x"
{STEPPOS; return T_PRINT;}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 121 "hphp.x"
{STEPPOS; return T_CLASS;}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 122 "hphp.x"
{STEPPOS; return T_INTERFACE;}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 123 "hphp.x"
{STEPPOS; return T_EXTENDS;}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 124 "hphp.x"
{STEPPOS; return T_IMPLEMENTS;}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 126 "hphp.x"
{STEPPOS; return T_HPHP_DECLARE;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 128 "hphp.x"
{
        STEPPOS;
        yy_push_state(ST_LOOKING_FOR_PROPERTY);
        return T_OBJECT_OPERATOR;
}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 134 "hphp.x"
{
        STEPPOS;
        return T_OBJECT_OPERATOR;
}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 139 "hphp.x"
{
        SETTOKEN;
        yy_pop_state();
        return T_STRING;
}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 145 "hphp.x"
{
        yyless(0);
        yy_pop_state();
}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 150 "hphp.x"
{STEPPOS;return T_PAAMAYIM_NEKUDOTAYIM;}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 151 "hphp.x"
{STEPPOS;return T_NEW;}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 152 "hphp.x"
{STEPPOS;return T_CLONE;}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 153 "hphp.x"
{STEPPOS;return T_VAR;}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 155 "hphp.x"
{
        STEPPOS;
        return T_INT_CAST;
}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 160 "hphp.x"
{
        STEPPOS;
        return T_DOUBLE_CAST;
}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 165 "hphp.x"
{
        STEPPOS;
        return T_STRING_CAST;
}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 170 "hphp.x"
{
        STEPPOS;
        return T_STRING_CAST;
}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 175 "hphp.x"
{
        STEPPOS;
        return T_ARRAY_CAST;
}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 180 "hphp.x"
{
        STEPPOS;
        return T_OBJECT_CAST;
}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 185 "hphp.x"
{
        STEPPOS;
        return T_BOOL_CAST;
}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 190 "hphp.x"
{
        STEPPOS;
        return T_UNSET_CAST;
}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 195 "hphp.x"
{STEPPOS; return T_EVAL;}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 196 "hphp.x"
{STEPPOS; return T_INCLUDE;}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 197 "hphp.x"
{STEPPOS; return T_INCLUDE_ONCE;}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 198 "hphp.x"
{STEPPOS; return T_REQUIRE;}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 199 "hphp.x"
{STEPPOS; return T_REQUIRE_ONCE;}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 200 "hphp.x"
{STEPPOS; return T_USE;}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 201 "hphp.x"
{STEPPOS; return T_GLOBAL;}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 202 "hphp.x"
{STEPPOS; return T_ISSET;}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 203 "hphp.x"
{STEPPOS; return T_EMPTY;}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 204 "hphp.x"
{STEPPOS; return T_HALT_COMPILER;}
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 205 "hphp.x"
{STEPPOS; return T_STATIC;}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 206 "hphp.x"
{STEPPOS; return T_ABSTRACT;}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 207 "hphp.x"
{STEPPOS; return T_FINAL;}
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 208 "hphp.x"
{STEPPOS; return T_PRIVATE;}
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 209 "hphp.x"
{STEPPOS; return T_PROTECTED;}
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 210 "hphp.x"
{STEPPOS; return T_PUBLIC;}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 211 "hphp.x"
{STEPPOS; return T_UNSET;}
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 212 "hphp.x"
{STEPPOS; return T_DOUBLE_ARROW;}
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 213 "hphp.x"
{STEPPOS; return T_LIST;}
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 214 "hphp.x"
{STEPPOS; return T_ARRAY;}
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 215 "hphp.x"
{STEPPOS; return T_INC;}
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 216 "hphp.x"
{STEPPOS; return T_DEC;}
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 217 "hphp.x"
{STEPPOS; return T_IS_IDENTICAL;}
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 218 "hphp.x"
{STEPPOS; return T_IS_NOT_IDENTICAL;}
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 219 "hphp.x"
{STEPPOS; return T_IS_EQUAL;}
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 220 "hphp.x"
{STEPPOS; return T_IS_NOT_EQUAL;}
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 221 "hphp.x"
{STEPPOS; return T_IS_SMALLER_OR_EQUAL;}
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 222 "hphp.x"
{STEPPOS; return T_IS_GREATER_OR_EQUAL;}
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 223 "hphp.x"
{STEPPOS; return T_PLUS_EQUAL;}
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 224 "hphp.x"
{STEPPOS; return T_MINUS_EQUAL;}
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 225 "hphp.x"
{STEPPOS; return T_MUL_EQUAL;}
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 226 "hphp.x"
{STEPPOS; return T_DIV_EQUAL;}
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 227 "hphp.x"
{STEPPOS; return T_CONCAT_EQUAL;}
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 228 "hphp.x"
{STEPPOS; return T_MOD_EQUAL;}
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 229 "hphp.x"
{STEPPOS; return T_SL_EQUAL;}
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 230 "hphp.x"
{STEPPOS; return T_SR_EQUAL;}
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 231 "hphp.x"
{STEPPOS; return T_AND_EQUAL;}
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 232 "hphp.x"
{STEPPOS; return T_OR_EQUAL;}
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 233 "hphp.x"
{STEPPOS; return T_XOR_EQUAL;}
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 234 "hphp.x"
{STEPPOS; return T_BOOLEAN_OR;}
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 235 "hphp.x"
{STEPPOS; return T_BOOLEAN_AND;}
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 236 "hphp.x"
{STEPPOS; return T_LOGICAL_OR;}
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 237 "hphp.x"
{STEPPOS; return T_LOGICAL_AND;}
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 238 "hphp.x"
{STEPPOS; return T_LOGICAL_XOR;}
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 239 "hphp.x"
{STEPPOS; return T_SL;}
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 240 "hphp.x"
{STEPPOS; return T_SR;}
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 241 "hphp.x"
{STEPPOS; return yytext[0];}
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 243 "hphp.x"
{
        STEPPOS;
        yy_push_state(ST_IN_SCRIPTING);
        return '{';
}
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 249 "hphp.x"
{
        STEPPOS;
        yy_push_state(ST_LOOKING_FOR_VARNAME);
        return T_DOLLAR_OPEN_CURLY_BRACES;
}
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 255 "hphp.x"
{
        STEPPOS;
        if (yy_start_stack_ptr) yy_pop_state();
        return '}';
}
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 261 "hphp.x"
{
        SETTOKEN;
        yy_pop_state();
        yy_push_state(ST_IN_SCRIPTING);
        return T_STRING_VARNAME;
}
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 268 "hphp.x"
{
        yyless(0);
        yy_pop_state();
        yy_push_state(ST_IN_SCRIPTING);
}
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 274 "hphp.x"
{
        SETTOKEN;
        errno = 0;
        long ret = strtoll(yytext, NULL, 0);
	if (errno == ERANGE) {
                _scanner->error("Dec number is too big: %s", yytext);
                return T_LNUMBER;
        }
        return ret < 0 ? T_DNUMBER : T_LNUMBER;
}
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 285 "hphp.x"
{
        SETTOKEN;
	errno = 0;
        long ret = strtoull(yytext, NULL, 16);
	if (errno == ERANGE) {
                _scanner->error("Hex number is too big: %s", yytext);
                return T_LNUMBER;
        }
        return ret < 0 ? T_DNUMBER : T_LNUMBER;
}
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 296 "hphp.x"
{ /* Offset could be treated as a long */
        SETTOKEN;
        errno = 0;
        long ret = strtoll(yytext, NULL, 0);
        if (ret == LLONG_MAX && errno == ERANGE) {
                _scanner->error("Offset number is too big: %s", yytext);
        }
        return T_NUM_STRING;
}
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 306 "hphp.x"
{ /* Offset must be treated as a string */
        SETTOKEN;
        return T_NUM_STRING;
}
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 311 "hphp.x"
{
        SETTOKEN;
        return T_DNUMBER;
}
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 316 "hphp.x"
{ STEPPOS; return T_CLASS_C; }
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 317 "hphp.x"
{ STEPPOS; return T_FUNC_C;  }
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 318 "hphp.x"
{ STEPPOS; return T_METHOD_C;}
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 319 "hphp.x"
{ STEPPOS; return T_LINE;    }
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 320 "hphp.x"
{ STEPPOS; return T_FILE;    }
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 322 "hphp.x"
{
        STEPPOS;
        return T_INLINE_HTML;
}
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 327 "hphp.x"
{
        SETTOKEN;
        return T_INLINE_HTML;
}
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 332 "hphp.x"
{
        SETTOKEN;
        if (_scanner->shortTags() || yyleng > 2) {
                BEGIN(ST_IN_SCRIPTING);
                return T_OPEN_TAG;
        } else {
                return T_INLINE_HTML;
        }
}
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 342 "hphp.x"
{
        SETTOKEN;
        if ((yytext[1]=='%' && _scanner->aspTags()) ||
            (yytext[1]=='?' && _scanner->shortTags())) {
                BEGIN(ST_IN_SCRIPTING);
                return T_ECHO; //return T_OPEN_TAG_WITH_ECHO;
        } else {
                return T_INLINE_HTML;
        }
}
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 353 "hphp.x"
{
        SETTOKEN;
        if (_scanner->aspTags()) {
                BEGIN(ST_IN_SCRIPTING);
                return T_OPEN_TAG;
        } else {
                return T_INLINE_HTML;
        }
}
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 363 "hphp.x"
{
        STEPPOS;
        BEGIN(ST_IN_SCRIPTING);
        return T_OPEN_TAG;
}
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 369 "hphp.x"
{
        _scanner->setToken(yytext, yyleng, yytext+1, yyleng-1);
        return T_VARIABLE;
}
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 374 "hphp.x"
{
        yyless(yyleng - 3);
        yy_push_state(ST_LOOKING_FOR_PROPERTY);
        _scanner->setToken(yytext, yyleng, yytext+1, yyleng-1);
        return T_VARIABLE;
}
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 381 "hphp.x"
{
        yyless(yyleng - 1);
        yy_push_state(ST_VAR_OFFSET);
        _scanner->setToken(yytext, yyleng, yytext+1, yyleng-1);
        return T_VARIABLE;
}
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 388 "hphp.x"
{
        yy_pop_state();
        return ']';
}
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 393 "hphp.x"
{
        /* Only '[' can be valid, but returning other tokens will allow
           a more explicit parse error */
        return yytext[0];
}
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 399 "hphp.x"
{
        /* Invalid rule to return a more explicit parse error with proper
           line number */
        yyless(0);
        yy_pop_state();
        return T_ENCAPSED_AND_WHITESPACE;
}
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 407 "hphp.x"
{
        SETTOKEN;
        return T_STRING;
}
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 412 "hphp.x"
{
        STEPPOS;
        return T_WHITESPACE;
}
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 417 "hphp.x"
{
        BEGIN(ST_ONE_LINE_COMMENT);
        yymore();
}
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 422 "hphp.x"
{
        yymore();
}
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 426 "hphp.x"
{
        switch (yytext[yyleng-1]) {
        case '?':
        case '%':
        case '>':
                yyless(yyleng-1);
                yymore();
                break;
        default:
                STEPPOS;
                BEGIN(ST_IN_SCRIPTING);
                return T_COMMENT;
        }
}
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 441 "hphp.x"
{
        STEPPOS;
        BEGIN(ST_IN_SCRIPTING);
        return T_COMMENT;
}
	YY_BREAK
case 133:
YY_RULE_SETUP
#line 447 "hphp.x"
{
        if (_scanner->aspTags() || yytext[yyleng-2] != '%') {
                _scanner->setToken(yytext, yyleng-2, yytext, yyleng-2);
                yyless(yyleng-2);
                BEGIN(ST_IN_SCRIPTING);
                return T_COMMENT;
        } else {
                yymore();
        }
}
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 458 "hphp.x"
{
        BEGIN(ST_DOC_COMMENT);
        yymore();
}
	YY_BREAK
case 135:
YY_RULE_SETUP
#line 463 "hphp.x"
{
        BEGIN(ST_COMMENT);
        yymore();
}
	YY_BREAK
case 136:
YY_RULE_SETUP
#line 468 "hphp.x"
{
        yymore();
}
	YY_BREAK
case 137:
YY_RULE_SETUP
#line 472 "hphp.x"
{
        STEPPOS;
        _scanner->setDocComment(yytext, yyleng);
        BEGIN(ST_IN_SCRIPTING);
        return T_DOC_COMMENT;
}
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 479 "hphp.x"
{
        STEPPOS;
        BEGIN(ST_IN_SCRIPTING);
#ifdef HPHP_NOTE
        if (yyleng > 6 && yytext[2] == '|' && yytext[yyleng-3] == '|') {
                _scanner->setToken(yytext, yyleng, yytext+3, yyleng-6);
                return T_HPHP_NOTE;
        }
#endif
        return T_COMMENT;
}
	YY_BREAK
case 139:
YY_RULE_SETUP
#line 491 "hphp.x"
{
        yymore();
}
	YY_BREAK
case 140:
YY_RULE_SETUP
#line 495 "hphp.x"
{
        STEPPOS;
        BEGIN(ST_IN_HTML);
        return ';'; //return T_CLOSE_TAG;
}
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 501 "hphp.x"
{
        if (_scanner->aspTags()) {
                STEPPOS;
                BEGIN(ST_IN_HTML);
                return ';'; //return T_CLOSE_TAG;
        } else {
                yyless(1);
                _scanner->setToken(yytext, 1, yytext, 1);
                return yytext[0];
        }
}
	YY_BREAK
case 142:
YY_RULE_SETUP
#line 513 "hphp.x"
{
        int bprefix = (yytext[0] != '"') ? 1 : 0;
        std::string strval =
          _scanner->scanEscapeString(yytext + bprefix + 1,
                                     yyleng - bprefix - 2, '"');
        _scanner->setToken(yytext, yyleng, strval.c_str(), strval.length());
        return T_CONSTANT_ENCAPSED_STRING;
}
	YY_BREAK
case 143:
YY_RULE_SETUP
#line 522 "hphp.x"
{
        int bprefix = (yytext[0] != '\'') ? 1 : 0;
        std::string strval =
          _scanner->scanEscapeString(yytext + bprefix + 1,
                                     yyleng - bprefix - 2, '\'');
        _scanner->setToken(yytext, yyleng, strval.c_str(), strval.length());
        return T_CONSTANT_ENCAPSED_STRING;
}
	YY_BREAK
case 144:
YY_RULE_SETUP
#line 531 "hphp.x"
{
        int bprefix = (yytext[0] != '"') ? 1 : 0;
        _scanner->setToken(yytext, yyleng, yytext + bprefix, yyleng - bprefix);
        BEGIN(ST_DOUBLE_QUOTES);
        return '\"';
}
	YY_BREAK
case 145:
YY_RULE_SETUP
#line 538 "hphp.x"
{
        int bprefix = (yytext[0] != '<') ? 1 : 0;
        int label_len = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\r'?1:0);
        char *s = yytext+bprefix+3;
        while ((*s == ' ') || (*s == '\t')) {
                s++;
                label_len--;
        }
        _scanner->setHeredocLabel(s, label_len);
        _scanner->setToken(yytext, yyleng, s, label_len);
        BEGIN(ST_HEREDOC);
        return T_START_HEREDOC;
}
	YY_BREAK
case 146:
YY_RULE_SETUP
#line 552 "hphp.x"
{
        STEPPOS;
        BEGIN(ST_BACKQUOTE);
        return '`';
}
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 558 "hphp.x"
{
        yyless(0);
        BEGIN(ST_HEREDOC);
}
	YY_BREAK
case 148:
YY_RULE_SETUP
#line 563 "hphp.x"
{
        int label_len = yyleng-1;
        if (yytext[label_len-1]==';') {
                label_len--;
        }
        if (label_len == _scanner->getHeredocLabelLen() &&
            !memcmp(yytext, _scanner->getHeredocLabel(), label_len)) {
                _scanner->setToken(yytext, label_len, yytext, label_len);
                yyless(label_len);
                _scanner->resetHeredoc();
                BEGIN(ST_IN_SCRIPTING);
                return T_END_HEREDOC;
        } else {
                yymore();
                BEGIN(ST_HEREDOC);
        }
}
	YY_BREAK
case 149:
YY_RULE_SETUP
#line 581 "hphp.x"
{
        char *end = yytext + yyleng - 1;

        if (end[-1] == ';') {
                end--;
                yyleng--;
        }
        int heredocLen = _scanner->getHeredocLabelLen();
        if (yyleng > heredocLen &&
            !memcmp(end - heredocLen, _scanner->getHeredocLabel(),
                    heredocLen)) {
                int len = yyleng - heredocLen - 2;
                           /* 2 for newline before and after label */
                if (len > 0 &&
                    yytext[len - 1] == '\r' && yytext[len] == '\n') {
                        len--;
                }
                yyless(yyleng - 2);
                yyleng -= heredocLen - 1;
                std::string strval =
                  _scanner->scanEscapeString(yytext, len, 0);
                _scanner->setToken(yytext, yyleng,
                                   strval.c_str(), strval.length());
                BEGIN(ST_END_HEREDOC);
                return T_ENCAPSED_AND_WHITESPACE;
        } else {
          /* Go back to end of label, so the next match works correctly in
           * case of a variable or another label at the beginning of the
           * next line
           */
          yyless(yyleng - 1);
          yymore();
        }
}
	YY_BREAK
case 150:
YY_RULE_SETUP
#line 616 "hphp.x"
{
        BEGIN(ST_IN_SCRIPTING);
        STEPPOS;
        return T_END_HEREDOC;
}
	YY_BREAK
case 151:
YY_RULE_SETUP
#line 622 "hphp.x"
{
        _scanner->setToken(yytext, 1, yytext, 1);
        yy_push_state(ST_IN_SCRIPTING);
        yyless(1);
        return T_CURLY_OPEN;
}
	YY_BREAK
case 152:
YY_RULE_SETUP
#line 629 "hphp.x"
{
        std::string strval = _scanner->scanEscapeString(yytext, yyleng, '"');
        _scanner->setToken(yytext, yyleng, strval.c_str(), strval.length());
        return T_ENCAPSED_AND_WHITESPACE;
}
	YY_BREAK
case 153:
YY_RULE_SETUP
#line 635 "hphp.x"
{
        yyless(yyleng - 1);
        std::string strval = _scanner->scanEscapeString(yytext, yyleng, '"');
        _scanner->setToken(yytext, yyleng, strval.c_str(), strval.length());
        return T_ENCAPSED_AND_WHITESPACE;
}
	YY_BREAK
case 154:
YY_RULE_SETUP
#line 642 "hphp.x"
{
        std::string strval = _scanner->scanEscapeString(yytext, yyleng, '`');
        _scanner->setToken(yytext, yyleng, strval.c_str(), strval.length());
        return T_ENCAPSED_AND_WHITESPACE;
}
	YY_BREAK
case 155:
YY_RULE_SETUP
#line 648 "hphp.x"
{
        yyless(yyleng - 1);
        std::string strval = _scanner->scanEscapeString(yytext, yyleng, '`');
        _scanner->setToken(yytext, yyleng, strval.c_str(), strval.length());
        return T_ENCAPSED_AND_WHITESPACE;
}
	YY_BREAK
case 156:
YY_RULE_SETUP
#line 655 "hphp.x"
{
        std::string strval = _scanner->scanEscapeString(yytext, yyleng, 0);
        _scanner->setToken(yytext, yyleng, strval.c_str(), strval.length());
        return T_ENCAPSED_AND_WHITESPACE;
}
	YY_BREAK
case 157:
YY_RULE_SETUP
#line 661 "hphp.x"
{
        yyless(yyleng - 1);
        std::string strval = _scanner->scanEscapeString(yytext, yyleng, 0);
        _scanner->setToken(yytext, yyleng, strval.c_str(), strval.length());
        return T_ENCAPSED_AND_WHITESPACE;
}
	YY_BREAK
case 158:
YY_RULE_SETUP
#line 668 "hphp.x"
{
        BEGIN(ST_IN_SCRIPTING);
        return '"';
}
	YY_BREAK
case 159:
YY_RULE_SETUP
#line 673 "hphp.x"
{
        BEGIN(ST_IN_SCRIPTING);
        return '`';
}
	YY_BREAK
case YY_STATE_EOF(ST_COMMENT):
case YY_STATE_EOF(ST_DOC_COMMENT):
#line 678 "hphp.x"
{
        _scanner->error("Unterminated comment at end of file");
        return 0;
}
	YY_BREAK
case 160:
YY_RULE_SETUP
#line 683 "hphp.x"
{
        _scanner->error("Unexpected character in input: '%c' (ASCII=%d)",
                        yytext[0], yytext[0]);
}
	YY_BREAK
case 161:
YY_RULE_SETUP
#line 688 "hphp.x"
ECHO;
	YY_BREAK
#line 4699 "lex.eval_.cpp"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(ST_IN_HTML):
case YY_STATE_EOF(ST_IN_SCRIPTING):
case YY_STATE_EOF(ST_DOUBLE_QUOTES):
case YY_STATE_EOF(ST_BACKQUOTE):
case YY_STATE_EOF(ST_HEREDOC):
case YY_STATE_EOF(ST_START_HEREDOC):
case YY_STATE_EOF(ST_END_HEREDOC):
case YY_STATE_EOF(ST_LOOKING_FOR_PROPERTY):
case YY_STATE_EOF(ST_LOOKING_FOR_VARNAME):
case YY_STATE_EOF(ST_VAR_OFFSET):
case YY_STATE_EOF(ST_ONE_LINE_COMMENT):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_current_buffer->yy_n_chars = yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset =
				(int) (yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yy_flex_realloc( (void *) b->yy_ch_buf,
							 b->yy_buf_size + 2 );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );

		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;
	yy_current_state += YY_AT_BOL();

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1512 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;
	register char *yy_cp = yy_c_buf_p;

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yy_last_accepting_state = yy_current_state;
		yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1512 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1511);

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifndef YY_NO_UNPUT
#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		yy_current_buffer->yy_n_chars =
			yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;


	yytext_ptr = yy_bp;
	yy_hold_char = *yy_cp;
	yy_c_buf_p = yy_cp;
	}
#endif	/* ifndef YY_NO_UNPUT */


#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yy_c_buf_p - yytext_ptr;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/* fall through */

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						return EOF;

					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;

	yy_current_buffer->yy_at_bol = (c == '\n');

	return c;
	}
#endif /* YY_NO_INPUT */

#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( ! b )
		return;

	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yy_flex_free( (void *) b->yy_ch_buf );

	yy_flex_free( (void *) b );
	}



#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif


	{
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

#if YY_ALWAYS_INTERACTIVE
	b->yy_is_interactive = 1;
#else
#if YY_NEVER_INTERACTIVE
	b->yy_is_interactive = 0;
#else
	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
#endif
#endif
	}


#ifdef YY_USE_PROTOS
void yy_flush_buffer( YY_BUFFER_STATE b )
#else
void yy_flush_buffer( b )
YY_BUFFER_STATE b;
#endif

	{
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == yy_current_buffer )
		yy_load_buffer_state();
	}


#ifndef YY_NO_SCAN_BUFFER
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
#else
YY_BUFFER_STATE yy_scan_buffer( base, size )
char *base;
yy_size_t size;
#endif
	{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b );

	return b;
	}
#endif


#ifndef YY_NO_SCAN_STRING
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
#else
YY_BUFFER_STATE yy_scan_string( yy_str )
yyconst char *yy_str;
#endif
	{
	int len;
	for ( len = 0; yy_str[len]; ++len )
		;

	return yy_scan_bytes( yy_str, len );
	}
#endif


#ifndef YY_NO_SCAN_BYTES
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
#else
YY_BUFFER_STATE yy_scan_bytes( bytes, len )
yyconst char *bytes;
int len;
#endif
	{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) yy_flex_alloc( n );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
	}
#endif


#ifndef YY_NO_PUSH_STATE
#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		yy_size_t new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}
#endif


#ifndef YY_NO_POP_STATE
static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}
#endif


#ifndef YY_NO_TOP_STATE
static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}
#endif

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

#ifdef YY_USE_PROTOS
static void yy_fatal_error( yyconst char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
yyconst char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif

#ifdef YY_NEED_STRLEN
#ifdef YY_USE_PROTOS
static int yy_flex_strlen( yyconst char *s )
#else
static int yy_flex_strlen( s )
yyconst char *s;
#endif
	{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( yy_size_t size )
#else
static void *yy_flex_alloc( size )
yy_size_t size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, yy_size_t size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
yy_size_t size;
#endif
	{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}

#if YY_MAIN
int main()
	{
	yylex();
	return 0;
	}
#endif
#line 688 "hphp.x"

void _eval_scanner_init() {
  BEGIN(INITIAL);
}

static void suppress_defined_but_not_used_warnings() {
  yy_fatal_error(0);
  yyunput(0, 0);
  yy_top_state();
  suppress_defined_but_not_used_warnings();
}

void _eval_scanner_reset() {
   YY_FLUSH_BUFFER;
}
